{"repository_name":"avram","body":"# Avram\n\n[![API Documentation Website](https://img.shields.io/website?down_color=red&down_message=Offline&label=API%20Documentation&up_message=Online&url=https%3A%2F%2Fluckyframework.github.io%2Favram%2F)](https://luckyframework.github.io/avram)\n\nDatabase ORM built for the [Lucky Framework](https://luckyframework.org/) written in Crystal. Supporting PostgreSQL 12+ and based off principals of [Elixir Ecto](https://hexdocs.pm/ecto/Ecto.html) and [Rails ActiveRecord](https://guides.rubyonrails.org/active_record_basics.html).\n\n### Why Avram?\n\nThe name comes from [Henriette Avram](https://en.wikipedia.org/wiki/Henriette_Avram).\n\n> Henriette Davidson Avram (October 7, 1919 – April 22, 2006) was a computer programmer and systems analyst who developed the MARC format (Machine Readable Cataloging), the international data standard for bibliographic and holdings information in libraries.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  avram:\n    github: luckyframework/avram\n```\n\n## Usage\n\n```crystal\nrequire \"avram\"\n\n# Define your database\nclass AppDatabase < Avram::Database\nend\n\nAppDatabase.configure do |settings|\n  settings.credentials = Avram::Credentials.new(\n    database: \"my_app_development\",\n    username: \"postgres\",\n    hostname: \"localhost\",\n    password: \"password\",\n    port: 5432,\n  )\nend\n\n# Configure Avram to use your database\nAvram.configure do |settings|\n  settings.database_to_migrate = AppDatabase\n\n  # When `true`, allow lazy loading (N+1).\n  # If `false` raise an error if you forget to preload associations\n  settings.lazy_load_enabled = true\n  settings.query_cache_enabled = false\nend\n\n# Create your read-only model\nclass Person < Avram::Model\n  def self.database : Avram::Database.class\n    AppDatabase\n  end\n\n  table :people do\n    column name : String\n    column age : Int32\n    column programmer : Bool = true\n  end\nend\n\n# Insert a new record\nPerson::SaveOperation.create!(name: \"Henriette Davidson Avram\", age: 86)\n# Query for a record\nperson = Person::BaseQuery.new.name.ilike(\"%avram\")\nperson.programmer? #=> true\n```\n\nFor more details, read the [guides](https://luckyframework.org/guides/database/intro-to-avram-and-orms).\n\n## Contributing\n\n1. Fork it ( https://github.com/luckyframework/avram/fork )\n1. Create your feature branch (git checkout -b my-new-feature)\n1. Make your changes\n1. Run specs `crystal spec`\n1. Check formatting `crystal tool format spec/ src/`\n1. Check ameba `./bin/ameba`\n1. Commit your changes (git commit -am 'Add some feature')\n1. Push to the branch (git push origin my-new-feature)\n1. Create a new Pull Request\n\n> Docker is provided for quick setup and testing. You can run `./script/setup` and `./script/test` for ease.\n\n## Contributors\n\n[paulcsmith](https://github.com/paulcsmith) Paul Smith - Original Creator of Lucky\n\n<a href=\"https://github.com/luckyframework/avram/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=luckyframework/avram\" />\n</a>\n\nMade with [contrib.rocks](https://contrib.rocks).\n","program":{"html_id":"avram/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"avram","program":true,"enum":false,"alias":false,"const":false,"constants":[{"id":"IGNORE","name":"IGNORE","value":"Avram::Nothing.new","doc":"Use this value when you want to ignore updating a column\nin a SaveOperation instead of setting the column value to `nil`.\n\n```\n# Set value to x.value or ignore it if x.value is nil\nSaveThing.create!(\n  value: x.value || IGNORE\n)\n```","summary":"<p>Use this value when you want to ignore updating a column in a SaveOperation instead of setting the column value to <code>nil</code>.</p>"}],"types":[{"html_id":"avram/Array","path":"Array.html","kind":"class","full_name":"Array(T)","name":"Array","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Indexable/Mutable","kind":"module","full_name":"Indexable::Mutable","name":"Mutable"},{"html_id":"avram/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avram/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/blank_extensions.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L55"},{"filename":"src/avram/charms/array_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/array_extensions.cr#L1"},{"filename":"src/avram/object_extensions.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L19"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Indexable/Mutable","kind":"module","full_name":"Indexable::Mutable","name":"Mutable"}],"doc":"An `Array` is an ordered, integer-indexed collection of objects of type T.\n\nArray indexing starts at 0. A negative index is assumed to be\nrelative to the end of the array: -1 indicates the last element,\n-2 is the next to last element, and so on.\n\nAn `Array` can be created using the usual `new` method (several are provided), or with an array literal:\n\n```\nArray(Int32).new  # => []\n[1, 2, 3]         # Array(Int32)\n[1, \"hello\", 'x'] # Array(Int32 | String | Char)\n```\n\nSee [`Array` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/array.html) in the language reference.\n\nAn `Array` can have mixed types, meaning T will be a union of types, but these are determined\nwhen the array is created, either by specifying T or by using an array literal. In the latter\ncase, T will be set to the union of the array literal elements' types.\n\nWhen creating an empty array you must always specify T:\n\n```\n[] of Int32 # same as Array(Int32)\n[]          # syntax error\n```\n\nAn `Array` is implemented using an internal buffer of some capacity\nand is reallocated when elements are pushed to it when more capacity\nis needed. This is normally known as a [dynamic array](http://en.wikipedia.org/wiki/Dynamic_array).\n\nYou can use a special array literal syntax with other types too, as long as they define an argless\n`new` method and a `<<` method. `Set` is one such type:\n\n```\nset = Set{1, 2, 3} # => Set{1, 2, 3}\nset.class          # => Set(Int32)\n```\n\nThe above is the same as this:\n\n```\nset = Set(typeof(1, 2, 3)).new\nset << 1\nset << 2\nset << 3\n```","summary":"<p>An <code><a href=\"Array.html\">Array</a></code> is an ordered, integer-indexed collection of objects of type T.</p>","class_methods":[{"html_id":"adapter-class-method","name":"adapter","doc":"Proxy to the `T`'s adapter so we can call methods like\n`Array(String).adapter.to_db([\"test\"])`","summary":"<p>Proxy to the <code>T</code>'s adapter so we can call methods like <code><a href=\"Array.html\">Array</a>(<a href=\"String.html\">String</a>)<a href=\"Array.html#adapter-class-method\">.adapter</a>.to_db([&quot;test&quot;])</code></p>","abstract":false,"location":{"filename":"src/avram/charms/array_extensions.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/array_extensions.cr#L4"},"def":{"name":"adapter","visibility":"Public","body":"T.adapter"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/avram/blank_extensions.cr","line_number":56,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L56"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"empty?"},"external_var":false},{"html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","doc":"Arrays of any size should be considered present","summary":"<p>Arrays of any size should be considered present</p>","abstract":false,"location":{"filename":"src/avram/object_extensions.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L21"},"def":{"name":"blank_for_validates_required?","return_type":"Bool","visibility":"Public","body":"false"},"external_var":false}]},{"html_id":"avram/Avram","path":"Avram.html","kind":"module","full_name":"Avram","name":"Avram","abstract":false,"ancestors":[{"html_id":"avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"locations":[{"filename":"src/avram.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram.cr#L26"},{"filename":"src/avram/chrono_units.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L1"},{"filename":"src/avram/database/column_info.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L1"},{"filename":"src/avram/database/database_info.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L1"},{"filename":"src/avram/database/table_info.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L1"},{"filename":"src/avram/errors.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L1"},{"filename":"src/avram/nothing.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/nothing.cr#L5"},{"filename":"src/avram/order_by_clause.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause.cr#L1"},{"filename":"src/avram/order_by_clause/order_by.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L1"},{"filename":"src/avram/order_by_clause/order_by_random.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by_random.cr#L1"},{"filename":"src/avram/table_lock_mode.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L1"},{"filename":"src/avram/version.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/version.cr#L1"},{"filename":"src/lucky/ext/avram/errors.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/ext/avram/errors.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"FailedQueryLog","name":"FailedQueryLog","value":"Log.for(\"failed_query\")"},{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: lazy_load_enabled : Bool = true, example: nil, validation: nil}, {decl: database_to_migrate : Avram::Database.class, example: \"AppDatabase\", validation: nil}, {decl: time_formats : Array(String) = [] of String, example: nil, validation: nil}, {decl: i18n_backend : Avram::I18nBackend = Avram::I18n.new, example: \"Avram::I18n.new\", validation: nil}, {decl: query_cache_enabled : Bool = false, example: nil, validation: nil}, {decl: setup_database_name : String = \"postgres\", example: nil, validation: nil}] of Nil"},{"id":"Log","name":"Log","value":"::Log.for(Avram)"},{"id":"QueryLog","name":"QueryLog","value":"Log.for(\"query\")"},{"id":"SaveFailedLog","name":"SaveFailedLog","value":"Log.for(\"save_failed\")"},{"id":"VERSION","name":"VERSION","value":"\"1.4.0\""}],"included_modules":[{"html_id":"avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/avram.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram.cr#L27"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"initialize_logging:Nil-class-method","name":"initialize_logging","doc":"This subscribes to several `Pulsar` events.\nThese events are triggered during query and\noperation events","summary":"<p>This subscribes to several <code>Pulsar</code> events.</p>","abstract":false,"location":{"filename":"src/avram.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram.cr#L48"},"def":{"name":"initialize_logging","return_type":"Nil","visibility":"Public","body":"Avram::Events::QueryEvent.subscribe do |event, duration|\n  if event.query.starts_with?(\"TRUNCATE\")\n    next\n  end\n\n  Avram::QueryLog.dexter.info do\n    queryable = event.queryable\n    log_data = {query: event.query, args: event.args, duration: Pulsar.elapsed_text(duration)}\n\n    if queryable\n      {model: queryable}.merge(log_data)\n    else\n      log_data\n    end\n  end\nend\n\nAvram::Events::FailedQueryEvent.subscribe do |event|\n  Avram::FailedQueryLog.dexter.error do\n    queryable = event.queryable\n    log_data = {error_message: event.error_message, query: event.query, args: \"[FILTERED]\"}\n\n    if queryable\n      {model: queryable}.merge(log_data)\n    else\n      log_data\n    end\n  end\nend\n\nAvram::Events::SaveFailedEvent.subscribe do |event|\n  Avram::SaveFailedLog.dexter.warn do\n    {failed_to_save: event.operation_class, validation_errors: event.error_messages_as_string}\n  end\nend\n"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/avram.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram.cr#L27"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"instance_methods":[{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/avram.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram.cr#L27"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"macros":[{"html_id":"set_version-macro","name":"set_version","abstract":false,"location":{"filename":"src/avram/version.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/version.cr#L2"},"def":{"name":"set_version","visibility":"Public","body":"    VERSION = \n{{ (`shards version \\\"/home/runner/work/avram/avram/src/avram\\\"`).chomp.stringify.downcase }}\n\n  \n"}}],"types":[{"html_id":"avram/Avram/AddColumnAttributes","path":"Avram/AddColumnAttributes.html","kind":"module","full_name":"Avram::AddColumnAttributes","name":"AddColumnAttributes","abstract":false,"locations":[{"filename":"src/avram/add_column_attributes.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/add_column_attributes.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"This module creates methods for each column in a model that map\nto an `Avram::Attribute` as well as methods that fill those attributes\nwith values that comes from params.","summary":"<p>This module creates methods for each column in a model that map to an <code><a href=\"../Avram/Attribute.html\">Avram::Attribute</a></code> as well as methods that fill those attributes with values that comes from params.</p>"},{"html_id":"avram/Avram/AfterCommitCallback","path":"Avram/AfterCommitCallback.html","kind":"module","full_name":"Avram::AfterCommitCallback","name":"AfterCommitCallback","abstract":false,"ancestors":[{"html_id":"avram/Avram/CallbackHelpers","kind":"module","full_name":"Avram::CallbackHelpers","name":"CallbackHelpers"}],"locations":[{"filename":"src/avram/callbacks/after_commit_callback.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/after_commit_callback.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/CallbackHelpers","kind":"module","full_name":"Avram::CallbackHelpers","name":"CallbackHelpers"}],"including_types":[{"html_id":"avram/Avram/DeleteCallbacks","kind":"module","full_name":"Avram::DeleteCallbacks","name":"DeleteCallbacks"},{"html_id":"avram/Avram/SaveCallbacks","kind":"module","full_name":"Avram::SaveCallbacks","name":"SaveCallbacks"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"after_commit(method_name,if_if=nil,unless_unless=nil)-macro","name":"after_commit","doc":"Run the given method after save and after successful transaction commit\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_commit notify_post_author\n\n  private def notify_post_author(comment : Comment)\n    NewCommentNotificationEmail.new(comment, to: comment.author!).deliver_now\n  end\nend\n```\n","summary":"<p>Run the given method after save and after successful transaction commit</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = nil, unless _unless = nil)","args_html":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks/after_commit_callback.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/after_commit_callback.cr#L24"},"def":{"name":"after_commit","args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_commit, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_commit, {{ method_name }}, :unless)\n    {% end %}\n\n    after_commit(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do |object|\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"html_id":"after_commit(if_if=nil,unless_unless=nil,&block)-macro","name":"after_commit","doc":"Run the given block after save and after successful transaction commit\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_commit do |comment|\n    NewCommentNotificationEmail.new(comment, to: comment.author!).deliver_now\n  end\nend\n```","summary":"<p>Run the given block after save and after successful transaction commit</p>","abstract":false,"args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = nil, unless _unless = nil, &block)","args_html":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/avram/callbacks/after_commit_callback.cr","line_number":47,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/after_commit_callback.cr#L47"},"def":{"name":"after_commit","args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your after_commit callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_commit, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_commit, :unless)\n    {% end %}\n\n    \n{%\n  if block.args.size != 1\n    raise(\"The 'after_commit' callback requires exactly 1 block arg to be passed.\\nExample:\\n  after_commit do |saved_user|\\n    some_method(saved_user)\\n  end\")\n  end\n%}\n\n    def after_commit(\n%object\n : T)\n      \n{% if @type.methods.map(&.name).includes?((:after_commit).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/Associations","path":"Avram/Associations.html","kind":"module","full_name":"Avram::Associations","name":"Associations","abstract":false,"ancestors":[{"html_id":"avram/Avram/Associations/BelongsTo","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo"},{"html_id":"avram/Avram/Associations/HasOne","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne"},{"html_id":"avram/Avram/Associations/HasMany","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany"}],"locations":[{"filename":"src/avram/associations.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/associations.cr#L3"},{"filename":"src/avram/associations/belongs_to.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/associations/belongs_to.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Associations/BelongsTo","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo"},{"html_id":"avram/Avram/Associations/HasMany","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany"},{"html_id":"avram/Avram/Associations/HasOne","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne"}],"including_types":[{"html_id":"avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"types":[{"html_id":"avram/Avram/Associations/BelongsTo","path":"Avram/Associations/BelongsTo.html","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo","abstract":false,"locations":[{"filename":"src/avram/associations/belongs_to.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/associations/belongs_to.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"}],"namespace":{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},"macros":[{"html_id":"belongs_to(type_declaration,foreign_key=nil)-macro","name":"belongs_to","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":""}],"args_string":"(type_declaration, foreign_key = nil)","args_html":"(type_declaration, foreign_key = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/associations/belongs_to.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/associations/belongs_to.cr#L2"},"def":{"name":"belongs_to","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":""}],"visibility":"Public","body":"    \n{% assoc_name = type_declaration.var %}\n\n\n    \n{% if type_declaration.type.is_a?(Union) %}\n      {% model = type_declaration.type.types.first %}\n      {% nilable = true %}\n    {% else %}\n      {% model = type_declaration.type %}\n      {% nilable = false %}\n    {% end %}\n\n\n    \n{% if !foreign_key %}\n      {% foreign_key = \"#{assoc_name}_id\".id %}\n    {% end %}\n\n\n    column \n{{ foreign_key.id }}\n : \n{{ model }}\n::PrimaryKeyType\n{% if nilable %}?{% end %}\n\n\n    association \\\n      assoc_name: :\n{{ assoc_name.id }}\n,\n      type: \n{{ model }}\n,\n      foreign_key: :\n{{ foreign_key.id }}\n,\n      relationship_type: :belongs_to\n\n    define_belongs_to_private_assoc_getter(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key.id }}\n, \n{{ nilable }}\n)\n    Avram::Associations.__define_public_preloaded_getters(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ nilable }}\n)\n    Avram::Associations.__define_preloaded_setter(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ nilable }}\n)\n    define_belongs_to_base_query(\n{{ @type }}\n, \n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key.id }}\n)\n  \n"}}]},{"html_id":"avram/Avram/Associations/HasMany","path":"Avram/Associations/HasMany.html","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany","abstract":false,"locations":[{"filename":"src/avram/associations/has_many.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/associations/has_many.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"}],"namespace":{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},"macros":[{"html_id":"has_many(type_declaration,through=nil,foreign_key=nil,base_query_class=nil)-macro","name":"has_many","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"through","default_value":"nil","external_name":"through","restriction":""},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"base_query_class","default_value":"nil","external_name":"base_query_class","restriction":""}],"args_string":"(type_declaration, through = nil, foreign_key = nil, base_query_class = nil)","args_html":"(type_declaration, through = <span class=\"n\">nil</span>, foreign_key = <span class=\"n\">nil</span>, base_query_class = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/associations/has_many.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/associations/has_many.cr#L2"},"def":{"name":"has_many","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"through","default_value":"nil","external_name":"through","restriction":""},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"base_query_class","default_value":"nil","external_name":"base_query_class","restriction":""}],"visibility":"Public","body":"    \n{% if !through.is_a?(NilLiteral) && (!through.is_a?(ArrayLiteral) || through.any? do |item|\n  !item.is_a?(SymbolLiteral)\nend) %}\n      {% through.raise(\"'through' on #{@type.name} must be given an Array(Symbol). Instead, got: #{through}\\n\\nExample...\\n   has_many comments : Comment\\n   has_many related_authors : User, through: [:comments, :author]\\n\\nLearn more about associations: https://luckyframework.org/guides/database/models#model-associations\")\n%}\n    {% end %}\n\n    \n{% if !through.is_a?(NilLiteral) && through.size < 2 %}\n      {% through.raise(\"'through' on #{@type.name} must be given at least two items. Instead, got: #{through}\\n\\nExample...\\n   has_many comments : Comment\\n   has_many related_authors : User, through: [:comments, :author]\\n\\nLearn more about associations: https://luckyframework.org/guides/database/models#model-associations\")\n%}\n    {% end %}\n\n    \n{% assoc_name = type_declaration.var %}\n\n\n    \n{% if foreign_key %}{% else %}\n      {% foreign_key = \"#{(@type.name.underscore.split(\"::\")).last.id}_id\".id %}\n    {% end %}\n\n\n    \n{% foreign_key = foreign_key.id %}\n\n    \n{% model = type_declaration.type %}\n\n    \n{% query_class = base_query_class || \"#{model}::BaseQuery\".id %}\n\n\n    association \\\n      assoc_name: :\n{{ assoc_name }}\n,\n      type: \n{{ type_declaration.type }}\n,\n      foreign_key: :\n{{ foreign_key }}\n,\n      through: \n{{ through }}\n,\n      relationship_type: :has_many,\n      base_query_class: \n{{ query_class }}\n\n\n    define_has_many_lazy_loading(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n, \n{{ through }}\n)\n    define_has_many_base_query(\n{{ @type }}\n, \n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n, \n{{ through }}\n, \n{{ query_class }}\n)\n  \n"}}]},{"html_id":"avram/Avram/Associations/HasOne","path":"Avram/Associations/HasOne.html","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne","abstract":false,"locations":[{"filename":"src/avram/associations/has_one.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/associations/has_one.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"}],"namespace":{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},"macros":[{"html_id":"has_one(type_declaration,foreign_key=nil)-macro","name":"has_one","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":""}],"args_string":"(type_declaration, foreign_key = nil)","args_html":"(type_declaration, foreign_key = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/associations/has_one.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/associations/has_one.cr#L2"},"def":{"name":"has_one","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":""}],"visibility":"Public","body":"    \n{% assoc_name = type_declaration.var %}\n\n\n    \n{% if type_declaration.type.is_a?(Union) %}\n      {% model = type_declaration.type.types.first %}\n      {% nilable = true %}\n    {% else %}\n      {% model = type_declaration.type %}\n      {% nilable = false %}\n    {% end %}\n\n\n    \n{% if foreign_key %}{% else %}\n      {% foreign_key = \"#{(@type.name.underscore.split(\"::\")).last.id}_id\".id %}\n    {% end %}\n\n\n    \n{% foreign_key = foreign_key.id %}\n\n\n    association \\\n      assoc_name: :\n{{ assoc_name.id }}\n,\n      type: \n{{ model }}\n,\n      foreign_key: :\n{{ foreign_key.id }}\n,\n      relationship_type: :has_one\n\n    Avram::Associations.__define_public_preloaded_getters(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ nilable }}\n)\n    Avram::Associations.__define_preloaded_setter(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ nilable }}\n)\n    define_has_one_private_assoc_getter(\n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n, \n{{ nilable }}\n)\n    define_has_one_base_query(\n{{ @type }}\n, \n{{ assoc_name }}\n, \n{{ model }}\n, \n{{ foreign_key }}\n)\n  \n"}}]}]},{"html_id":"avram/Avram/Attribute","path":"Avram/Attribute.html","kind":"class","full_name":"Avram::Attribute(T)","name":"Attribute","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/attribute.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/PermittedAttribute","kind":"class","full_name":"Avram::PermittedAttribute(T)","name":"PermittedAttribute"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(name:Symbol,value:T|Nil,param_key:String,param:Array(String)|Avram::Uploadable|String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::Symbol"},{"name":"value","external_name":"value","restriction":"T | ::Nil"},{"name":"param_key","external_name":"param_key","restriction":"::String"},{"name":"param","default_value":"nil","external_name":"param","restriction":"::Array(::String) | ::Avram::Uploadable | ::String | ::Nil"}],"args_string":"(name : Symbol, value : T | Nil, param_key : String, param : Array(String) | Avram::Uploadable | String | Nil = nil)","args_html":"(name : Symbol, value : T | <a href=\"../Nil.html\">Nil</a>, param_key : <a href=\"../String.html\">String</a>, param : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>) | <a href=\"../Avram/Uploadable.html\">Avram::Uploadable</a> | <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/attribute.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L13"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::Symbol"},{"name":"value","external_name":"value","restriction":"T | ::Nil"},{"name":"param_key","external_name":"param_key","restriction":"::String"},{"name":"param","default_value":"nil","external_name":"param","restriction":"::Array(::String) | ::Avram::Uploadable | ::String | ::Nil"}],"visibility":"Public","body":"_ = Attribute(T).allocate\n_.initialize(name, value, param_key, param)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"[](key)-instance-method","name":"[]","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/avram/attribute.cr","line_number":167,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L167"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"call_value_instead_error_message(\".[key]\")"},"external_var":false},{"html_id":"[]?(key)-instance-method","name":"[]?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/avram/attribute.cr","line_number":171,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L171"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"call_value_instead_error_message(\".[key]?\")"},"external_var":false},{"html_id":"add_error(message:String=\"isinvalid\")-instance-method","name":"add_error","abstract":false,"args":[{"name":"message","default_value":"\"is invalid\"","external_name":"message","restriction":"String"}],"args_string":"(message : String = \"is invalid\")","args_html":"(message : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;is invalid&quot;</span>)","location":{"filename":"src/avram/attribute.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L34"},"def":{"name":"add_error","args":[{"name":"message","default_value":"\"is invalid\"","external_name":"message","restriction":"String"}],"visibility":"Public","body":"@errors << message"},"external_var":false},{"html_id":"add_error(message:Proc|Avram::CallableErrorMessage)-instance-method","name":"add_error","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"Proc | Avram::CallableErrorMessage"}],"args_string":"(message : Proc | Avram::CallableErrorMessage)","args_html":"(message : Proc | <a href=\"../Avram/CallableErrorMessage.html\">Avram::CallableErrorMessage</a>)","location":{"filename":"src/avram/attribute.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L38"},"def":{"name":"add_error","args":[{"name":"message","external_name":"message","restriction":"Proc | Avram::CallableErrorMessage"}],"visibility":"Public","body":"message_string = message.call(@name.to_s, @value.to_s)\nadd_error(message_string)\n"},"external_var":false},{"html_id":"allow_blank=(allow_blank:Bool)-instance-method","name":"allow_blank=","doc":"This can be used as an escape hatch when you\nmay have a blank string that's allowed to be saved.","summary":"<p>This can be used as an escape hatch when you may have a blank string that's allowed to be saved.</p>","abstract":false,"args":[{"name":"allow_blank","external_name":"allow_blank","restriction":"Bool"}],"args_string":"(allow_blank : Bool)","args_html":"(allow_blank : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/avram/attribute.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L11"},"def":{"name":"allow_blank=","args":[{"name":"allow_blank","external_name":"allow_blank","restriction":"Bool"}],"visibility":"Public","body":"@allow_blank = allow_blank"},"external_var":false},{"html_id":"allow_blank?:Bool-instance-method","name":"allow_blank?","doc":"This can be used as an escape hatch when you\nmay have a blank string that's allowed to be saved.","summary":"<p>This can be used as an escape hatch when you may have a blank string that's allowed to be saved.</p>","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L11"},"def":{"name":"allow_blank?","return_type":"Bool","visibility":"Public","body":"@allow_blank"},"external_var":false},{"html_id":"changed?(from:T|Nil|Nothing=IGNORE,to:T|Nil|Nothing=IGNORE):Bool-instance-method","name":"changed?","abstract":false,"args":[{"name":"from","default_value":"IGNORE","external_name":"from","restriction":"T | ::Nil | Nothing"},{"name":"to","default_value":"IGNORE","external_name":"to","restriction":"T | ::Nil | Nothing"}],"args_string":"(from : T | Nil | Nothing = IGNORE, to : T | Nil | Nothing = IGNORE) : Bool","args_html":"(from : T | <a href=\"../Nil.html\">Nil</a> | <a href=\"../Avram/Nothing.html\">Nothing</a> = <span class=\"t\">IGNORE</span>, to : T | <a href=\"../Nil.html\">Nil</a> | <a href=\"../Avram/Nothing.html\">Nothing</a> = <span class=\"t\">IGNORE</span>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/attribute.cr","line_number":79,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L79"},"def":{"name":"changed?","args":[{"name":"from","default_value":"IGNORE","external_name":"from","restriction":"T | ::Nil | Nothing"},{"name":"to","default_value":"IGNORE","external_name":"to","restriction":"T | ::Nil | Nothing"}],"return_type":"Bool","visibility":"Public","body":"from = from.is_a?(Nothing) ? true : from == original_value\nto = to.is_a?(Nothing) ? true : to == value\n((value != original_value) && from) && to\n"},"external_var":false},{"html_id":"errors:Array(String)-instance-method","name":"errors","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":47,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L47"},"def":{"name":"errors","return_type":"Array(String)","visibility":"Public","body":"@errors.uniq"},"external_var":false},{"html_id":"extract(params:Avram::Paramable)-instance-method","name":"extract","abstract":false,"args":[{"name":"params","external_name":"params","restriction":"Avram::Paramable"}],"args_string":"(params : Avram::Paramable)","args_html":"(params : <a href=\"../Avram/Paramable.html\">Avram::Paramable</a>)","location":{"filename":"src/avram/attribute.cr","line_number":85,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L85"},"def":{"name":"extract","args":[{"name":"params","external_name":"params","restriction":"Avram::Paramable"}],"visibility":"Public","body":"extract(params, type: T)"},"external_var":false},{"html_id":"name:Symbol-instance-method","name":"name","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L3"},"def":{"name":"name","return_type":"Symbol","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"original_value:T|Nil-instance-method","name":"original_value","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":59,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L59"},"def":{"name":"original_value","return_type":"T | ::Nil","visibility":"Public","body":"if allow_blank?\n  @original_value\nelse\n  ensure_no_blank(@original_value)\nend"},"external_var":false},{"html_id":"param:Avram::Uploadable|Array(String)|String-instance-method","name":"param","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":30,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L30"},"def":{"name":"param","return_type":"Avram::Uploadable | Array(String) | String","visibility":"Public","body":"@param || value.to_s"},"external_var":false},{"html_id":"param_key:String-instance-method","name":"param_key","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L5"},"def":{"name":"param_key","return_type":"String","visibility":"Public","body":"@param_key"},"external_var":false},{"html_id":"permitted-instance-method","name":"permitted","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L19"},"def":{"name":"permitted","visibility":"Public","body":"@_permitted || (@_permitted = (Avram::PermittedAttribute(T).new(name: @name, param: @param, value: @value, param_key: @param_key).tap do |attribute|\n  attribute.allow_blank = allow_blank?\n  errors.each do |error|\n    attribute.add_error(error)\n  end\nend))"},"external_var":false},{"html_id":"reset_errors-instance-method","name":"reset_errors","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":43,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L43"},"def":{"name":"reset_errors","visibility":"Public","body":"@errors = [] of String"},"external_var":false},{"html_id":"to_f-instance-method","name":"to_f","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":159,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L159"},"def":{"name":"to_f","visibility":"Public","body":"call_value_instead_error_message(\".to_f\")"},"external_var":false},{"html_id":"to_f64-instance-method","name":"to_f64","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":163,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L163"},"def":{"name":"to_f64","visibility":"Public","body":"call_value_instead_error_message(\".to_f64\")"},"external_var":false},{"html_id":"to_i-instance-method","name":"to_i","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":147,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L147"},"def":{"name":"to_i","visibility":"Public","body":"call_value_instead_error_message(\".to_i\")"},"external_var":false},{"html_id":"to_i32-instance-method","name":"to_i32","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":151,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L151"},"def":{"name":"to_i32","visibility":"Public","body":"call_value_instead_error_message(\".to_i32\")"},"external_var":false},{"html_id":"to_i64-instance-method","name":"to_i64","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":155,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L155"},"def":{"name":"to_i64","visibility":"Public","body":"call_value_instead_error_message(\".to_i64\")"},"external_var":false},{"html_id":"to_s(time_format:String)-instance-method","name":"to_s","doc":"NOTE: to_s(io : IO) is used when passing an object\nin to string interpolation. Don't override that method.","summary":"<p><span class=\"flag purple\">NOTE</span>  to_s(io : IO) is used when passing an object in to string interpolation.</p>","abstract":false,"args":[{"name":"time_format","external_name":"time_format","restriction":"String"}],"args_string":"(time_format : String)","args_html":"(time_format : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/attribute.cr","line_number":143,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L143"},"def":{"name":"to_s","args":[{"name":"time_format","external_name":"time_format","restriction":"String"}],"visibility":"Public","body":"call_value_instead_error_message(\".to_s(...)\")"},"external_var":false},{"html_id":"to_s-instance-method","name":"to_s","doc":"These methods may accidentally get called on attributes\ninside of operations. Since these methods don't exist,\nchances are, you meant to call them on the value.\n```\nusername.to_s\n# VS\nusername.value.to_s\n```","summary":"<p>These methods may accidentally get called on attributes inside of operations.</p>","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":137,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L137"},"def":{"name":"to_s","visibility":"Public","body":"call_value_instead_error_message(\".to_s\")"},"external_var":false},{"html_id":"valid?:Bool-instance-method","name":"valid?","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":75,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L75"},"def":{"name":"valid?","return_type":"Bool","visibility":"Public","body":"errors.empty?"},"external_var":false},{"html_id":"value:T|Nil-instance-method","name":"value","abstract":false,"location":{"filename":"src/avram/attribute.cr","line_number":51,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L51"},"def":{"name":"value","return_type":"T | ::Nil","visibility":"Public","body":"if allow_blank?\n  @value\nelse\n  ensure_no_blank(@value)\nend"},"external_var":false},{"html_id":"value=(value:T|Nil)-instance-method","name":"value=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T | ::Nil"}],"args_string":"(value : T | Nil)","args_html":"(value : T | <a href=\"../Nil.html\">Nil</a>)","location":{"filename":"src/avram/attribute.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L4"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":"T | ::Nil"}],"visibility":"Public","body":"@value = value"},"external_var":false}],"macros":[{"html_id":"call_value_instead_error_message(method)-macro","name":"call_value_instead_error_message","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""}],"args_string":"(method)","args_html":"(method)","location":{"filename":"src/avram/attribute.cr","line_number":175,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L175"},"def":{"name":"call_value_instead_error_message","args":[{"name":"method","external_name":"method","restriction":""}],"visibility":"Public","body":"    \n{% raise(\"\\nThe #{method.id} method should not be called directly on attributes (#{@type}).\\nDid you mean to call it on the value property?\\n\\nTry this...\\n\\n  ▸ attribute.value#{method.id}\\n\")\n%}\n\n  \n"}}],"types":[{"html_id":"avram/Avram/Attribute/ErrorMessage","path":"Avram/Attribute/ErrorMessage.html","kind":"alias","full_name":"Avram::Attribute::ErrorMessage","name":"ErrorMessage","abstract":false,"locations":[{"filename":"src/avram/attribute.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Avram::CallableErrorMessage | Proc(String, String, String) | String)","aliased_html":"<a href=\"../../Avram/CallableErrorMessage.html\">Avram::CallableErrorMessage</a> | <a href=\"../../String.html\">String</a>, <a href=\"../../String.html\">String</a> -> <a href=\"../../String.html\">String</a> | <a href=\"../../String.html\">String</a>","const":false,"namespace":{"html_id":"avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute(T)","name":"Attribute"}}]},{"html_id":"avram/Avram/AvramError","path":"Avram/AvramError.html","kind":"class","full_name":"Avram::AvramError","name":"AvramError","abstract":false,"superclass":{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/ConnectionError","kind":"class","full_name":"Avram::ConnectionError","name":"ConnectionError"},{"html_id":"avram/Avram/FailedMigration","kind":"class","full_name":"Avram::FailedMigration","name":"FailedMigration"},{"html_id":"avram/Avram/FailedOperation","kind":"class","full_name":"Avram::FailedOperation","name":"FailedOperation"},{"html_id":"avram/Avram/ImpossibleValidation","kind":"class","full_name":"Avram::ImpossibleValidation","name":"ImpossibleValidation"},{"html_id":"avram/Avram/InvalidDatabaseNameError","kind":"class","full_name":"Avram::InvalidDatabaseNameError","name":"InvalidDatabaseNameError"},{"html_id":"avram/Avram/InvalidOperationError","kind":"class","full_name":"Avram::InvalidOperationError","name":"InvalidOperationError"},{"html_id":"avram/Avram/InvalidQueryError","kind":"class","full_name":"Avram::InvalidQueryError","name":"InvalidQueryError"},{"html_id":"avram/Avram/LazyLoadError","kind":"class","full_name":"Avram::LazyLoadError","name":"LazyLoadError"},{"html_id":"avram/Avram/MissingRequiredAssociationError","kind":"class","full_name":"Avram::MissingRequiredAssociationError","name":"MissingRequiredAssociationError"},{"html_id":"avram/Avram/PGClientNotInstalledError","kind":"class","full_name":"Avram::PGClientNotInstalledError","name":"PGClientNotInstalledError"},{"html_id":"avram/Avram/PGNotRunningError","kind":"class","full_name":"Avram::PGNotRunningError","name":"PGNotRunningError"},{"html_id":"avram/Avram/RecordNotFoundError","kind":"class","full_name":"Avram::RecordNotFoundError","name":"RecordNotFoundError"},{"html_id":"avram/Avram/Rollback","kind":"class","full_name":"Avram::Rollback","name":"Rollback"},{"html_id":"avram/Avram/SchemaMismatchError","kind":"class","full_name":"Avram::SchemaMismatchError","name":"SchemaMismatchError"},{"html_id":"avram/Avram/UnsupportedQueryError","kind":"class","full_name":"Avram::UnsupportedQueryError","name":"UnsupportedQueryError"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Generic Avram exception class.","summary":"<p>Generic Avram exception class.</p>"},{"html_id":"avram/Avram/BaseQueryTemplate","path":"Avram/BaseQueryTemplate.html","kind":"class","full_name":"Avram::BaseQueryTemplate","name":"BaseQueryTemplate","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/base_query_template.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/base_query_template.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"setup(type,columns,associations,*args,**named_args)-macro","name":"setup","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"columns","external_name":"columns","restriction":""},{"name":"associations","external_name":"associations","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(type, columns, associations, *args, **named_args)","args_html":"(type, columns, associations, *args, **named_args)","location":{"filename":"src/avram/base_query_template.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/base_query_template.cr#L2"},"def":{"name":"setup","args":[{"name":"type","external_name":"type","restriction":""},{"name":"columns","external_name":"columns","restriction":""},{"name":"associations","external_name":"associations","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":3,"visibility":"Public","body":"    class ::\n{{ type }}\n::BaseQuery\n      def_clone\n      include Avram::Queryable(\n{{ type }}\n)\n\n      \n{% if type.resolve.has_constant?(\"PRIMARY_KEY_NAME\") %}\n        include Avram::PrimaryKeyQueryable({{ type }})\n      {% end %}\n\n\n      macro generate_criteria_method(name, type)\n        def \n\\{\n{ name }}\n          \n\\{\n{ type }}.adapter.criteria(self, %(\"#{table_name}\".\"\n\\{\n{ name }}\"))\n        \nend\n      \nend\n\n      \n{% if named_args[:materialized_view] %}\n      def self.refresh_view(*, concurrent : Bool = false)\n        {{ type }}.write_database.exec(\"REFRESH MATERIALIZED VIEW #{concurrent ? \"CONCURRENTLY\" : \"\"} #{{{ type }}.table_name}\")\n      end\n      {% end %}\n\n\n      def update(\n          \n{% for column in columns %}\n            {{ column[:name] }} : {{ column[:type] }} | Avram::Nothing{% if column[:nilable] %} | Nil{% end %} = IGNORE,\n          {% end %}\n\n        ) : Int64\n\n        _changes = \n{} of Symbol => String?\n\n        \n{% for column in columns %}\n          if {{ column[:name] }}.nil?\n            _changes[:{{ column[:name] }}] = nil\n          elsif {{ column[:name] }}.is_a?(Avram::Nothing)\n            nil\n          else\n            value = {{ column[:name] }}.not_nil!.class.adapter.to_db({{ column[:name] }}).to_s\n            _changes[:{{ column[:name] }}] = value\n          end\n        {% end %}\n\n\n        \n{% if columns.map() do |__arg0|\n  __arg0[:name].stringify\nend.includes?(\"updated_at\") %}\n          _changes[:updated_at] = Time.adapter.to_db(Time.utc) if updated_at.is_a?(Avram::Nothing)\n        {% end %}\n\n\n        write_database.exec(\n          query.statement_for_update(_changes, return_columns: false),\n          args: query.args_for_update(_changes)\n        ).rows_affected\n      \nend\n\n      \n{% for column in columns %}\n        def {{ column[:name] }}(value)\n          {{ column[:name] }}.eq(value)\n        end\n\n        generate_criteria_method({{ column[:name] }}, {{ column[:type] }})\n\n        macro inherited\n          generate_criteria_method({{ column[:name] }}, {{ column[:type] }})\n        end\n      {% end %}\n\n\n      \n{% for assoc in associations %}\n        def join_{{ assoc[:assoc_name] }}\n          inner_join_{{ assoc[:assoc_name] }}\n        end\n\n        def join_{{ assoc[:assoc_name] }}(where_{{ assoc[:assoc_name] }} : {{ assoc[:type] }}::BaseQuery)\n          inner_join_{{ assoc[:assoc_name] }}(where_{{ assoc[:assoc_name] }})\n        end\n\n        {% for join_type in [\"Inner\", \"Left\", \"Right\", \"Full\"] %}\n          def {{ join_type.downcase.id }}_join_{{ assoc[:assoc_name] }}\n            {% if assoc[:relationship_type] == (:belongs_to) %}\n              join(\n                Avram::Join::{{ join_type.id }}.new(\n                  from: table_name,\n                  to: {{ assoc[:type] }}.table_name,\n                  primary_key: {{ assoc[:foreign_key].id.symbolize }},\n                  foreign_key: {{ assoc[:type] }}::PRIMARY_KEY_NAME\n                )\n              )\n            {% else %}{% if assoc[:relationship_type] == (:has_one) %}\n              join(\n                Avram::Join::{{ join_type.id }}.new(\n                  from: table_name,\n                  to: {{ assoc[:type] }}.table_name,\n                  foreign_key: {{ assoc[:foreign_key].id.symbolize }},\n                  primary_key: primary_key_name\n                )\n              )\n            {% else %}{% if assoc[:through] %}\n              {{ join_type.downcase.id }}_join_{{ assoc[:through].first.id }}\n                .__yield_where_{{ assoc[:through].first.id }} do |join_query|\n                  join_query.{{ join_type.downcase.id }}_join_{{ assoc[:through][1].id }}\n                end\n            {% else %}\n              join(\n                Avram::Join::{{ join_type.id }}.new(\n                  from: table_name,\n                  to: {{ assoc[:type] }}.table_name,\n                  foreign_key: {{ assoc[:foreign_key] }},\n                  primary_key: primary_key_name\n                )\n              )\n            {% end %}{% end %}{% end %}\n          end\n\n          def {{ join_type.downcase.id }}_join_{{ assoc[:assoc_name] }}(where_{{ assoc[:assoc_name] }} : {{ assoc[:type] }}::BaseQuery)\n            {{ join_type.downcase.id }}_join_{{ assoc[:assoc_name] }}.merge_query(where_{{ assoc[:assoc_name] }}.query)\n          end\n        {% end %}\n\n        @[Deprecated(\"Use any of the join methods with a where_{{ assoc[:assoc_name] }} argument instead\")]\n        def where_{{ assoc[:assoc_name] }}(assoc_query : {{ assoc[:type] }}::BaseQuery, auto_inner_join : Bool = true)\n          if auto_inner_join\n            join_{{ assoc[:assoc_name] }}.merge_query(assoc_query.query)\n          else\n            merge_query(assoc_query.query)\n          end\n        end\n\n        # :nodoc:\n        # Used internally for has_many through queries\n        def __yield_where_{{ assoc[:assoc_name] }}\n          assoc_query = yield {{ assoc[:type] }}::BaseQuery.new\n          merge_query(assoc_query.query)\n        end\n      {% end %}\n\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/BetweenCriteria","path":"Avram/BetweenCriteria.html","kind":"module","full_name":"Avram::BetweenCriteria(T, V)","name":"BetweenCriteria","abstract":false,"locations":[{"filename":"src/avram/criteria_extensions/between_criteria.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria_extensions/between_criteria.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Float64/Lucky/Criteria","kind":"class","full_name":"Float64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int16/Lucky/Criteria","kind":"class","full_name":"Int16::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int32/Lucky/Criteria","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int64/Lucky/Criteria","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Time/Lucky/Criteria","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"}},{"html_id":"avram/Avram/CallableErrorMessage","path":"Avram/CallableErrorMessage.html","kind":"module","full_name":"Avram::CallableErrorMessage","name":"CallableErrorMessage","abstract":false,"locations":[{"filename":"src/avram/validations/callable_error_message.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations/callable_error_message.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"call(attribute_name,attribute_value)-instance-method","name":"call","abstract":true,"args":[{"name":"attribute_name","external_name":"attribute_name","restriction":""},{"name":"attribute_value","external_name":"attribute_value","restriction":""}],"args_string":"(attribute_name, attribute_value)","args_html":"(attribute_name, attribute_value)","location":{"filename":"src/avram/validations/callable_error_message.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations/callable_error_message.cr#L2"},"def":{"name":"call","args":[{"name":"attribute_name","external_name":"attribute_name","restriction":""},{"name":"attribute_value","external_name":"attribute_value","restriction":""}],"visibility":"Public","body":""},"external_var":false}]},{"html_id":"avram/Avram/CallbackHelpers","path":"Avram/CallbackHelpers.html","kind":"module","full_name":"Avram::CallbackHelpers","name":"CallbackHelpers","abstract":false,"locations":[{"filename":"src/avram/callbacks/callback_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/callback_helpers.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/AfterCommitCallback","kind":"module","full_name":"Avram::AfterCommitCallback","name":"AfterCommitCallback"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"conditional_error_for_block_callbacks(callback,condition)-macro","name":"conditional_error_for_block_callbacks","abstract":false,"args":[{"name":"callback","external_name":"callback","restriction":""},{"name":"condition","external_name":"condition","restriction":""}],"args_string":"(callback, condition)","args_html":"(callback, condition)","location":{"filename":"src/avram/callbacks/callback_helpers.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/callback_helpers.cr#L19"},"def":{"name":"conditional_error_for_block_callbacks","args":[{"name":"callback","external_name":"callback","restriction":""},{"name":"condition","external_name":"condition","restriction":""}],"visibility":"Public","body":"    \n\\{%\n    \nraise <<-ERROR\n    You must pass a Symbol to `\n{{ condition.id }}\n` in \n{{ @type }}\n. The Symbol will reference a method you define.\n\n    Try this...\n\n      \n{{ callback.id }}\n(\n{{ condition.id }}\n: :check_condition?) do\n        # your callback block\n      end\n\n      def check_condition?\n        # return your bool value here\n      end\n    ERROR\n  %}\n  \n"}}]},{"html_id":"avram/Avram/Callbacks","path":"Avram/Callbacks.html","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks","abstract":false,"locations":[{"filename":"src/avram/callbacks/callbacks.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/callbacks.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"after_run(method_name)-macro","name":"after_run","doc":"Run the given method after `run` is called on an `Operation`.\nThe return value of the `run` method is passed to `method_name`.\n\n```\nafter_run :log_entry\n\nprivate def log_entry(value)\n  log_stuff(value)\nend\n```","summary":"<p>Run the given method after <code>run</code> is called on an <code><a href=\"../Avram/Operation.html\">Operation</a></code>.</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""}],"args_string":"(method_name)","args_html":"(method_name)","location":{"filename":"src/avram/callbacks/callbacks.cr","line_number":46,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/callbacks.cr#L46"},"def":{"name":"after_run","args":[{"name":"method_name","external_name":"method_name","restriction":""}],"visibility":"Public","body":"    after_run do |object|\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"html_id":"after_run(&block)-macro","name":"after_run","doc":"Run the given block after the operation runs\n\nThe return value from `run` will be passed to this block.\n\n```\nclass GenerateReport < Avram::Operation\n  after_run do |value|\n    value == \"some report\"\n  end\n\n  def run\n    \"some report\"\n  end\nend\n```","summary":"<p>Run the given block after the operation runs</p>","abstract":false,"location":{"filename":"src/avram/callbacks/callbacks.cr","line_number":67,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/callbacks.cr#L67"},"def":{"name":"after_run","block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{%\n  if block.args.size != 1\n    raise(\"The 'after_run' callback requires exactly 1 block arg to be passed.\\nExample:\\n  after_run { |value| some_method(value) }\")\n  end\n%}\n\n    def after_run(\n%object\n : T) : Nil forall T\n      \n{% if @type.methods.map(&.name).includes?((:after_run).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{{ block.args.first }}\n = \n%object\n\n      \n{{ block.body }}\n\n    \nend\n  \n"}},{"html_id":"before_run(method_name)-macro","name":"before_run","doc":"Run the given method before `run` is called on an `Operation`.\n\n```\nbefore_run :validate_inputs\n\nprivate def validate_inputs\n  validate_required data\nend\n```","summary":"<p>Run the given method before <code>run</code> is called on an <code><a href=\"../Avram/Operation.html\">Operation</a></code>.</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""}],"args_string":"(method_name)","args_html":"(method_name)","location":{"filename":"src/avram/callbacks/callbacks.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/callbacks.cr#L11"},"def":{"name":"before_run","args":[{"name":"method_name","external_name":"method_name","restriction":""}],"visibility":"Public","body":"    before_run do\n      \n{{ method_name.id }}\n\n    \nend\n  \n"}},{"html_id":"before_run-macro","name":"before_run","doc":"Run the given block before `run` is called on an `Operation`.\n\n```\nbefore_run do\n  validate_required data\nend\n```","summary":"<p>Run the given block before <code>run</code> is called on an <code><a href=\"../Avram/Operation.html\">Operation</a></code>.</p>","abstract":false,"location":{"filename":"src/avram/callbacks/callbacks.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/callbacks.cr#L24"},"def":{"name":"before_run","visibility":"Public","body":"    def before_run : Nil\n      \n{% if @type.methods.map(&.name).includes?((:before_run).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{{ yield }}\n\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/ChronoUnits","path":"Avram/ChronoUnits.html","kind":"enum","full_name":"Avram::ChronoUnits","name":"ChronoUnits","abstract":false,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/chrono_units.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L2"}],"repository_name":"avram","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Century","name":"Century","value":"0"},{"id":"Day","name":"Day","value":"1"},{"id":"Decade","name":"Decade","value":"2"},{"id":"Dow","name":"Dow","value":"3"},{"id":"Doy","name":"Doy","value":"4"},{"id":"Epoch","name":"Epoch","value":"5"},{"id":"Hour","name":"Hour","value":"6"},{"id":"Isodow","name":"Isodow","value":"7"},{"id":"Isoyear","name":"Isoyear","value":"8"},{"id":"Julian","name":"Julian","value":"9"},{"id":"Microseconds","name":"Microseconds","value":"10"},{"id":"Millennium","name":"Millennium","value":"11"},{"id":"Milliseconds","name":"Milliseconds","value":"12"},{"id":"Minute","name":"Minute","value":"13"},{"id":"Month","name":"Month","value":"14"},{"id":"Quarter","name":"Quarter","value":"15"},{"id":"Second","name":"Second","value":"16"},{"id":"Timezone","name":"Timezone","value":"17"},{"id":"TimezoneHour","name":"TimezoneHour","value":"18"},{"id":"TimezoneMinute","name":"TimezoneMinute","value":"19"},{"id":"Week","name":"Week","value":"20"},{"id":"Year","name":"Year","value":"21"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"century?-instance-method","name":"century?","doc":"Returns `true` if this enum value equals `Century`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Century\">Century</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L3"},"def":{"name":"century?","visibility":"Public","body":"self == Century"},"external_var":false},{"html_id":"day?-instance-method","name":"day?","doc":"Returns `true` if this enum value equals `Day`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Day\">Day</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L4"},"def":{"name":"day?","visibility":"Public","body":"self == Day"},"external_var":false},{"html_id":"decade?-instance-method","name":"decade?","doc":"Returns `true` if this enum value equals `Decade`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Decade\">Decade</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L5"},"def":{"name":"decade?","visibility":"Public","body":"self == Decade"},"external_var":false},{"html_id":"dow?-instance-method","name":"dow?","doc":"Returns `true` if this enum value equals `Dow`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Dow\">Dow</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L6"},"def":{"name":"dow?","visibility":"Public","body":"self == Dow"},"external_var":false},{"html_id":"doy?-instance-method","name":"doy?","doc":"Returns `true` if this enum value equals `Doy`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Doy\">Doy</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L7"},"def":{"name":"doy?","visibility":"Public","body":"self == Doy"},"external_var":false},{"html_id":"epoch?-instance-method","name":"epoch?","doc":"Returns `true` if this enum value equals `Epoch`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Epoch\">Epoch</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L8"},"def":{"name":"epoch?","visibility":"Public","body":"self == Epoch"},"external_var":false},{"html_id":"hour?-instance-method","name":"hour?","doc":"Returns `true` if this enum value equals `Hour`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Hour\">Hour</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L9"},"def":{"name":"hour?","visibility":"Public","body":"self == Hour"},"external_var":false},{"html_id":"isodow?-instance-method","name":"isodow?","doc":"Returns `true` if this enum value equals `Isodow`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Isodow\">Isodow</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L10"},"def":{"name":"isodow?","visibility":"Public","body":"self == Isodow"},"external_var":false},{"html_id":"isoyear?-instance-method","name":"isoyear?","doc":"Returns `true` if this enum value equals `Isoyear`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Isoyear\">Isoyear</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L11"},"def":{"name":"isoyear?","visibility":"Public","body":"self == Isoyear"},"external_var":false},{"html_id":"julian?-instance-method","name":"julian?","doc":"Returns `true` if this enum value equals `Julian`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Julian\">Julian</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L12"},"def":{"name":"julian?","visibility":"Public","body":"self == Julian"},"external_var":false},{"html_id":"microseconds?-instance-method","name":"microseconds?","doc":"Returns `true` if this enum value equals `Microseconds`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Microseconds\">Microseconds</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L13"},"def":{"name":"microseconds?","visibility":"Public","body":"self == Microseconds"},"external_var":false},{"html_id":"millennium?-instance-method","name":"millennium?","doc":"Returns `true` if this enum value equals `Millennium`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Millennium\">Millennium</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L14"},"def":{"name":"millennium?","visibility":"Public","body":"self == Millennium"},"external_var":false},{"html_id":"milliseconds?-instance-method","name":"milliseconds?","doc":"Returns `true` if this enum value equals `Milliseconds`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Milliseconds\">Milliseconds</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L15"},"def":{"name":"milliseconds?","visibility":"Public","body":"self == Milliseconds"},"external_var":false},{"html_id":"minute?-instance-method","name":"minute?","doc":"Returns `true` if this enum value equals `Minute`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Minute\">Minute</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L16"},"def":{"name":"minute?","visibility":"Public","body":"self == Minute"},"external_var":false},{"html_id":"month?-instance-method","name":"month?","doc":"Returns `true` if this enum value equals `Month`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Month\">Month</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L17"},"def":{"name":"month?","visibility":"Public","body":"self == Month"},"external_var":false},{"html_id":"quarter?-instance-method","name":"quarter?","doc":"Returns `true` if this enum value equals `Quarter`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Quarter\">Quarter</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L18"},"def":{"name":"quarter?","visibility":"Public","body":"self == Quarter"},"external_var":false},{"html_id":"second?-instance-method","name":"second?","doc":"Returns `true` if this enum value equals `Second`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Second\">Second</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L19"},"def":{"name":"second?","visibility":"Public","body":"self == Second"},"external_var":false},{"html_id":"timezone?-instance-method","name":"timezone?","doc":"Returns `true` if this enum value equals `Timezone`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Timezone\">Timezone</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L20"},"def":{"name":"timezone?","visibility":"Public","body":"self == Timezone"},"external_var":false},{"html_id":"timezone_hour?-instance-method","name":"timezone_hour?","doc":"Returns `true` if this enum value equals `TimezoneHour`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#TimezoneHour\">TimezoneHour</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L21"},"def":{"name":"timezone_hour?","visibility":"Public","body":"self == TimezoneHour"},"external_var":false},{"html_id":"timezone_minute?-instance-method","name":"timezone_minute?","doc":"Returns `true` if this enum value equals `TimezoneMinute`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#TimezoneMinute\">TimezoneMinute</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L22"},"def":{"name":"timezone_minute?","visibility":"Public","body":"self == TimezoneMinute"},"external_var":false},{"html_id":"week?-instance-method","name":"week?","doc":"Returns `true` if this enum value equals `Week`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Week\">Week</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":23,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L23"},"def":{"name":"week?","visibility":"Public","body":"self == Week"},"external_var":false},{"html_id":"year?-instance-method","name":"year?","doc":"Returns `true` if this enum value equals `Year`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/ChronoUnits.html#Year\">Year</a></code></p>","abstract":false,"location":{"filename":"src/avram/chrono_units.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/chrono_units.cr#L24"},"def":{"name":"year?","visibility":"Public","body":"self == Year"},"external_var":false}]},{"html_id":"avram/Avram/Connection","path":"Avram/Connection.html","kind":"class","full_name":"Avram::Connection","name":"Connection","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/connection.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/connection.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Handles the connection to the DB.","summary":"<p>Handles the connection to the DB.</p>","constructors":[{"html_id":"new(connection_string:String,database_class:Avram::Database.class)-class-method","name":"new","abstract":false,"args":[{"name":"connection_string","external_name":"connection_string","restriction":"String"},{"name":"database_class","external_name":"database_class","restriction":"Avram::Database.class"}],"args_string":"(connection_string : String, database_class : Avram::Database.class)","args_html":"(connection_string : <a href=\"../String.html\">String</a>, database_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","location":{"filename":"src/avram/connection.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/connection.cr#L5"},"def":{"name":"new","args":[{"name":"connection_string","external_name":"connection_string","restriction":"String"},{"name":"database_class","external_name":"database_class","restriction":"Avram::Database.class"}],"visibility":"Public","body":"_ = allocate\n_.initialize(connection_string, database_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"close:Nil-instance-method","name":"close","abstract":false,"location":{"filename":"src/avram/connection.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/connection.cr#L12"},"def":{"name":"close","return_type":"Nil","visibility":"Public","body":"@db.try(&.close)\n@db = nil\n"},"external_var":false},{"html_id":"connect_listen(*channels:String,&block:PQ::Notification->):Nil-instance-method","name":"connect_listen","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"String"}],"args_string":"(*channels : String, &block : PQ::Notification -> ) : Nil","args_html":"(*channels : <a href=\"../String.html\">String</a>, &block : PQ::Notification -> ) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/avram/connection.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/connection.cr#L17"},"def":{"name":"connect_listen","args":[{"name":"channels","external_name":"channels","restriction":"String"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(PQ::Notification ->)"},"return_type":"Nil","visibility":"Public","body":"begin\n  PG.connect_listen(@connection_string, *channels, &block)\nrescue DB::ConnectionRefused\n  raise(ConnectionError.new(connection_uri, database_class: @database_class))\nend"},"external_var":false},{"html_id":"open:DB::Database-instance-method","name":"open","abstract":false,"location":{"filename":"src/avram/connection.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/connection.cr#L8"},"def":{"name":"open","return_type":"DB::Database","visibility":"Public","body":"@db = try_connection!"},"external_var":false},{"html_id":"try_connection!:DB::Database-instance-method","name":"try_connection!","abstract":false,"location":{"filename":"src/avram/connection.cr","line_number":23,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/connection.cr#L23"},"def":{"name":"try_connection!","return_type":"DB::Database","visibility":"Public","body":"begin\n  DB.open(@connection_string)\nrescue DB::ConnectionRefused\n  raise(ConnectionError.new(connection_uri, database_class: @database_class))\nend"},"external_var":false}]},{"html_id":"avram/Avram/ConnectionError","path":"Avram/ConnectionError.html","kind":"class","full_name":"Avram::ConnectionError","name":"ConnectionError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":85,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L85"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_PG_PORT","name":"DEFAULT_PG_PORT","value":"5432"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(connection_details:URI,database_class:Avram::Database.class)-class-method","name":"new","abstract":false,"args":[{"name":"connection_details","external_name":"connection_details","restriction":"URI"},{"name":"database_class","external_name":"database_class","restriction":"Avram::Database.class"}],"args_string":"(connection_details : URI, database_class : Avram::Database.class)","args_html":"(connection_details : URI, database_class : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","location":{"filename":"src/avram/errors.cr","line_number":91,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L91"},"def":{"name":"new","args":[{"name":"connection_details","external_name":"connection_details","restriction":"URI"},{"name":"database_class","external_name":"database_class","restriction":"Avram::Database.class"}],"visibility":"Public","body":"_ = allocate\n_.initialize(connection_details, database_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"connection_details:URI-instance-method","name":"connection_details","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":88,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L88"},"def":{"name":"connection_details","return_type":"URI","visibility":"Public","body":"@connection_details"},"external_var":false},{"html_id":"database_class:Avram::Database.class-instance-method","name":"database_class","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":89,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L89"},"def":{"name":"database_class","return_type":"Avram::Database.class","visibility":"Public","body":"@database_class"},"external_var":false}]},{"html_id":"avram/Avram/Credentials","path":"Avram/Credentials.html","kind":"class","full_name":"Avram::Credentials","name":"Credentials","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/credentials.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"parse?(connection_url:String|Nil):Credentials|Nil-class-method","name":"parse?","doc":"Parse a postgres connection string URL. This may come from an\nenvironment variable.\nReturns `nil` if no `connection_url` is provided.\n\n```\nAvram::Credentials.parse?(ENV[\"DB_URL\"]?)\n```","summary":"<p>Parse a postgres connection string URL.</p>","abstract":false,"args":[{"name":"connection_url","external_name":"connection_url","restriction":"String | ::Nil"}],"args_string":"(connection_url : String | Nil) : Credentials | Nil","args_html":"(connection_url : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>) : <a href=\"../Avram/Credentials.html\">Credentials</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/avram/credentials.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L28"},"def":{"name":"parse?","args":[{"name":"connection_url","external_name":"connection_url","restriction":"String | ::Nil"}],"return_type":"Credentials | ::Nil","visibility":"Public","body":"if connection_url.nil?\n  return nil\nend\nparse(connection_url.as(String))\n"},"external_var":false}],"constructors":[{"html_id":"new(database:String,hostname:String|Nil=nil,username:String|Nil=nil,password:String|Nil=nil,port:Int32|Nil=nil,query:String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"database","external_name":"database","restriction":"String"},{"name":"hostname","default_value":"nil","external_name":"hostname","restriction":"String | ::Nil"},{"name":"username","default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"password","default_value":"nil","external_name":"password","restriction":"String | ::Nil"},{"name":"port","default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"query","default_value":"nil","external_name":"query","restriction":"String | ::Nil"}],"args_string":"(database : String, hostname : String | Nil = nil, username : String | Nil = nil, password : String | Nil = nil, port : Int32 | Nil = nil, query : String | Nil = nil)","args_html":"(database : <a href=\"../String.html\">String</a>, hostname : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, username : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, password : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, port : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, query : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/credentials.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L4"},"def":{"name":"new","args":[{"name":"database","external_name":"database","restriction":"String"},{"name":"hostname","default_value":"nil","external_name":"hostname","restriction":"String | ::Nil"},{"name":"username","default_value":"nil","external_name":"username","restriction":"String | ::Nil"},{"name":"password","default_value":"nil","external_name":"password","restriction":"String | ::Nil"},{"name":"port","default_value":"nil","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"query","default_value":"nil","external_name":"query","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(database, hostname, username, password, port, query)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"parse(connection_url:String):Credentials-class-method","name":"parse","doc":"Parse a postgres connection string URL. This may come from an\nenvironment variable.\n\n```\nAvram::Credentials.parse(ENV[\"DB_URL\"])\n```","summary":"<p>Parse a postgres connection string URL.</p>","abstract":false,"args":[{"name":"connection_url","external_name":"connection_url","restriction":"String"}],"args_string":"(connection_url : String) : Credentials","args_html":"(connection_url : <a href=\"../String.html\">String</a>) : <a href=\"../Avram/Credentials.html\">Credentials</a>","location":{"filename":"src/avram/credentials.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L39"},"def":{"name":"parse","args":[{"name":"connection_url","external_name":"connection_url","restriction":"String"}],"return_type":"Credentials","visibility":"Public","body":"uri = URI.parse(connection_url)\nnew(database: uri.path.to_s, hostname: uri.host, username: uri.user, password: uri.password, port: uri.port, query: uri.query)\n"},"external_var":false},{"html_id":"void:Credentials-class-method","name":"void","doc":"Used when you need to configure credentials,\nbut no database connection is made.","summary":"<p>Used when you need to configure credentials, but no database connection is made.</p>","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L17"},"def":{"name":"void","return_type":"Credentials","visibility":"Public","body":"new(database: \"unused\")"},"external_var":false}],"instance_methods":[{"html_id":"connection_string:String-instance-method","name":"connection_string","doc":"This is the full connection string used\nto connect to the PostgreSQL server.","summary":"<p>This is the full connection string used to connect to the PostgreSQL server.</p>","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":85,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L85"},"def":{"name":"connection_string","return_type":"String","visibility":"Public","body":"String.build do |io|\n  set_url_protocol(io)\n  set_url_creds(io)\n  set_url_host(io)\n  set_url_port(io)\nend"},"external_var":false},{"html_id":"database:String-instance-method","name":"database","doc":"The name of the database you want to connect to","summary":"<p>The name of the database you want to connect to</p>","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L52"},"def":{"name":"database","return_type":"String","visibility":"Public","body":"@database = @database.strip\nif @database.starts_with?('/')\n  @database = @database[1..-1]\nend\n\nif @database.empty?\n  raise(InvalidDatabaseNameError.new(\"The database name specified was blank. Be sure to set a value.\"))\nend\n\n@database\n"},"external_var":false},{"html_id":"hostname:String|Nil-instance-method","name":"hostname","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":63,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L63"},"def":{"name":"hostname","return_type":"String | ::Nil","visibility":"Public","body":"@hostname.try(&.strip).presence"},"external_var":false},{"html_id":"password:String|Nil-instance-method","name":"password","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":71,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L71"},"def":{"name":"password","return_type":"String | ::Nil","visibility":"Public","body":"@password.try(&.strip).presence"},"external_var":false},{"html_id":"port:Int32|Nil-instance-method","name":"port","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":75,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L75"},"def":{"name":"port","return_type":"Int32 | ::Nil","visibility":"Public","body":"@port"},"external_var":false},{"html_id":"query:String|Nil-instance-method","name":"query","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":79,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L79"},"def":{"name":"query","return_type":"String | ::Nil","visibility":"Public","body":"@query.try(&.strip).presence"},"external_var":false},{"html_id":"url:String-instance-method","name":"url","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L2"},"def":{"name":"url","return_type":"String","visibility":"Public","body":"@url"},"external_var":false},{"html_id":"url_without_query_params:String-instance-method","name":"url_without_query_params","doc":"Returns the postgres connection string without\nany query params.","summary":"<p>Returns the postgres connection string without any query params.</p>","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":96,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L96"},"def":{"name":"url_without_query_params","return_type":"String","visibility":"Public","body":"url.sub(\"?#{@query}\", \"\")"},"external_var":false},{"html_id":"username:String|Nil-instance-method","name":"username","abstract":false,"location":{"filename":"src/avram/credentials.cr","line_number":67,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/credentials.cr#L67"},"def":{"name":"username","return_type":"String | ::Nil","visibility":"Public","body":"@username.try(&.strip).presence"},"external_var":false}]},{"html_id":"avram/Avram/Criteria","path":"Avram/Criteria.html","kind":"class","full_name":"Avram::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/criteria.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Bool/Lucky/Criteria","kind":"class","full_name":"Bool::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Float64/Lucky/Criteria","kind":"class","full_name":"Float64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int16/Lucky/Criteria","kind":"class","full_name":"Int16::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int32/Lucky/Criteria","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int64/Lucky/Criteria","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/JSON/Any/Lucky/Criteria","kind":"class","full_name":"JSON::Any::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/JSON/Serializable/Lucky/Criteria","kind":"class","full_name":"JSON::Serializable::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Slice/Lucky/Criteria","kind":"class","full_name":"Slice::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/String/Lucky/Criteria","kind":"class","full_name":"String::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Time/Lucky/Criteria","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/UUID/Lucky/Criteria","kind":"class","full_name":"UUID::Lucky::Criteria(T, V)","name":"Criteria"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"asc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","name":"asc_order","abstract":false,"args":[{"name":"null_sorting","default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"args_string":"(null_sorting : Avram::OrderBy::NullSorting = :default) : T","args_html":"(null_sorting : <a href=\"../Avram/OrderBy/NullSorting.html\">Avram::OrderBy::NullSorting</a> = <span class=\"n\">:default</span>) : T","location":{"filename":"src/avram/criteria.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L14"},"def":{"name":"asc_order","args":[{"name":"null_sorting","default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"return_type":"T","visibility":"Public","body":"rows.order_by(Avram::OrderBy.new(column, :asc, null_sorting))"},"external_var":false},{"html_id":"column:Symbol|String-instance-method","name":"column","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L3"},"def":{"name":"column","return_type":"Symbol | String","visibility":"Public","body":"@column"},"external_var":false},{"html_id":"column=(column:Symbol|String)-instance-method","name":"column=","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(column : Symbol | String)","args_html":"(column : Symbol | <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L3"},"def":{"name":"column=","args":[{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"@column = column"},"external_var":false},{"html_id":"desc_order(null_sorting:Avram::OrderBy::NullSorting=:default):T-instance-method","name":"desc_order","abstract":false,"args":[{"name":"null_sorting","default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"args_string":"(null_sorting : Avram::OrderBy::NullSorting = :default) : T","args_html":"(null_sorting : <a href=\"../Avram/OrderBy/NullSorting.html\">Avram::OrderBy::NullSorting</a> = <span class=\"n\">:default</span>) : T","location":{"filename":"src/avram/criteria.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L10"},"def":{"name":"desc_order","args":[{"name":"null_sorting","default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"return_type":"T","visibility":"Public","body":"rows.order_by(Avram::OrderBy.new(column, :desc, null_sorting))"},"external_var":false},{"html_id":"eq(value):T-instance-method","name":"eq","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L22"},"def":{"name":"eq","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"check_just_nil!(typeof(value))\ncheck_nilable!(value)\nperform_eq(value)\n"},"external_var":false},{"html_id":"gt(value):T-instance-method","name":"gt","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":116,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L116"},"def":{"name":"gt","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::GreaterThan.new(column, V.adapter.to_db!(value)))"},"external_var":false},{"html_id":"gte(value):T-instance-method","name":"gte","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L120"},"def":{"name":"gte","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::GreaterThanOrEqualTo.new(column, V.adapter.to_db!(value)))"},"external_var":false},{"html_id":"have_any(values):T-instance-method","name":"have_any","abstract":false,"args":[{"name":"values","external_name":"values","restriction":""}],"args_string":"(values) : T","args_html":"(values) : T","location":{"filename":"src/avram/criteria.cr","line_number":157,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L157"},"def":{"name":"have_any","args":[{"name":"values","external_name":"values","restriction":""}],"return_type":"T","visibility":"Public","body":"values = values.map do |value|\n  V.adapter.to_db!(value)\nend\nadd_clause(Avram::Where::Any.new(column, values))\n"},"external_var":false},{"html_id":"in(values):T-instance-method","name":"in","abstract":false,"args":[{"name":"values","external_name":"values","restriction":""}],"args_string":"(values) : T","args_html":"(values) : T","location":{"filename":"src/avram/criteria.cr","line_number":152,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L152"},"def":{"name":"in","args":[{"name":"values","external_name":"values","restriction":""}],"return_type":"T","visibility":"Public","body":"values = values.map do |value|\n  V.adapter.to_db!(value)\nend\nadd_clause(Avram::Where::In.new(column, values))\n"},"external_var":false},{"html_id":"is_nil:T-instance-method","name":"is_nil","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":102,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L102"},"def":{"name":"is_nil","return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::Null.new(column))"},"external_var":false},{"html_id":"is_not_nil:T-instance-method","name":"is_not_nil","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":106,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L106"},"def":{"name":"is_not_nil","return_type":"T","visibility":"Public","body":"not()\nis_nil\n"},"external_var":false},{"html_id":"lt(value):T-instance-method","name":"lt","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":124,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L124"},"def":{"name":"lt","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::LessThan.new(column, V.adapter.to_db!(value)))"},"external_var":false},{"html_id":"lte(value):T-instance-method","name":"lte","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":128,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L128"},"def":{"name":"lte","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::LessThanOrEqualTo.new(column, V.adapter.to_db!(value)))"},"external_var":false},{"html_id":"nilable_eq(value):T-instance-method","name":"nilable_eq","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/criteria.cr","line_number":92,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L92"},"def":{"name":"nilable_eq","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"check_just_nil!(typeof(value))\n\nif value.nil?\n  is_nil\nelse\n  perform_eq(value)\nend\n"},"external_var":false},{"html_id":"not:Avram::Criteria-instance-method","name":"not","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":111,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L111"},"def":{"name":"not","return_type":"Avram::Criteria","visibility":"Public","body":"@negate_next_criteria = true\nself\n"},"external_var":false},{"html_id":"random_order:T-instance-method","name":"random_order","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L18"},"def":{"name":"random_order","return_type":"T","visibility":"Public","body":"rows.order_by(Avram::OrderByRandom.new)"},"external_var":false},{"html_id":"rows:T-instance-method","name":"rows","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L2"},"def":{"name":"rows","return_type":"T","visibility":"Public","body":"@rows"},"external_var":false},{"html_id":"rows=(rows:T)-instance-method","name":"rows=","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"}],"args_string":"(rows : T)","args_html":"(rows : T)","location":{"filename":"src/avram/criteria.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L2"},"def":{"name":"rows=","args":[{"name":"rows","external_name":"rows","restriction":"T"}],"visibility":"Public","body":"@rows = rows"},"external_var":false},{"html_id":"select_average:Float64|Nil-instance-method","name":"select_average","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":140,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L140"},"def":{"name":"select_average","return_type":"Float64 | ::Nil","visibility":"Public","body":"(rows.exec_scalar(&.select_average(column)).as(PG::Numeric | ::Nil)).try(&.to_f64)"},"external_var":false},{"html_id":"select_average!:Float64-instance-method","name":"select_average!","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":144,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L144"},"def":{"name":"select_average!","return_type":"Float64","visibility":"Public","body":"select_average || 0_f64"},"external_var":false},{"html_id":"select_max-instance-method","name":"select_max","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":136,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L136"},"def":{"name":"select_max","visibility":"Public","body":"to_expected_type(rows.exec_scalar(&.select_max(column)))"},"external_var":false},{"html_id":"select_min-instance-method","name":"select_min","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":132,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L132"},"def":{"name":"select_min","visibility":"Public","body":"to_expected_type(rows.exec_scalar(&.select_min(column)))"},"external_var":false},{"html_id":"select_sum-instance-method","name":"select_sum","abstract":false,"location":{"filename":"src/avram/criteria.cr","line_number":148,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L148"},"def":{"name":"select_sum","visibility":"Public","body":"rows.exec_scalar(&.select_sum(column))"},"external_var":false}],"macros":[{"html_id":"define_function_criteria(name,output_type=V,sql_name=nil)-macro","name":"define_function_criteria","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"output_type","default_value":"V","external_name":"output_type","restriction":""},{"name":"sql_name","default_value":"nil","external_name":"sql_name","restriction":""}],"args_string":"(name, output_type = V, sql_name = nil)","args_html":"(name, output_type = <span class=\"t\">V</span>, sql_name = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/criteria.cr","line_number":207,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L207"},"def":{"name":"define_function_criteria","args":[{"name":"name","external_name":"name","restriction":""},{"name":"output_type","default_value":"V","external_name":"output_type","restriction":""},{"name":"sql_name","default_value":"nil","external_name":"sql_name","restriction":""}],"visibility":"Public","body":"    \n{% sql_name = sql_name ? sql_name.id : name.id.upcase %}\n\n      def \n{{ name }}\n\n        Criteria(T,\n{{ output_type }}\n).new(rows, \"\n{{ sql_name }}\n(#{column})\")\n      \nend\n  \n"}}]},{"html_id":"avram/Avram/Database","path":"Avram/Database.html","kind":"class","full_name":"Avram::Database","name":"Database","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/database.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L1"},{"filename":"src/avram/database/column_info.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L2"},{"filename":"src/avram/database/database_info.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L2"},{"filename":"src/avram/database/table_info.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"close_connections!-class-method","name":"close_connections!","doc":"Close all available connections as well as the DB","summary":"<p>Close all available connections as well as the DB</p>","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":177,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L177"},"def":{"name":"close_connections!","visibility":"Public","body":"connections.values.map(&.close)\n@@db.try(&.close)\n"},"external_var":false},{"html_id":"connections-class-method","name":"connections","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L6"},"def":{"name":"connections","visibility":"Public","body":"@@connections"},"external_var":false},{"html_id":"credentials-class-method","name":"credentials","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":155,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L155"},"def":{"name":"credentials","visibility":"Public","body":"settings.credentials"},"external_var":false},{"html_id":"database_info:DatabaseInfo-class-method","name":"database_info","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":69,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L69"},"def":{"name":"database_info","return_type":"DatabaseInfo","visibility":"Public","body":"@@database_info || (@@database_info = DatabaseInfo.load(self))"},"external_var":false},{"html_id":"delete-class-method","name":"delete","doc":"Run a SQL `DELETE` on all tables in the database","summary":"<p>Run a SQL <code>DELETE</code> on all tables in the database</p>","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":49,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L49"},"def":{"name":"delete","visibility":"Public","body":"new.delete"},"external_var":false},{"html_id":"exec(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-class-method","name":"exec","doc":"Same as crystal-db's `DB::QueryMethods#exec` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#exec</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"exec","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"new.exec(query, *args_, **named_args, args: args, queryable: queryable)"},"external_var":false},{"html_id":"listen(*channels:String,&block:PQ::Notification->):Nil-class-method","name":"listen","doc":"Listens for `pg_notify()` calls on each channel in `channels`\nYields a `PQ::Notification` object with `channel`, `payload`, and `pid`.\n\n```\n# pg_notify(\"callback\", \"123\")\nAppDatabase.listen(\"callback\", \"jobs\") do |notification|\n  notification.channel # => \"callback\"\n  notification.payload # => \"123\"\nend\n```","summary":"<p>Listens for <code>pg_notify()</code> calls on each channel in <code>channels</code> Yields a <code>PQ::Notification</code> object with <code>channel</code>, <code>payload</code>, and <code>pid</code>.</p>","abstract":false,"args":[{"name":"channels","external_name":"channels","restriction":"String"}],"args_string":"(*channels : String, &block : PQ::Notification -> ) : Nil","args_html":"(*channels : <a href=\"../String.html\">String</a>, &block : PQ::Notification -> ) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/avram/database.cr","line_number":63,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L63"},"def":{"name":"listen","args":[{"name":"channels","external_name":"channels","restriction":"String"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(PQ::Notification ->)"},"return_type":"Nil","visibility":"Public","body":"new.listen(*channels, &block)"},"external_var":false},{"html_id":"lock_id:UInt64|Nil-class-method","name":"lock_id","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L7"},"def":{"name":"lock_id","return_type":"UInt64 | ::Nil","visibility":"Public","body":"@@lock_id"},"external_var":false},{"html_id":"lock_id=(lock_id:UInt64|Nil)-class-method","name":"lock_id=","abstract":false,"args":[{"name":"lock_id","external_name":"lock_id","restriction":"UInt64 | ::Nil"}],"args_string":"(lock_id : UInt64 | Nil)","args_html":"(lock_id : UInt64 | <a href=\"../Nil.html\">Nil</a>)","location":{"filename":"src/avram/database.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L7"},"def":{"name":"lock_id=","args":[{"name":"lock_id","external_name":"lock_id","restriction":"UInt64 | ::Nil"}],"visibility":"Public","body":"@@lock_id = lock_id"},"external_var":false},{"html_id":"query(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-class-method","name":"query","doc":"Same as crystal-db's `DB::QueryMethods#query` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"query","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"new.query(query, *args_, **named_args, args: args, queryable: queryable)"},"external_var":false},{"html_id":"query(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-class-method","name":"query","doc":"Same as crystal-db's `DB::QueryMethods#:query` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"new.query(query, *args_, args: args, queryable: queryable) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"query_all(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-class-method","name":"query_all","doc":"Same as crystal-db's `DB::QueryMethods#query_all` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_all</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"query_all","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"new.query_all(query, *args_, **named_args, args: args, queryable: queryable)"},"external_var":false},{"html_id":"query_all(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-class-method","name":"query_all","doc":"Same as crystal-db's `DB::QueryMethods#:query_all` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_all</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query_all","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"new.query_all(query, *args_, args: args, queryable: queryable) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"query_each(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-class-method","name":"query_each","doc":"Same as crystal-db's `DB::QueryMethods#:query_each` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_each</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query_each","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"new.query_each(query, *args_, args: args, queryable: queryable) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"query_one(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-class-method","name":"query_one","doc":"Same as crystal-db's `DB::QueryMethods#query_one` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_one</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"query_one","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"new.query_one(query, *args_, **named_args, args: args, queryable: queryable)"},"external_var":false},{"html_id":"query_one(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-class-method","name":"query_one","doc":"Same as crystal-db's `DB::QueryMethods#:query_one` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_one</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query_one","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"new.query_one(query, *args_, args: args, queryable: queryable) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"query_one?(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-class-method","name":"query_one?","doc":"Same as crystal-db's `DB::QueryMethods#query_one?` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_one?</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"query_one?","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"new.query_one?(query, *args_, **named_args, args: args, queryable: queryable)"},"external_var":false},{"html_id":"query_one?(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-class-method","name":"query_one?","doc":"Same as crystal-db's `DB::QueryMethods#:\"query_one?\"` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:&quot;query_one?&quot;</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query_one?","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"new.query_one?(query, *args_, args: args, queryable: queryable) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"rollback-class-method","name":"rollback","doc":"Rollback the current transaction","summary":"<p>Rollback the current transaction</p>","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L39"},"def":{"name":"rollback","visibility":"Public","body":"new.rollback"},"external_var":false},{"html_id":"run(&)-class-method","name":"run","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":163,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L163"},"def":{"name":"run","yields":1,"block_arity":1,"visibility":"Public","body":"new.run do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"scalar(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-class-method","name":"scalar","doc":"Same as crystal-db's `DB::QueryMethods#scalar` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#scalar</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"scalar","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"new.scalar(query, *args_, **named_args, args: args, queryable: queryable)"},"external_var":false},{"html_id":"setup_connection(&block:DB::Connection->Nil)-class-method","name":"setup_connection","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L28"},"def":{"name":"setup_connection","yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(DB::Connection -> Nil)"},"visibility":"Public","body":"new.db.setup_connection do |conn|\n  block.call(conn)\nend"},"external_var":false},{"html_id":"transaction(&)-class-method","name":"transaction","doc":"Wrap the block in a database transaction\n\n```\nAppDatabase.transaction do\n  # Create, read, update\n  # Force a rollback with AppDatabase.rollback\nend\n```","summary":"<p>Wrap the block in a database transaction</p>","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":81,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L81"},"def":{"name":"transaction","yields":1,"block_arity":1,"visibility":"Public","body":"new.transaction do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"truncate(**named_args)-class-method","name":"truncate","doc":"Run a SQL `TRUNCATE` on all tables in the database","summary":"<p>Run a SQL <code>TRUNCATE</code> on all tables in the database</p>","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L44"},"def":{"name":"truncate","double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"visibility":"Public","body":"new.truncate(**named_args)"},"external_var":false},{"html_id":"verify_connection-class-method","name":"verify_connection","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L34"},"def":{"name":"verify_connection","visibility":"Public","body":"new.connection.open.close"},"external_var":false},{"html_id":"with_lock_on(model:Avram::Model.class,mode:Avram::TableLockMode,&)-class-method","name":"with_lock_on","doc":"Creates a lock on the table in `mode`\n```\nAppDatabase.with_lock_on(User, mode: :row_exclusive) do\n  user = UserQuery.new.id(1).for_update.first\n  SaveUser.update!(user, name: \"New Name\")\nend\n```","summary":"<p>Creates a lock on the table in <code>mode</code> <code>AppDatabase.with_lock_on(User, mode: :row_exclusive) do   user = UserQuery.new.id(1).for_update.first   SaveUser.update!(user, name: &quot;New Name&quot;) end</code></p>","abstract":false,"args":[{"name":"model","external_name":"model","restriction":"Avram::Model.class"},{"name":"mode","external_name":"mode","restriction":"Avram::TableLockMode"}],"args_string":"(model : Avram::Model.class, mode : Avram::TableLockMode, &)","args_html":"(model : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Model</span>.<span class=\"k\">class</span>, mode : <a href=\"../Avram/TableLockMode.html\">Avram::TableLockMode</a>, &)","location":{"filename":"src/avram/database.cr","line_number":94,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L94"},"def":{"name":"with_lock_on","args":[{"name":"model","external_name":"model","restriction":"Avram::Model.class"},{"name":"mode","external_name":"mode","restriction":"Avram::TableLockMode"}],"yields":0,"block_arity":0,"visibility":"Public","body":"begin\n  exec(\"BEGIN\")\n  exec(\"LOCK TABLE #{model.table_name} IN #{mode} MODE\")\n  yield\nensure\n  exec(\"END\")\nend"},"external_var":false}],"instance_methods":[{"html_id":"exec(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-instance-method","name":"exec","doc":"Same as crystal-db's `DB::QueryMethods#exec` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#exec</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"exec","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.exec(query, *args_, **named_args, args: args)\n  end\nend"},"external_var":false},{"html_id":"publish_query_event(query,args_,args,queryable,&)-instance-method","name":"publish_query_event","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"queryable","external_name":"queryable","restriction":""}],"args_string":"(query, args_, args, queryable, &)","args_html":"(query, args_, args, queryable, &)","location":{"filename":"src/avram/database.cr","line_number":140,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L140"},"def":{"name":"publish_query_event","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","external_name":"args","restriction":""},{"name":"queryable","external_name":"queryable","restriction":""}],"yields":0,"block_arity":0,"visibility":"Public","body":"begin\n  logging_args = (DB::EnumerableConcat.build(args_, args)).to_s\n  Avram::Events::QueryEvent.publish(query: query, args: logging_args, queryable: queryable) do\n    yield\n  end\nrescue e : PQ::PQError\n  Avram::Events::FailedQueryEvent.publish(error_message: e.message.to_s, query: query, queryable: queryable, args: logging_args)\n  raise(e)\nend"},"external_var":false},{"html_id":"query(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-instance-method","name":"query","doc":"Same as crystal-db's `DB::QueryMethods#query` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"query","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query(query, *args_, **named_args, args: args)\n  end\nend"},"external_var":false},{"html_id":"query(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-instance-method","name":"query","doc":"Same as crystal-db's `DB::QueryMethods#:query` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query(query, *args_, args: args) do |*yield_args|\n      yield *yield_args\n    end\n  end\nend"},"external_var":false},{"html_id":"query_all(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-instance-method","name":"query_all","doc":"Same as crystal-db's `DB::QueryMethods#query_all` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_all</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"query_all","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_all(query, *args_, **named_args, args: args)\n  end\nend"},"external_var":false},{"html_id":"query_all(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-instance-method","name":"query_all","doc":"Same as crystal-db's `DB::QueryMethods#:query_all` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_all</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query_all","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_all(query, *args_, args: args) do |*yield_args|\n      yield *yield_args\n    end\n  end\nend"},"external_var":false},{"html_id":"query_each(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-instance-method","name":"query_each","doc":"Same as crystal-db's `DB::QueryMethods#:query_each` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_each</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query_each","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_each(query, *args_, args: args) do |*yield_args|\n      yield *yield_args\n    end\n  end\nend"},"external_var":false},{"html_id":"query_one(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-instance-method","name":"query_one","doc":"Same as crystal-db's `DB::QueryMethods#query_one` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_one</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"query_one","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_one(query, *args_, **named_args, args: args)\n  end\nend"},"external_var":false},{"html_id":"query_one(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-instance-method","name":"query_one","doc":"Same as crystal-db's `DB::QueryMethods#:query_one` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:query_one</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query_one","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_one(query, *args_, args: args) do |*yield_args|\n      yield *yield_args\n    end\n  end\nend"},"external_var":false},{"html_id":"query_one?(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-instance-method","name":"query_one?","doc":"Same as crystal-db's `DB::QueryMethods#query_one?` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#query_one?</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"query_one?","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_one?(query, *args_, **named_args, args: args)\n  end\nend"},"external_var":false},{"html_id":"query_one?(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args,&)-instance-method","name":"query_one?","doc":"Same as crystal-db's `DB::QueryMethods#:\"query_one?\"` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#:&quot;query_one?&quot;</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args, &)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args, &)","location":{"filename":"src/avram/database.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L120"},"def":{"name":"query_one?","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":1,"block_arity":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.query_one?(query, *args_, args: args) do |*yield_args|\n      yield *yield_args\n    end\n  end\nend"},"external_var":false},{"html_id":"scalar(query,*args_,args:Array|Nil=nil,queryable:String|Nil=nil,**named_args)-instance-method","name":"scalar","doc":"Same as crystal-db's `DB::QueryMethods#scalar` but with instrumentation","summary":"<p>Same as crystal-db's <code>DB::QueryMethods#scalar</code> but with instrumentation</p>","abstract":false,"args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query, *args_, args : Array | Nil = nil, queryable : String | Nil = nil, **named_args)","args_html":"(query, *args_, args : <a href=\"../Array.html\">Array</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, queryable : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, **named_args)","location":{"filename":"src/avram/database.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L103"},"def":{"name":"scalar","args":[{"name":"query","external_name":"query","restriction":""},{"name":"args_","external_name":"args_","restriction":""},{"name":"args","default_value":"nil","external_name":"args","restriction":"Array | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"publish_query_event(query, args_, args, queryable) do\n  run do |db|\n    db.scalar(query, *args_, **named_args, args: args)\n  end\nend"},"external_var":false}],"types":[{"html_id":"avram/Avram/Database/ColumnInfo","path":"Avram/Database/ColumnInfo.html","kind":"struct","full_name":"Avram::Database::ColumnInfo","name":"ColumnInfo","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"},{"html_id":"avram/DB/Serializable","kind":"module","full_name":"DB::Serializable","name":"Serializable"},{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/database/column_info.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/DB/Mappable","kind":"module","full_name":"DB::Mappable","name":"Mappable"},{"html_id":"avram/DB/Serializable","kind":"module","full_name":"DB::Serializable","name":"Serializable"}],"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"class_methods":[{"html_id":"from_rs(rs:DB::ResultSet)-class-method","name":"from_rs","abstract":false,"args":[{"name":"rs","external_name":"rs","restriction":"::DB::ResultSet"}],"args_string":"(rs : DB::ResultSet)","args_html":"(rs : DB::ResultSet)","location":{"filename":"src/avram/database/column_info.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L4"},"def":{"name":"from_rs","args":[{"name":"rs","external_name":"rs","restriction":"::DB::ResultSet"}],"visibility":"Public","body":"begin\n  objs = Array(self).new\n  rs.each do\n    objs << (self.new(rs))\n  end\n  objs\nensure\n  rs.close\nend"},"external_var":false}],"constructors":[{"html_id":"new(rs:DB::ResultSet)-class-method","name":"new","abstract":false,"args":[{"name":"rs","external_name":"rs","restriction":"::DB::ResultSet"}],"args_string":"(rs : DB::ResultSet)","args_html":"(rs : DB::ResultSet)","location":{"filename":"src/avram/database/column_info.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L4"},"def":{"name":"new","args":[{"name":"rs","external_name":"rs","restriction":"::DB::ResultSet"}],"visibility":"Public","body":"instance = allocate\ninstance.initialize(__set_for_db_serializable: rs)\nif instance.responds_to?(:finalize)\n  GC.add_finalizer(instance)\nend\ninstance\n"},"external_var":false}],"instance_methods":[{"html_id":"column_default:String|Nil-instance-method","name":"column_default","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L12"},"def":{"name":"column_default","return_type":"String | ::Nil","visibility":"Public","body":"@column_default"},"external_var":false},{"html_id":"column_default=(column_default:String|Nil)-instance-method","name":"column_default=","abstract":false,"args":[{"name":"column_default","external_name":"column_default","restriction":"String | ::Nil"}],"args_string":"(column_default : String | Nil)","args_html":"(column_default : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L12"},"def":{"name":"column_default=","args":[{"name":"column_default","external_name":"column_default","restriction":"String | ::Nil"}],"visibility":"Public","body":"@column_default = column_default"},"external_var":false},{"html_id":"column_name:String-instance-method","name":"column_name","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L10"},"def":{"name":"column_name","return_type":"String","visibility":"Public","body":"@column_name"},"external_var":false},{"html_id":"column_name=(column_name:String)-instance-method","name":"column_name=","abstract":false,"args":[{"name":"column_name","external_name":"column_name","restriction":"String"}],"args_string":"(column_name : String)","args_html":"(column_name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L10"},"def":{"name":"column_name=","args":[{"name":"column_name","external_name":"column_name","restriction":"String"}],"visibility":"Public","body":"@column_name = column_name"},"external_var":false},{"html_id":"data_type:String-instance-method","name":"data_type","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L13"},"def":{"name":"data_type","return_type":"String","visibility":"Public","body":"@data_type"},"external_var":false},{"html_id":"data_type=(data_type:String)-instance-method","name":"data_type=","abstract":false,"args":[{"name":"data_type","external_name":"data_type","restriction":"String"}],"args_string":"(data_type : String)","args_html":"(data_type : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L13"},"def":{"name":"data_type=","args":[{"name":"data_type","external_name":"data_type","restriction":"String"}],"visibility":"Public","body":"@data_type = data_type"},"external_var":false},{"html_id":"is_nullable:String-instance-method","name":"is_nullable","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L11"},"def":{"name":"is_nullable","return_type":"String","visibility":"Public","body":"@is_nullable"},"external_var":false},{"html_id":"is_nullable=(is_nullable:String)-instance-method","name":"is_nullable=","abstract":false,"args":[{"name":"is_nullable","external_name":"is_nullable","restriction":"String"}],"args_string":"(is_nullable : String)","args_html":"(is_nullable : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L11"},"def":{"name":"is_nullable=","args":[{"name":"is_nullable","external_name":"is_nullable","restriction":"String"}],"visibility":"Public","body":"@is_nullable = is_nullable"},"external_var":false},{"html_id":"nilable?:Bool-instance-method","name":"nilable?","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L15"},"def":{"name":"nilable?","return_type":"Bool","visibility":"Public","body":"is_nullable == \"YES\""},"external_var":false},{"html_id":"table:Avram::Database::TableInfo-instance-method","name":"table","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L19"},"def":{"name":"table","return_type":"Avram::Database::TableInfo","visibility":"Public","body":"TableInfo.new(table_name, table_type, table_schema)"},"external_var":false},{"html_id":"table_catalog:String-instance-method","name":"table_catalog","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L6"},"def":{"name":"table_catalog","return_type":"String","visibility":"Public","body":"@table_catalog"},"external_var":false},{"html_id":"table_catalog=(table_catalog:String)-instance-method","name":"table_catalog=","abstract":false,"args":[{"name":"table_catalog","external_name":"table_catalog","restriction":"String"}],"args_string":"(table_catalog : String)","args_html":"(table_catalog : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L6"},"def":{"name":"table_catalog=","args":[{"name":"table_catalog","external_name":"table_catalog","restriction":"String"}],"visibility":"Public","body":"@table_catalog = table_catalog"},"external_var":false},{"html_id":"table_name:String-instance-method","name":"table_name","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L8"},"def":{"name":"table_name","return_type":"String","visibility":"Public","body":"@table_name"},"external_var":false},{"html_id":"table_name=(table_name:String)-instance-method","name":"table_name=","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"String"}],"args_string":"(table_name : String)","args_html":"(table_name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L8"},"def":{"name":"table_name=","args":[{"name":"table_name","external_name":"table_name","restriction":"String"}],"visibility":"Public","body":"@table_name = table_name"},"external_var":false},{"html_id":"table_schema:String-instance-method","name":"table_schema","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L7"},"def":{"name":"table_schema","return_type":"String","visibility":"Public","body":"@table_schema"},"external_var":false},{"html_id":"table_schema=(table_schema:String)-instance-method","name":"table_schema=","abstract":false,"args":[{"name":"table_schema","external_name":"table_schema","restriction":"String"}],"args_string":"(table_schema : String)","args_html":"(table_schema : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L7"},"def":{"name":"table_schema=","args":[{"name":"table_schema","external_name":"table_schema","restriction":"String"}],"visibility":"Public","body":"@table_schema = table_schema"},"external_var":false},{"html_id":"table_type:String-instance-method","name":"table_type","abstract":false,"location":{"filename":"src/avram/database/column_info.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L9"},"def":{"name":"table_type","return_type":"String","visibility":"Public","body":"@table_type"},"external_var":false},{"html_id":"table_type=(table_type:String)-instance-method","name":"table_type=","abstract":false,"args":[{"name":"table_type","external_name":"table_type","restriction":"String"}],"args_string":"(table_type : String)","args_html":"(table_type : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/column_info.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/column_info.cr#L9"},"def":{"name":"table_type=","args":[{"name":"table_type","external_name":"table_type","restriction":"String"}],"visibility":"Public","body":"@table_type = table_type"},"external_var":false}]},{"html_id":"avram/Avram/Database/DatabaseCleaner","path":"Avram/Database/DatabaseCleaner.html","kind":"class","full_name":"Avram::Database::DatabaseCleaner","name":"DatabaseCleaner","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/database.cr","line_number":268,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L268"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"constructors":[{"html_id":"new(database:Avram::Database)-class-method","name":"new","abstract":false,"args":[{"name":"database","external_name":"database","restriction":"::Avram::Database"}],"args_string":"(database : Avram::Database)","args_html":"(database : <a href=\"../../Avram/Database.html\">Avram::Database</a>)","location":{"filename":"src/avram/database.cr","line_number":272,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L272"},"def":{"name":"new","args":[{"name":"database","external_name":"database","restriction":"::Avram::Database"}],"visibility":"Public","body":"_ = allocate\n_.initialize(database)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"delete-instance-method","name":"delete","abstract":false,"location":{"filename":"src/avram/database.cr","line_number":292,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L292"},"def":{"name":"delete","visibility":"Public","body":"if table_names.empty?\n  return\nend\n\ntable_names.each do |t|\n  statement = (\"DELETE FROM #{t}\")\n  database.exec(statement)\nend\n"},"external_var":false},{"html_id":"truncate(*,cascade:Bool=true,restart_identity:Bool=true)-instance-method","name":"truncate","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"cascade","default_value":"true","external_name":"cascade","restriction":"Bool"},{"name":"restart_identity","default_value":"true","external_name":"restart_identity","restriction":"Bool"}],"args_string":"(*, cascade : Bool = true, restart_identity : Bool = true)","args_html":"(*, cascade : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">true</span>, restart_identity : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">true</span>)","location":{"filename":"src/avram/database.cr","line_number":281,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L281"},"def":{"name":"truncate","args":[{"name":"","external_name":"","restriction":""},{"name":"cascade","default_value":"true","external_name":"cascade","restriction":"Bool"},{"name":"restart_identity","default_value":"true","external_name":"restart_identity","restriction":"Bool"}],"splat_index":0,"visibility":"Public","body":"if table_names.empty?\n  return\nend\n\ncascade_sql = cascade ? \" CASCADE\" : \"\"\nrestart_id_sql = restart_identity ? \" RESTART IDENTITY\" : \"\"\ntable_names_sql = table_names.join(\", \")\nsql = \"TRUNCATE TABLE #{table_names_sql}#{restart_id_sql}#{cascade_sql}\"\n\ndatabase.exec(sql)\n"},"external_var":false}]},{"html_id":"avram/Avram/Database/DatabaseInfo","path":"Avram/Database/DatabaseInfo.html","kind":"struct","full_name":"Avram::Database::DatabaseInfo","name":"DatabaseInfo","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/database/database_info.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"SQL_QUERY","name":"SQL_QUERY","value":"\"  SELECT columns.table_name,\\n        tables.table_type,\\n        columns.table_schema,\\n        columns.table_catalog,\\n        columns.column_name,\\n        columns.is_nullable,\\n        columns.column_default,\\n        columns.data_type\\n  FROM information_schema.columns as columns\\n  JOIN information_schema.tables as tables\\n    ON tables.table_name = columns.table_name\\n    AND tables.table_catalog = columns.table_catalog\\n    AND tables.table_schema = columns.table_schema\\n  WHERE columns.table_schema='public';\""}],"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"constructors":[{"html_id":"load(database:Avram::Database.class):DatabaseInfo-class-method","name":"load","abstract":false,"args":[{"name":"database","external_name":"database","restriction":"Avram::Database.class"}],"args_string":"(database : Avram::Database.class) : DatabaseInfo","args_html":"(database : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>) : <a href=\"../../Avram/Database/DatabaseInfo.html\">DatabaseInfo</a>","location":{"filename":"src/avram/database/database_info.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L21"},"def":{"name":"load","args":[{"name":"database","external_name":"database","restriction":"Avram::Database.class"}],"return_type":"DatabaseInfo","visibility":"Public","body":"column_infos = database.query(SQL_QUERY) do |rs|\n  ColumnInfo.from_rs(rs)\nend\n\ngrouped = column_infos.group_by(&.table)\ngrouped.each do |table, columns|\n  columns.each do |c|\n    table.columns << c\n  end\nend\ntable_infos = grouped.keys\nnew(table_infos)\n"},"external_var":false},{"html_id":"new(table_infos:Array(Avram::Database::TableInfo))-class-method","name":"new","abstract":false,"args":[{"name":"table_infos","external_name":"table_infos","restriction":"::Array(::Avram::Database::TableInfo)"}],"args_string":"(table_infos : Array(Avram::Database::TableInfo))","args_html":"(table_infos : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/Database/TableInfo.html\">Avram::Database::TableInfo</a>))","location":{"filename":"src/avram/database/database_info.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L34"},"def":{"name":"new","args":[{"name":"table_infos","external_name":"table_infos","restriction":"::Array(::Avram::Database::TableInfo)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table_infos)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"table(name:String):TableInfo|Nil-instance-method","name":"table","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : TableInfo | Nil","args_html":"(name : <a href=\"../../String.html\">String</a>) : <a href=\"../../Avram/Database/TableInfo.html\">TableInfo</a> | <a href=\"../../Nil.html\">Nil</a>","location":{"filename":"src/avram/database/database_info.cr","line_number":45,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L45"},"def":{"name":"table","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"TableInfo | ::Nil","visibility":"Public","body":"table_infos.find() do |__arg2|\n  __arg2.table_name == name\nend"},"external_var":false},{"html_id":"table?(name:String):Bool-instance-method","name":"table?","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","args_html":"(name : <a href=\"../../String.html\">String</a>) : <a href=\"../../Bool.html\">Bool</a>","location":{"filename":"src/avram/database/database_info.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L37"},"def":{"name":"table?","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"table_names.includes?(name)"},"external_var":false},{"html_id":"table_infos:Array(TableInfo)-instance-method","name":"table_infos","abstract":false,"location":{"filename":"src/avram/database/database_info.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L32"},"def":{"name":"table_infos","return_type":"Array(TableInfo)","visibility":"Public","body":"@table_infos"},"external_var":false},{"html_id":"table_infos=(table_infos:Array(TableInfo))-instance-method","name":"table_infos=","abstract":false,"args":[{"name":"table_infos","external_name":"table_infos","restriction":"Array(TableInfo)"}],"args_string":"(table_infos : Array(TableInfo))","args_html":"(table_infos : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/Database/TableInfo.html\">TableInfo</a>))","location":{"filename":"src/avram/database/database_info.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L32"},"def":{"name":"table_infos=","args":[{"name":"table_infos","external_name":"table_infos","restriction":"Array(TableInfo)"}],"visibility":"Public","body":"@table_infos = table_infos"},"external_var":false},{"html_id":"table_names:Array(String)-instance-method","name":"table_names","abstract":false,"location":{"filename":"src/avram/database/database_info.cr","line_number":41,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/database_info.cr#L41"},"def":{"name":"table_names","return_type":"Array(String)","visibility":"Public","body":"table_infos.map(&.table_name)"},"external_var":false}]},{"html_id":"avram/Avram/Database/FiberId","path":"Avram/Database/FiberId.html","kind":"alias","full_name":"Avram::Database::FiberId","name":"FiberId","abstract":false,"locations":[{"filename":"src/avram/database.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"}},{"html_id":"avram/Avram/Database/TableInfo","path":"Avram/Database/TableInfo.html","kind":"struct","full_name":"Avram::Database::TableInfo","name":"TableInfo","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/database/table_info.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Database","kind":"class","full_name":"Avram::Database","name":"Database"},"constructors":[{"html_id":"new(table_name:String,table_type:String,table_schema:String)-class-method","name":"new","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"::String"},{"name":"table_type","external_name":"table_type","restriction":"::String"},{"name":"table_schema","external_name":"table_schema","restriction":"::String"}],"args_string":"(table_name : String, table_type : String, table_schema : String)","args_html":"(table_name : <a href=\"../../String.html\">String</a>, table_type : <a href=\"../../String.html\">String</a>, table_schema : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/database/table_info.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L9"},"def":{"name":"new","args":[{"name":"table_name","external_name":"table_name","restriction":"::String"},{"name":"table_type","external_name":"table_type","restriction":"::String"},{"name":"table_schema","external_name":"table_schema","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table_name, table_type, table_schema)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column(name:String):ColumnInfo|Nil-instance-method","name":"column","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : ColumnInfo | Nil","args_html":"(name : <a href=\"../../String.html\">String</a>) : <a href=\"../../Avram/Database/ColumnInfo.html\">ColumnInfo</a> | <a href=\"../../Nil.html\">Nil</a>","location":{"filename":"src/avram/database/table_info.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L32"},"def":{"name":"column","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"ColumnInfo | ::Nil","visibility":"Public","body":"columns.find() do |__arg1|\n  __arg1.column_name == name\nend"},"external_var":false},{"html_id":"column?(name:String):Bool-instance-method","name":"column?","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","args_html":"(name : <a href=\"../../String.html\">String</a>) : <a href=\"../../Bool.html\">Bool</a>","location":{"filename":"src/avram/database/table_info.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L24"},"def":{"name":"column?","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"column_names.includes?(name)"},"external_var":false},{"html_id":"column_names:Array(String)-instance-method","name":"column_names","abstract":false,"location":{"filename":"src/avram/database/table_info.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L28"},"def":{"name":"column_names","return_type":"Array(String)","visibility":"Public","body":"columns.map(&.column_name)"},"external_var":false},{"html_id":"columns:Array(Avram::Database::ColumnInfo)-instance-method","name":"columns","abstract":false,"location":{"filename":"src/avram/database/table_info.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L7"},"def":{"name":"columns","visibility":"Public","body":"@columns"},"external_var":false},{"html_id":"migrations_table?:Bool-instance-method","name":"migrations_table?","abstract":false,"location":{"filename":"src/avram/database/table_info.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L36"},"def":{"name":"migrations_table?","return_type":"Bool","visibility":"Public","body":"table_name == \"migrations\""},"external_var":false},{"html_id":"table?:Bool-instance-method","name":"table?","abstract":false,"location":{"filename":"src/avram/database/table_info.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L16"},"def":{"name":"table?","return_type":"Bool","visibility":"Public","body":"table_type == \"BASE TABLE\""},"external_var":false},{"html_id":"table_name:String-instance-method","name":"table_name","abstract":false,"location":{"filename":"src/avram/database/table_info.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L4"},"def":{"name":"table_name","return_type":"String","visibility":"Public","body":"@table_name"},"external_var":false},{"html_id":"table_schema:String-instance-method","name":"table_schema","abstract":false,"location":{"filename":"src/avram/database/table_info.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L6"},"def":{"name":"table_schema","return_type":"String","visibility":"Public","body":"@table_schema"},"external_var":false},{"html_id":"table_type:String-instance-method","name":"table_type","abstract":false,"location":{"filename":"src/avram/database/table_info.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L5"},"def":{"name":"table_type","return_type":"String","visibility":"Public","body":"@table_type"},"external_var":false},{"html_id":"view?:Bool-instance-method","name":"view?","abstract":false,"location":{"filename":"src/avram/database/table_info.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database/table_info.cr#L20"},"def":{"name":"view?","return_type":"Bool","visibility":"Public","body":"table_type == \"VIEW\""},"external_var":false}]}]},{"html_id":"avram/Avram/DatabaseValidations","path":"Avram/DatabaseValidations.html","kind":"module","full_name":"Avram::DatabaseValidations(T)","name":"DatabaseValidations","abstract":false,"locations":[{"filename":"src/avram/database_validations.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/database_validations.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"}},{"html_id":"avram/Avram/DefineAttribute","path":"Avram/DefineAttribute.html","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute","abstract":false,"locations":[{"filename":"src/avram/define_attribute.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/define_attribute.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"attributes-instance-method","name":"attributes","abstract":false,"location":{"filename":"src/avram/define_attribute.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/define_attribute.cr#L34"},"def":{"name":"attributes","visibility":"Public","body":"[] of Avram::PermittedAttribute(Nil)"},"external_var":false}],"macros":[{"html_id":"attribute(type_declaration)-macro","name":"attribute","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","args_html":"(type_declaration)","location":{"filename":"src/avram/define_attribute.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/define_attribute.cr#L36"},"def":{"name":"attribute","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"visibility":"Public","body":"    \n{% if type_declaration.type.is_a?(Union) %}\n      {% if type_declaration.value.is_a?(Nop) %}\n        {% default_value = \"\" %}\n      {% else %}\n        {% default_value = \"= #{type_declaration.value}\" %}\n      {% end %}\n      {% raise(\"`attribute` in #{@type} must not be called with a type union or nilable type but was called with #{type_declaration.type}\\nIf you were attempting to create a nilable attribute, all attributes are considered nilable by default.\\n\\nTry this...\\n\\n  attribute #{type_declaration.var} : #{type_declaration.type.types.first} #{default_value.id}\\n\\nRead more on attributes: https://luckyframework.org/guides/database/validating-saving\")\n%}\n    {% end %}\n\n\n    \n{% ATTRIBUTES << type_declaration %}\n\n\n    \n{% type = type_declaration.type %}\n\n    \n{% name = type_declaration.var %}\n\n    \n{%\n  default_value = if type_declaration.value.is_a?(Nop)\n    nil\n  else\n    type_declaration.value\n  end\n%}\n\n    @_\n{{ name }}\n : Avram::Attribute(\n{{ type }}\n)?\n\n    \nensure_base_attributes_method_is_present\n\n    def attributes\n      ([\n{{ name }}\n] + previous_def + super).uniq\n    \nend\n\n    def \n{{ name }}\n\n      _\n{{ name }}\n.permitted\n    \nend\n\n    private def _\n{{ name }}\n\n      @_\n{{ name }}\n ||= Avram::Attribute(\n{{ type }}\n).new(\n        name: \n{{ name.id.symbolize }}\n,\n        value: \n{{ default_value }}\n,\n        param_key: self.class.param_key\n      ).tap do |attribute|\n        attribute.extract(params)\n      \nend\n    \nend\n  \n"}},{"html_id":"ensure_base_attributes_method_is_present-macro","name":"ensure_base_attributes_method_is_present","abstract":false,"location":{"filename":"src/avram/define_attribute.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/define_attribute.cr#L2"},"def":{"name":"ensure_base_attributes_method_is_present","visibility":"Public","body":"    \n{% if !(@type.methods.map(&.name).includes?((:attributes).id)) %}\n      def attributes\n        [] of Avram::PermittedAttribute(Nil)\n      end\n    {% end %}\n\n  \n"}},{"html_id":"file_attribute(key)-macro","name":"file_attribute","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","location":{"filename":"src/avram/define_attribute.cr","line_number":90,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/define_attribute.cr#L90"},"def":{"name":"file_attribute","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"    \n{% if key.is_a?(SymbolLiteral) %}{% else %}\n      {% raise(\"file_attribute must be declared with a Symbol\") %}\n    {% end %}\n\n\n    attribute \n{{ key.id }}\n : Avram::Uploadable\n  \n"}},{"html_id":"inherit_attributes-macro","name":"inherit_attributes","abstract":false,"location":{"filename":"src/avram/define_attribute.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/define_attribute.cr#L18"},"def":{"name":"inherit_attributes","visibility":"Public","body":"    \n\\{% if\n !@type.constant(:ATTRIBUTES) %}\n      ATTRIBUTES = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n attribute in @type.ancestors.first.constant :ATTRIBUTES %}\n        \n\\{% \nATTRIBUTES << attribute %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_attributes\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/DeleteCallbacks","path":"Avram/DeleteCallbacks.html","kind":"module","full_name":"Avram::DeleteCallbacks","name":"DeleteCallbacks","abstract":false,"ancestors":[{"html_id":"avram/Avram/AfterCommitCallback","kind":"module","full_name":"Avram::AfterCommitCallback","name":"AfterCommitCallback"},{"html_id":"avram/Avram/CallbackHelpers","kind":"module","full_name":"Avram::CallbackHelpers","name":"CallbackHelpers"}],"locations":[{"filename":"src/avram/callbacks/delete_callbacks.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/delete_callbacks.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/AfterCommitCallback","kind":"module","full_name":"Avram::AfterCommitCallback","name":"AfterCommitCallback"}],"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"after_delete(method_name,if_if=nil,unless_unless=nil)-macro","name":"after_delete","doc":"Same as `after_save` but with a different name","summary":"<p>Same as <code>after_save</code> but with a different name</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = nil, unless _unless = nil)","args_html":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks/delete_callbacks.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/delete_callbacks.cr#L52"},"def":{"name":"after_delete","args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_delete, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_delete, {{ method_name }}, :unless)\n    {% end %}\n\n    after_delete(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do |object|\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"html_id":"after_delete(if_if=nil,unless_unless=nil,&block)-macro","name":"after_delete","abstract":false,"args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = nil, unless _unless = nil, &block)","args_html":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/avram/callbacks/delete_callbacks.cr","line_number":64,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/delete_callbacks.cr#L64"},"def":{"name":"after_delete","args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your after_delete callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_delete, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_delete, :unless)\n    {% end %}\n\n    \n{%\n  if block.args.size != 1\n    raise(\"The 'after_delete' callback requires exactly 1 block arg to be passed.\\nExample:\\n  after_delete do |deleted_user|\\n    some_method(deleted_user)\\n  end\")\n  end\n%}\n\n    def after_delete(\n%object\n : T) : Nil\n      \n{% if @type.methods.map(&.name).includes?((:after_delete).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}},{"html_id":"before_delete(method_name,if_if=nil,unless_unless=nil)-macro","name":"before_delete","doc":"Same as `before_save`, but with a different name","summary":"<p>Same as <code>before_save</code>, but with a different name</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = nil, unless _unless = nil)","args_html":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks/delete_callbacks.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/delete_callbacks.cr#L7"},"def":{"name":"before_delete","args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:before_delete, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:before_delete, {{ method_name }}, :unless)\n    {% end %}\n\n    before_delete(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do\n      \n{{ method_name.id }}\n\n    \nend\n  \n"}},{"html_id":"before_delete(if_if=nil,unless_unless=nil)-macro","name":"before_delete","abstract":false,"args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = nil, unless _unless = nil)","args_html":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks/delete_callbacks.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/delete_callbacks.cr#L19"},"def":{"name":"before_delete","args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your before_delete callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:before_delete, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:before_delete, :unless)\n    {% end %}\n\n\n    def before_delete : Nil\n      \n{% if @type.methods.map(&.name).includes?((:before_delete).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ yield }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ yield }}\n      end\n      {% else %}\n        {{ yield }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/DeleteOperation","path":"Avram/DeleteOperation.html","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/AddColumnAttributes","kind":"module","full_name":"Avram::AddColumnAttributes","name":"AddColumnAttributes"},{"html_id":"avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"avram/Avram/DeleteCallbacks","kind":"module","full_name":"Avram::DeleteCallbacks","name":"DeleteCallbacks"},{"html_id":"avram/Avram/AfterCommitCallback","kind":"module","full_name":"Avram::AfterCommitCallback","name":"AfterCommitCallback"},{"html_id":"avram/Avram/CallbackHelpers","kind":"module","full_name":"Avram::CallbackHelpers","name":"CallbackHelpers"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/NeedyInitializerAndDeleteMethods","kind":"module","full_name":"Avram::NeedyInitializerAndDeleteMethods","name":"NeedyInitializerAndDeleteMethods"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/delete_operation.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L9"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ATTRIBUTES","name":"ATTRIBUTES","value":"[] of Nil"},{"id":"OPERATION_NEEDS","name":"OPERATION_NEEDS","value":"[] of Nil"}],"included_modules":[{"html_id":"avram/Avram/AddColumnAttributes","kind":"module","full_name":"Avram::AddColumnAttributes","name":"AddColumnAttributes"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/DeleteCallbacks","kind":"module","full_name":"Avram::DeleteCallbacks","name":"DeleteCallbacks"},{"html_id":"avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"avram/Avram/NeedyInitializerAndDeleteMethods","kind":"module","full_name":"Avram::NeedyInitializerAndDeleteMethods","name":"NeedyInitializerAndDeleteMethods"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"param_key:String-class-method","name":"param_key","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L34"},"def":{"name":"param_key","return_type":"String","visibility":"Public","body":"T.name.underscore"},"external_var":false}],"instance_methods":[{"html_id":"after_commit(_record:T)-instance-method","name":"after_commit","abstract":false,"args":[{"name":"_record","external_name":"_record","restriction":"T"}],"args_string":"(_record : T)","args_html":"(_record : T)","location":{"filename":"src/avram/delete_operation.cr","line_number":105,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L105"},"def":{"name":"after_commit","args":[{"name":"_record","external_name":"_record","restriction":"T"}],"visibility":"Public","body":""},"external_var":false},{"html_id":"after_delete(_record:T)-instance-method","name":"after_delete","abstract":false,"args":[{"name":"_record","external_name":"_record","restriction":"T"}],"args_string":"(_record : T)","args_html":"(_record : T)","location":{"filename":"src/avram/delete_operation.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L103"},"def":{"name":"after_delete","args":[{"name":"_record","external_name":"_record","restriction":"T"}],"visibility":"Public","body":""},"external_var":false},{"html_id":"before_delete-instance-method","name":"before_delete","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":101,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L101"},"def":{"name":"before_delete","visibility":"Public","body":""},"external_var":false},{"html_id":"custom_errors:Hash(Symbol,Array(String))-instance-method","name":"custom_errors","abstract":false,"def":{"name":"custom_errors","return_type":"Hash(Symbol, Array(String))","visibility":"Public","body":"@custom_errors"},"external_var":false},{"html_id":"delete:Bool-instance-method","name":"delete","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L40"},"def":{"name":"delete","return_type":"Bool","visibility":"Public","body":"before_delete\n\nif valid?\n  transaction_committed = write_database.transaction do\n    @record = delete_or_soft_delete(record)\n    after_delete(record)\n    true\n  end\n\n  if transaction_committed\n    mark_as_deleted\n    after_commit(record)\n    publish_delete_success_event\n    true\n  else\n    mark_as_failed\n    publish_delete_failed_event\n    false\n  end\nelse\n  mark_as_failed\n  publish_delete_failed_event\n  false\nend\n"},"external_var":false},{"html_id":"delete!-instance-method","name":"delete!","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":67,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L67"},"def":{"name":"delete!","visibility":"Public","body":"if delete\n  @record\nelse\n  raise(Avram::InvalidOperationError.new(operation: self))\nend"},"external_var":false},{"html_id":"deleted?:Bool-instance-method","name":"deleted?","doc":"Returns true if the operation has run and saved the record successfully","summary":"<p>Returns true if the operation has run and saved the record successfully</p>","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":92,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L92"},"def":{"name":"deleted?","return_type":"Bool","visibility":"Public","body":"delete_status == OperationStatus::Deleted"},"external_var":false},{"html_id":"mark_as_deleted:Bool-instance-method","name":"mark_as_deleted","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":86,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L86"},"def":{"name":"mark_as_deleted","return_type":"Bool","visibility":"Public","body":"self.delete_status = OperationStatus::Deleted\ntrue\n"},"external_var":false},{"html_id":"mark_as_failed:Bool-instance-method","name":"mark_as_failed","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":96,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L96"},"def":{"name":"mark_as_failed","return_type":"Bool","visibility":"Public","body":"self.delete_status = OperationStatus::DeleteFailed\nfalse\n"},"external_var":false},{"html_id":"primary_key_name(*args,**options)-instance-method","name":"primary_key_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/delete_operation.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L38"},"def":{"name":"primary_key_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.primary_key_name(*args, **options)"},"external_var":false},{"html_id":"primary_key_name(*args,**options,&)-instance-method","name":"primary_key_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/delete_operation.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L38"},"def":{"name":"primary_key_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.primary_key_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"table_name(*args,**options)-instance-method","name":"table_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/delete_operation.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L38"},"def":{"name":"table_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.table_name(*args, **options)"},"external_var":false},{"html_id":"table_name(*args,**options,&)-instance-method","name":"table_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/delete_operation.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L38"},"def":{"name":"table_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.table_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Returns `true` if all attributes are valid,\nand there's no custom errors","summary":"<p>Returns <code>true</code> if all attributes are valid, and there's no custom errors</p>","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":81,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L81"},"def":{"name":"valid?","return_type":"Bool","visibility":"Public","body":"default_validations\ncustom_errors.empty? && attributes.all?(&.valid?)\n"},"external_var":false},{"html_id":"write_database(*args,**options)-instance-method","name":"write_database","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/delete_operation.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L38"},"def":{"name":"write_database","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.write_database(*args, **options)"},"external_var":false},{"html_id":"write_database(*args,**options,&)-instance-method","name":"write_database","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/delete_operation.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L38"},"def":{"name":"write_database","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.write_database(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false}],"macros":[{"html_id":"param_key(key)-macro","name":"param_key","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","def":{"name":"param_key","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"      def self.param_key : String\n        \n{{ key.id.stringify }}\n\n      \nend\n    \n"}}],"types":[{"html_id":"avram/Avram/DeleteOperation/OperationStatus","path":"Avram/DeleteOperation/OperationStatus.html","kind":"enum","full_name":"Avram::DeleteOperation::OperationStatus","name":"OperationStatus","abstract":false,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/delete_operation.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L19"}],"repository_name":"avram","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Deleted","name":"Deleted","value":"0"},{"id":"DeleteFailed","name":"DeleteFailed","value":"1"},{"id":"Unperformed","name":"Unperformed","value":"2"}],"namespace":{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},"instance_methods":[{"html_id":"delete_failed?-instance-method","name":"delete_failed?","doc":"Returns `true` if this enum value equals `DeleteFailed`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/DeleteOperation/OperationStatus.html#DeleteFailed\">DeleteFailed</a></code></p>","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L21"},"def":{"name":"delete_failed?","visibility":"Public","body":"self == DeleteFailed"},"external_var":false},{"html_id":"deleted?-instance-method","name":"deleted?","doc":"Returns `true` if this enum value equals `Deleted`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/DeleteOperation/OperationStatus.html#Deleted\">Deleted</a></code></p>","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L20"},"def":{"name":"deleted?","visibility":"Public","body":"self == Deleted"},"external_var":false},{"html_id":"unperformed?-instance-method","name":"unperformed?","doc":"Returns `true` if this enum value equals `Unperformed`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/DeleteOperation/OperationStatus.html#Unperformed\">Unperformed</a></code></p>","abstract":false,"location":{"filename":"src/avram/delete_operation.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation.cr#L22"},"def":{"name":"unperformed?","visibility":"Public","body":"self == Unperformed"},"external_var":false}]}]},{"html_id":"avram/Avram/DeleteOperationTemplate","path":"Avram/DeleteOperationTemplate.html","kind":"class","full_name":"Avram::DeleteOperationTemplate","name":"DeleteOperationTemplate","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/delete_operation_template.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation_template.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"setup(type,columns,*args,**named_args)-macro","name":"setup","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(type, columns, *args, **named_args)","args_html":"(type, columns, *args, **named_args)","location":{"filename":"src/avram/delete_operation_template.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/delete_operation_template.cr#L2"},"def":{"name":"setup","args":[{"name":"type","external_name":"type","restriction":""},{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":2,"visibility":"Public","body":"    def delete_operation_class : ::\n{{ type }}\n::DeleteOperation.class\n      ::\n{{ type }}\n::DeleteOperation\n    \nend\n\n    class ::\n{{ type }}\n::DeleteOperation < Avram::DeleteOperation(\n{{ type }}\n)\n\n      add_column_attributes(\n{{ columns }}\n)\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/Events","path":"Avram/Events.html","kind":"module","full_name":"Avram::Events","name":"Events","abstract":false,"locations":[{"filename":"src/avram/events/delete_failed_event.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/delete_failed_event.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"types":[{"html_id":"avram/Avram/Events/DeleteFailedEvent","path":"Avram/Events/DeleteFailedEvent.html","kind":"class","full_name":"Avram::Events::DeleteFailedEvent","name":"DeleteFailedEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/events/delete_failed_event.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/delete_failed_event.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"class_methods":[{"html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"def":{"name":"logged_events","visibility":"Public","body":"@@logged_events"},"external_var":false},{"html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","def":{"name":"logged_events=","args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"visibility":"Public","body":"@@logged_events = logged_events"},"external_var":false}],"constructors":[{"html_id":"new(operation_class:String,errors:Hash(Symbol,Array(String)))-class-method","name":"new","abstract":false,"args":[{"name":"operation_class","external_name":"operation_class","restriction":"String"},{"name":"errors","external_name":"errors","restriction":"Hash(Symbol, Array(String))"}],"args_string":"(operation_class : String, errors : Hash(Symbol, Array(String)))","args_html":"(operation_class : <a href=\"../../String.html\">String</a>, errors : Hash(Symbol, <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>)))","location":{"filename":"src/avram/events/delete_failed_event.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/delete_failed_event.cr#L4"},"def":{"name":"new","args":[{"name":"operation_class","external_name":"operation_class","restriction":"String"},{"name":"errors","external_name":"errors","restriction":"Hash(Symbol, Array(String))"}],"visibility":"Public","body":"_ = allocate\n_.initialize(operation_class, errors)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"error_messages_as_string-instance-method","name":"error_messages_as_string","abstract":false,"location":{"filename":"src/avram/events/delete_failed_event.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/delete_failed_event.cr#L10"},"def":{"name":"error_messages_as_string","visibility":"Public","body":"String.build do |msg|\n  errors.each do |key, messages|\n    (msg << key) << ' '\n    messages.join(msg, \", \")\n  end\nend"},"external_var":false},{"html_id":"errors:Hash(Symbol,Array(String))-instance-method","name":"errors","abstract":false,"location":{"filename":"src/avram/events/delete_failed_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/delete_failed_event.cr#L2"},"def":{"name":"errors","visibility":"Public","body":"@errors"},"external_var":false},{"html_id":"operation_class:String-instance-method","name":"operation_class","abstract":false,"location":{"filename":"src/avram/events/delete_failed_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/delete_failed_event.cr#L2"},"def":{"name":"operation_class","visibility":"Public","body":"@operation_class"},"external_var":false},{"html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"def":{"name":"started_at","return_type":"Time","visibility":"Public","body":"@started_at"},"external_var":false}]},{"html_id":"avram/Avram/Events/DeleteSuccessEvent","path":"Avram/Events/DeleteSuccessEvent.html","kind":"class","full_name":"Avram::Events::DeleteSuccessEvent","name":"DeleteSuccessEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/events/delete_success_event.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/delete_success_event.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"class_methods":[{"html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"def":{"name":"logged_events","visibility":"Public","body":"@@logged_events"},"external_var":false},{"html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","def":{"name":"logged_events=","args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"visibility":"Public","body":"@@logged_events = logged_events"},"external_var":false}],"constructors":[{"html_id":"new(operation_class:String)-class-method","name":"new","abstract":false,"args":[{"name":"operation_class","external_name":"operation_class","restriction":"String"}],"args_string":"(operation_class : String)","args_html":"(operation_class : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/events/delete_success_event.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/delete_success_event.cr#L4"},"def":{"name":"new","args":[{"name":"operation_class","external_name":"operation_class","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(operation_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"operation_class:String-instance-method","name":"operation_class","abstract":false,"location":{"filename":"src/avram/events/delete_success_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/delete_success_event.cr#L2"},"def":{"name":"operation_class","visibility":"Public","body":"@operation_class"},"external_var":false},{"html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"def":{"name":"started_at","return_type":"Time","visibility":"Public","body":"@started_at"},"external_var":false}]},{"html_id":"avram/Avram/Events/FailedQueryEvent","path":"Avram/Events/FailedQueryEvent.html","kind":"class","full_name":"Avram::Events::FailedQueryEvent","name":"FailedQueryEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/events/failed_query_event.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/failed_query_event.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"class_methods":[{"html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"def":{"name":"logged_events","visibility":"Public","body":"@@logged_events"},"external_var":false},{"html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","def":{"name":"logged_events=","args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"visibility":"Public","body":"@@logged_events = logged_events"},"external_var":false}],"constructors":[{"html_id":"new(error_message:String,query:String,args:String|Nil,queryable:String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"error_message","external_name":"error_message","restriction":"String"},{"name":"query","external_name":"query","restriction":"String"},{"name":"args","external_name":"args","restriction":"String | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(error_message : String, query : String, args : String | Nil, queryable : String | Nil = nil)","args_html":"(error_message : <a href=\"../../String.html\">String</a>, query : <a href=\"../../String.html\">String</a>, args : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>, queryable : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/events/failed_query_event.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/failed_query_event.cr#L4"},"def":{"name":"new","args":[{"name":"error_message","external_name":"error_message","restriction":"String"},{"name":"query","external_name":"query","restriction":"String"},{"name":"args","external_name":"args","restriction":"String | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(error_message, query, args, queryable)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"args:String?-instance-method","name":"args","abstract":false,"location":{"filename":"src/avram/events/failed_query_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/failed_query_event.cr#L2"},"def":{"name":"args","visibility":"Public","body":"@args"},"external_var":false},{"html_id":"error_message:String-instance-method","name":"error_message","abstract":false,"location":{"filename":"src/avram/events/failed_query_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/failed_query_event.cr#L2"},"def":{"name":"error_message","visibility":"Public","body":"@error_message"},"external_var":false},{"html_id":"query:String-instance-method","name":"query","abstract":false,"location":{"filename":"src/avram/events/failed_query_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/failed_query_event.cr#L2"},"def":{"name":"query","visibility":"Public","body":"@query"},"external_var":false},{"html_id":"queryable:String?-instance-method","name":"queryable","abstract":false,"location":{"filename":"src/avram/events/failed_query_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/failed_query_event.cr#L2"},"def":{"name":"queryable","visibility":"Public","body":"@queryable"},"external_var":false},{"html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"def":{"name":"started_at","return_type":"Time","visibility":"Public","body":"@started_at"},"external_var":false}]},{"html_id":"avram/Avram/Events/QueryEvent","path":"Avram/Events/QueryEvent.html","kind":"class","full_name":"Avram::Events::QueryEvent","name":"QueryEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/TimedEvent","kind":"class","full_name":"Pulsar::TimedEvent","name":"TimedEvent"},"ancestors":[{"html_id":"avram/Pulsar/TimedEvent","kind":"class","full_name":"Pulsar::TimedEvent","name":"TimedEvent"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/events/query_event.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/query_event.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"class_methods":[{"html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"def":{"name":"logged_events","visibility":"Public","body":"@@logged_events"},"external_var":false},{"html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","def":{"name":"logged_events=","args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"visibility":"Public","body":"@@logged_events = logged_events"},"external_var":false}],"constructors":[{"html_id":"new(query:String,args:String|Nil,queryable:String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"String"},{"name":"args","external_name":"args","restriction":"String | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"args_string":"(query : String, args : String | Nil, queryable : String | Nil = nil)","args_html":"(query : <a href=\"../../String.html\">String</a>, args : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>, queryable : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/events/query_event.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/query_event.cr#L4"},"def":{"name":"new","args":[{"name":"query","external_name":"query","restriction":"String"},{"name":"args","external_name":"args","restriction":"String | ::Nil"},{"name":"queryable","default_value":"nil","external_name":"queryable","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(query, args, queryable)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"args:String?-instance-method","name":"args","abstract":false,"location":{"filename":"src/avram/events/query_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/query_event.cr#L2"},"def":{"name":"args","visibility":"Public","body":"@args"},"external_var":false},{"html_id":"query:String-instance-method","name":"query","abstract":false,"location":{"filename":"src/avram/events/query_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/query_event.cr#L2"},"def":{"name":"query","visibility":"Public","body":"@query"},"external_var":false},{"html_id":"queryable:String?-instance-method","name":"queryable","abstract":false,"location":{"filename":"src/avram/events/query_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/query_event.cr#L2"},"def":{"name":"queryable","visibility":"Public","body":"@queryable"},"external_var":false},{"html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"def":{"name":"started_at","return_type":"Time","visibility":"Public","body":"@started_at"},"external_var":false}]},{"html_id":"avram/Avram/Events/SaveFailedEvent","path":"Avram/Events/SaveFailedEvent.html","kind":"class","full_name":"Avram::Events::SaveFailedEvent","name":"SaveFailedEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/events/save_failed_event.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_failed_event.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"class_methods":[{"html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"def":{"name":"logged_events","visibility":"Public","body":"@@logged_events"},"external_var":false},{"html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","def":{"name":"logged_events=","args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"visibility":"Public","body":"@@logged_events = logged_events"},"external_var":false}],"constructors":[{"html_id":"new(operation_class:String,attributes:Array(Avram::GenericAttribute))-class-method","name":"new","abstract":false,"args":[{"name":"operation_class","external_name":"operation_class","restriction":"String"},{"name":"attributes","external_name":"attributes","restriction":"Array(Avram::GenericAttribute)"}],"args_string":"(operation_class : String, attributes : Array(Avram::GenericAttribute))","args_html":"(operation_class : <a href=\"../../String.html\">String</a>, attributes : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/GenericAttribute.html\">Avram::GenericAttribute</a>))","location":{"filename":"src/avram/events/save_failed_event.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_failed_event.cr#L7"},"def":{"name":"new","args":[{"name":"operation_class","external_name":"operation_class","restriction":"String"},{"name":"attributes","external_name":"attributes","restriction":"Array(Avram::GenericAttribute)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(operation_class, attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"attributes:Array(Avram::GenericAttribute)-instance-method","name":"attributes","abstract":false,"location":{"filename":"src/avram/events/save_failed_event.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_failed_event.cr#L5"},"def":{"name":"attributes","return_type":"Array(Avram::GenericAttribute)","visibility":"Public","body":"@attributes"},"external_var":false},{"html_id":"error_messages_as_string:String-instance-method","name":"error_messages_as_string","abstract":false,"location":{"filename":"src/avram/events/save_failed_event.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_failed_event.cr#L17"},"def":{"name":"error_messages_as_string","return_type":"String","visibility":"Public","body":"invalid_attributes.join(\". \") do |attribute|\n  \"#{attribute.name} #{attribute.errors.join(\", \")}\"\nend"},"external_var":false},{"html_id":"invalid_attributes:Array(Avram::GenericAttribute)-instance-method","name":"invalid_attributes","abstract":false,"location":{"filename":"src/avram/events/save_failed_event.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_failed_event.cr#L13"},"def":{"name":"invalid_attributes","return_type":"Array(Avram::GenericAttribute)","visibility":"Public","body":"attributes.reject(&.valid?)"},"external_var":false},{"html_id":"operation_class:String-instance-method","name":"operation_class","abstract":false,"location":{"filename":"src/avram/events/save_failed_event.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_failed_event.cr#L4"},"def":{"name":"operation_class","return_type":"String","visibility":"Public","body":"@operation_class"},"external_var":false},{"html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"def":{"name":"started_at","return_type":"Time","visibility":"Public","body":"@started_at"},"external_var":false}]},{"html_id":"avram/Avram/Events/SaveSuccessEvent","path":"Avram/Events/SaveSuccessEvent.html","kind":"class","full_name":"Avram::Events::SaveSuccessEvent","name":"SaveSuccessEvent","abstract":false,"superclass":{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},"ancestors":[{"html_id":"avram/Pulsar/Event","kind":"class","full_name":"Pulsar::Event","name":"Event"},{"html_id":"avram/Pulsar/BaseEvent","kind":"class","full_name":"Pulsar::BaseEvent","name":"BaseEvent"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/events/save_success_event.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_success_event.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Events","kind":"module","full_name":"Avram::Events","name":"Events"},"class_methods":[{"html_id":"logged_events-class-method","name":"logged_events","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"def":{"name":"logged_events","visibility":"Public","body":"@@logged_events"},"external_var":false},{"html_id":"logged_events=(logged_events)-class-method","name":"logged_events=","doc":"Used by `Pulsar::SpecHelper` to test for logged events","summary":"<p>Used by <code>Pulsar::SpecHelper</code> to test for logged events</p>","abstract":false,"args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"args_string":"(logged_events)","args_html":"(logged_events)","def":{"name":"logged_events=","args":[{"name":"logged_events","external_name":"logged_events","restriction":""}],"visibility":"Public","body":"@@logged_events = logged_events"},"external_var":false}],"constructors":[{"html_id":"new(operation_class:String,attributes:Array(Avram::GenericAttribute))-class-method","name":"new","abstract":false,"args":[{"name":"operation_class","external_name":"operation_class","restriction":"String"},{"name":"attributes","external_name":"attributes","restriction":"Array(Avram::GenericAttribute)"}],"args_string":"(operation_class : String, attributes : Array(Avram::GenericAttribute))","args_html":"(operation_class : <a href=\"../../String.html\">String</a>, attributes : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/GenericAttribute.html\">Avram::GenericAttribute</a>))","location":{"filename":"src/avram/events/save_success_event.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_success_event.cr#L4"},"def":{"name":"new","args":[{"name":"operation_class","external_name":"operation_class","restriction":"String"},{"name":"attributes","external_name":"attributes","restriction":"Array(Avram::GenericAttribute)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(operation_class, attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"attributes:Array(Avram::GenericAttribute)-instance-method","name":"attributes","abstract":false,"location":{"filename":"src/avram/events/save_success_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_success_event.cr#L2"},"def":{"name":"attributes","visibility":"Public","body":"@attributes"},"external_var":false},{"html_id":"operation_class:String-instance-method","name":"operation_class","abstract":false,"location":{"filename":"src/avram/events/save_success_event.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/events/save_success_event.cr#L2"},"def":{"name":"operation_class","visibility":"Public","body":"@operation_class"},"external_var":false},{"html_id":"started_at:Time-instance-method","name":"started_at","doc":"When the event started","summary":"<p>When the event started</p>","abstract":false,"def":{"name":"started_at","return_type":"Time","visibility":"Public","body":"@started_at"},"external_var":false}]}]},{"html_id":"avram/Avram/Expectations","path":"Avram/Expectations.html","kind":"module","full_name":"Avram::Expectations","name":"Expectations","abstract":false,"locations":[{"filename":"src/avram/expectations.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations.cr#L1"},{"filename":"src/avram/expectations/have_custom_error_expectation.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_custom_error_expectation.cr#L1"},{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"have_error(name:Symbol,message=nil)-instance-method","name":"have_error","doc":"Tests that an operation has a custom error\n\n```\nCreateUser.create(params) do |operation, user|\n  user.should be_nil\n\n  operation.should have_error(:roles)\n  operation.should have_error(:roles, \"is empty\")\n  operation.should have_error(:roles, /\\sempty/)\nend\n```","summary":"<p>Tests that an operation has a custom error</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"Symbol"},{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"args_string":"(name : Symbol, message = nil)","args_html":"(name : Symbol, message = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/expectations.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations.cr#L32"},"def":{"name":"have_error","args":[{"name":"name","external_name":"name","restriction":"Symbol"},{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"visibility":"Public","body":"HaveCustomErrorExpectation.new(name, message)"},"external_var":false},{"html_id":"have_error(message=nil)-instance-method","name":"have_error","doc":"Tests that an operation or attribute has an error\n\n```\nCreateReceipt.create(params) do |operation, receipt|\n  receipt.should be_nil\n\n  operation.should have_error\n  operation.should have_error(\"is required\")\n  operation.should have_error(/\\srequired/)\n\n  operation.user_id.should have_error\n  operation.user_id.should have_error(\"is required\")\n  operation.user_id.should have_error(/\\srequired/)\nend\n```","summary":"<p>Tests that an operation or attribute has an error</p>","abstract":false,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"args_string":"(message = nil)","args_html":"(message = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/expectations.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations.cr#L17"},"def":{"name":"have_error","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":""}],"visibility":"Public","body":"HaveErrorExpectation.new(message)"},"external_var":false}],"types":[{"html_id":"avram/Avram/Expectations/HaveCustomErrorExpectation","path":"Avram/Expectations/HaveCustomErrorExpectation.html","kind":"struct","full_name":"Avram::Expectations::HaveCustomErrorExpectation","name":"HaveCustomErrorExpectation","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/expectations/have_custom_error_expectation.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_custom_error_expectation.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Expectations","kind":"module","full_name":"Avram::Expectations","name":"Expectations"},"constructors":[{"html_id":"new(name:Symbol,message:Regex|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"Symbol"},{"name":"message","default_value":"nil","external_name":"message","restriction":"Regex | ::Nil"}],"args_string":"(name : Symbol, message : Regex | Nil = nil)","args_html":"(name : Symbol, message : Regex | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/expectations/have_custom_error_expectation.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_custom_error_expectation.cr#L3"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"Symbol"},{"name":"message","default_value":"nil","external_name":"message","restriction":"Regex | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(name,message:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(name, message : String)","args_html":"(name, message : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/expectations/have_custom_error_expectation.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_custom_error_expectation.cr#L6"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"new(name, /#{message}/)"},"external_var":false}],"instance_methods":[{"html_id":"failure_message(operation:OperationErrors):String-instance-method","name":"failure_message","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"args_string":"(operation : OperationErrors) : String","args_html":"(operation : <a href=\"../../Avram/OperationErrors.html\">OperationErrors</a>) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/expectations/have_custom_error_expectation.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_custom_error_expectation.cr#L16"},"def":{"name":"failure_message","args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"return_type":"String","visibility":"Public","body":"@message.try do |message|\n  return \"Expected :#{@name} to have the error '#{message.source}'\"\nend\n\n\"Expected :#{@name} to have an error\"\n"},"external_var":false},{"html_id":"match(operation:OperationErrors):Bool-instance-method","name":"match","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"args_string":"(operation : OperationErrors) : Bool","args_html":"(operation : <a href=\"../../Avram/OperationErrors.html\">OperationErrors</a>) : <a href=\"../../Bool.html\">Bool</a>","location":{"filename":"src/avram/expectations/have_custom_error_expectation.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_custom_error_expectation.cr#L10"},"def":{"name":"match","args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"return_type":"Bool","visibility":"Public","body":"if errors = operation.custom_errors[@name]?\nelse\n  return false\nend\n@message.try do |message|\n  return errors.any?(&.=~(message))\nend\n!errors.empty?\n"},"external_var":false},{"html_id":"negative_failure_message(operation:OperationErrors):String-instance-method","name":"negative_failure_message","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"args_string":"(operation : OperationErrors) : String","args_html":"(operation : <a href=\"../../Avram/OperationErrors.html\">OperationErrors</a>) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/expectations/have_custom_error_expectation.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_custom_error_expectation.cr#L24"},"def":{"name":"negative_failure_message","args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"return_type":"String","visibility":"Public","body":"@message.try do |message|\n  return \"Expected :#{@name} to not have the error '#{message.source}'\"\nend\n\n\"Expected :#{@name} to not have an error, got errors:\\n#{HaveErrorExpectation.list(operation.custom_errors[@name])}\"\n"},"external_var":false}]},{"html_id":"avram/Avram/Expectations/HaveErrorExpectation","path":"Avram/Expectations/HaveErrorExpectation.html","kind":"struct","full_name":"Avram::Expectations::HaveErrorExpectation","name":"HaveErrorExpectation","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Expectations","kind":"module","full_name":"Avram::Expectations","name":"Expectations"},"constructors":[{"html_id":"new(message:Regex|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":"Regex | ::Nil"}],"args_string":"(message : Regex | Nil = nil)","args_html":"(message : Regex | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L3"},"def":{"name":"new","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":"Regex | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(message:String)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L6"},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"new(/#{message}/)"},"external_var":false}],"instance_methods":[{"html_id":"failure_message(attribute:Attribute):String-instance-method","name":"failure_message","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Attribute"}],"args_string":"(attribute : Attribute) : String","args_html":"(attribute : <a href=\"../../Avram/Attribute.html\">Attribute</a>) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L28"},"def":{"name":"failure_message","args":[{"name":"attribute","external_name":"attribute","restriction":"Attribute"}],"return_type":"String","visibility":"Public","body":"@message.try do |message|\n  return \"Expected :#{attribute.name} to have the error '#{message.source}'\"\nend\n\n\"Expected :#{attribute.name} to have an error\"\n"},"external_var":false},{"html_id":"failure_message(operation:OperationErrors):String-instance-method","name":"failure_message","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"args_string":"(operation : OperationErrors) : String","args_html":"(operation : <a href=\"../../Avram/OperationErrors.html\">OperationErrors</a>) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L36"},"def":{"name":"failure_message","args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"return_type":"String","visibility":"Public","body":"@message.try do |message|\n  return \"Expected operation to have the error '#{message.source}'\"\nend\n\n\"Expected operation to have an error\"\n"},"external_var":false},{"html_id":"match(attribute:Attribute):Bool-instance-method","name":"match","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Attribute"}],"args_string":"(attribute : Attribute) : Bool","args_html":"(attribute : <a href=\"../../Avram/Attribute.html\">Attribute</a>) : <a href=\"../../Bool.html\">Bool</a>","location":{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L10"},"def":{"name":"match","args":[{"name":"attribute","external_name":"attribute","restriction":"Attribute"}],"return_type":"Bool","visibility":"Public","body":"@message.try do |message|\n  return attribute.errors.any?(&.=~(message))\nend\n\n!attribute.errors.empty?\n"},"external_var":false},{"html_id":"match(operation:OperationErrors):Bool-instance-method","name":"match","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"args_string":"(operation : OperationErrors) : Bool","args_html":"(operation : <a href=\"../../Avram/OperationErrors.html\">OperationErrors</a>) : <a href=\"../../Bool.html\">Bool</a>","location":{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L18"},"def":{"name":"match","args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"return_type":"Bool","visibility":"Public","body":"@message.try do |message|\n  return operation.errors.flat_map do |_, errors|\n    errors\n  end.any? do |error|\n    error =~ message\n  end\nend\n\n!operation.errors.empty?\n"},"external_var":false},{"html_id":"negative_failure_message(attribute:Attribute):String-instance-method","name":"negative_failure_message","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Attribute"}],"args_string":"(attribute : Attribute) : String","args_html":"(attribute : <a href=\"../../Avram/Attribute.html\">Attribute</a>) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L44"},"def":{"name":"negative_failure_message","args":[{"name":"attribute","external_name":"attribute","restriction":"Attribute"}],"return_type":"String","visibility":"Public","body":"@message.try do |message|\n  return \"Expected :#{attribute.name} to not have the error '#{message.source}'\"\nend\n\n\"Expected :#{attribute.name} to not have an error, got errors:\\n#{self.class.list(attribute.errors)}\"\n"},"external_var":false},{"html_id":"negative_failure_message(operation:OperationErrors):String-instance-method","name":"negative_failure_message","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"args_string":"(operation : OperationErrors) : String","args_html":"(operation : <a href=\"../../Avram/OperationErrors.html\">OperationErrors</a>) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/expectations/have_error_expectation.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/expectations/have_error_expectation.cr#L55"},"def":{"name":"negative_failure_message","args":[{"name":"operation","external_name":"operation","restriction":"OperationErrors"}],"return_type":"String","visibility":"Public","body":"@message.try do |message|\n  return \"Expected operation to not have the error '#{message.source}'\"\nend\n\n\"Expected operation to not have an error, got errors:\\n#{self.class.list(operation.errors)}\"\n"},"external_var":false}]}]},{"html_id":"avram/Avram/ExtractCriteria","path":"Avram/ExtractCriteria.html","kind":"module","full_name":"Avram::ExtractCriteria","name":"ExtractCriteria","abstract":false,"locations":[{"filename":"src/avram/criteria_extensions/extract_criteria.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria_extensions/extract_criteria.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Time/Lucky/Criteria","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"}},{"html_id":"avram/Avram/Factory","path":"Avram/Factory.html","kind":"class","full_name":"Avram::Factory","name":"Factory","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/factory.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"SEQUENCES","name":"SEQUENCES","value":"{} of String => Int32"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"build_attributes(&)-class-method","name":"build_attributes","abstract":false,"location":{"filename":"src/avram/factory.cr","line_number":66,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L66"},"def":{"name":"build_attributes","yields":1,"block_arity":1,"visibility":"Public","body":"(yield(new)).attributes"},"external_var":false},{"html_id":"build_attributes-class-method","name":"build_attributes","abstract":false,"location":{"filename":"src/avram/factory.cr","line_number":70,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L70"},"def":{"name":"build_attributes","visibility":"Public","body":"new.attributes"},"external_var":false},{"html_id":"create-class-method","name":"create","abstract":false,"location":{"filename":"src/avram/factory.cr","line_number":74,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L74"},"def":{"name":"create","visibility":"Public","body":"new.create"},"external_var":false},{"html_id":"create(&)-class-method","name":"create","abstract":false,"location":{"filename":"src/avram/factory.cr","line_number":78,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L78"},"def":{"name":"create","yields":1,"block_arity":1,"visibility":"Public","body":"(yield(new)).create"},"external_var":false},{"html_id":"create_pair-class-method","name":"create_pair","doc":"Returns an array with 2 instances of the model from the Factory.\n\nUsage:\n\n```\ntags = TagFactory.create_pair\ntypeof(tags) # => Array(Tag)\ntags.size    # => 2\n```","summary":"<p>Returns an array with 2 instances of the model from the Factory.</p>","abstract":false,"location":{"filename":"src/avram/factory.cr","line_number":97,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L97"},"def":{"name":"create_pair","visibility":"Public","body":"create_pair do |factory|\n  factory\nend"},"external_var":false},{"html_id":"create_pair(&)-class-method","name":"create_pair","doc":"Similar to `create_pair`, but accepts a block which yields the factory instance.\n\nBoth factories receive the same argument values.\n\nUsage:\n\n```\nTagFactory.create_pair do |factory|\n  # set both factories name to \"test\"\n  factory.name(\"test\")\nend\n```","summary":"<p>Similar to <code><a href=\"../Avram/Factory.html#create_pair-class-method\">.create_pair</a></code>, but accepts a block which yields the factory instance.</p>","abstract":false,"location":{"filename":"src/avram/factory.cr","line_number":113,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L113"},"def":{"name":"create_pair","yields":1,"block_arity":1,"visibility":"Public","body":"[1, 2].map do |n|\n  self.create do |factory|\n    yield(factory)\n  end\nend"},"external_var":false}],"instance_methods":[{"html_id":"create-instance-method","name":"create","abstract":false,"location":{"filename":"src/avram/factory.cr","line_number":82,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L82"},"def":{"name":"create","visibility":"Public","body":"run_before_save_callbacks\nrecord = operation.save!\nrun_after_save_callbacks(record)\n"},"external_var":false},{"html_id":"operation-instance-method","name":"operation","abstract":false,"location":{"filename":"src/avram/factory.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L2"},"def":{"name":"operation","visibility":"Public","body":"@operation"},"external_var":false},{"html_id":"sequence(value:String):String-instance-method","name":"sequence","doc":"Returns a value with a number to use for unique values.\n\nUsage:\n\n```\nclass UserFactory < Avram::Factory\n  def initialize\n    username sequence(\"username\")            # => username-1, username-2, etc.\n    email \"#{sequence(\"email\")}@example.com\" # => email-1@example.com, email-2@example.com, etc.\n  end\nend\n```","summary":"<p>Returns a value with a number to use for unique values.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : String","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/factory.cr","line_number":131,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L131"},"def":{"name":"sequence","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"String","visibility":"Public","body":"__temp_191 = value\n__temp_192 = SEQUENCES\n__temp_192[__temp_191]? || (__temp_192[__temp_191] = 0)\n__temp_193 = value\n__temp_194 = SEQUENCES\n__temp_194[__temp_193] = __temp_194[__temp_193] + 1\n\"#{value}-#{SEQUENCES[value]}\"\n"},"external_var":false}],"macros":[{"html_id":"setup_attribute_shortcuts(operation)-macro","name":"setup_attribute_shortcuts","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":""}],"args_string":"(operation)","args_html":"(operation)","location":{"filename":"src/avram/factory.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L20"},"def":{"name":"setup_attribute_shortcuts","args":[{"name":"operation","external_name":"operation","restriction":""}],"visibility":"Public","body":"    \n{% for attribute in operation.resolve.constant(:COLUMN_ATTRIBUTES) %}\n      def {{ attribute[:name] }}(value : {{ attribute[:type] }}{% if attribute[:nilable] %}?{% end %})\n        operation.{{ attribute[:name] }}.value = value\n        self\n      end\n    {% end %}\n\n  \n"}},{"html_id":"setup_attributes(operation)-macro","name":"setup_attributes","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":""}],"args_string":"(operation)","args_html":"(operation)","location":{"filename":"src/avram/factory.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L29"},"def":{"name":"setup_attributes","args":[{"name":"operation","external_name":"operation","restriction":""}],"visibility":"Public","body":"    def attributes\n      \n{\n        \n{% for attribute in operation.resolve.constant(:COLUMN_ATTRIBUTES) %}\n          {{ attribute[:name] }}: operation.{{ attribute[:name] }}.value,\n        {% end %}\n\n      }\n    \nend\n  \n"}},{"html_id":"setup_callbacks(model_name)-macro","name":"setup_callbacks","abstract":false,"args":[{"name":"model_name","external_name":"model_name","restriction":""}],"args_string":"(model_name)","args_html":"(model_name)","location":{"filename":"src/avram/factory.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/factory.cr#L39"},"def":{"name":"setup_callbacks","args":[{"name":"model_name","external_name":"model_name","restriction":""}],"visibility":"Public","body":"    \n# Run `block` before the record is created\n\n    def before_save(&block : -> Nil) : self\n      @before_saves << block\n\n      self\n    \nend\n\n    \n# Run `block` after the record is created.\n\n    \n# The block will yield the created record instance\n\n    def after_save(&block : \n{{ model_name.id }}\n -> Nil) : self\n      @after_saves << block\n\n      self\n    \nend\n\n    private def run_before_save_callbacks\n      @before_saves.each(&.call)\n    \nend\n\n    private def run_after_save_callbacks(record : \n{{ model_name.id }}\n)\n      @after_saves.each(&.call(record))\n\n      record\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/FailedMigration","path":"Avram/FailedMigration.html","kind":"class","full_name":"Avram::FailedMigration","name":"FailedMigration","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":170,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L170"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(migration:String,statements:Array(String),cause:Exception)-class-method","name":"new","abstract":false,"args":[{"name":"migration","external_name":"migration","restriction":"String"},{"name":"statements","external_name":"statements","restriction":"Array(String)"},{"name":"cause","external_name":"cause","restriction":"Exception"}],"args_string":"(migration : String, statements : Array(String), cause : Exception)","args_html":"(migration : <a href=\"../String.html\">String</a>, statements : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>), cause : Exception)","location":{"filename":"src/avram/errors.cr","line_number":174,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L174"},"def":{"name":"new","args":[{"name":"migration","external_name":"migration","restriction":"String"},{"name":"statements","external_name":"statements","restriction":"Array(String)"},{"name":"cause","external_name":"cause","restriction":"Exception"}],"visibility":"Public","body":"_ = allocate\n_.initialize(migration, statements, cause)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"migration:String-instance-method","name":"migration","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":171,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L171"},"def":{"name":"migration","return_type":"String","visibility":"Public","body":"@migration"},"external_var":false},{"html_id":"statements:Array(String)-instance-method","name":"statements","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":172,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L172"},"def":{"name":"statements","return_type":"Array(String)","visibility":"Public","body":"@statements"},"external_var":false}]},{"html_id":"avram/Avram/FailedOperation","path":"Avram/FailedOperation.html","kind":"class","full_name":"Avram::FailedOperation","name":"FailedOperation","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":167,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L167"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Used when `Avram::Operation` fails.","summary":"<p>Used when <code><a href=\"../Avram/Operation.html\">Avram::Operation</a></code> fails.</p>"},{"html_id":"avram/Avram/GenericAttribute","path":"Avram/GenericAttribute.html","kind":"class","full_name":"Avram::GenericAttribute","name":"GenericAttribute","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/generic_attribute.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/generic_attribute.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"A generic version of `Avram::Attribute` that is used for reporting and metrics.\n\nThis is a data only version of an `Avram::Atribute`. It is purely for\nretrieving and reporting on data. For example, `Avram::GenericAttribute` is\nused by `Avram::Events::SaveFailedEvent` so that subscribers can\nget information about attributes that failed to save.","summary":"<p>A generic version of <code><a href=\"../Avram/Attribute.html\">Avram::Attribute</a></code> that is used for reporting and metrics.</p>","constructors":[{"html_id":"new(name:Symbol,param:String|Nil,original_value:String|Nil,value:String|Nil,param_key:String,errors:Array(String))-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"Symbol"},{"name":"param","external_name":"param","restriction":"String | ::Nil"},{"name":"original_value","external_name":"original_value","restriction":"String | ::Nil"},{"name":"value","external_name":"value","restriction":"String | ::Nil"},{"name":"param_key","external_name":"param_key","restriction":"String"},{"name":"errors","external_name":"errors","restriction":"Array(String)"}],"args_string":"(name : Symbol, param : String | Nil, original_value : String | Nil, value : String | Nil, param_key : String, errors : Array(String))","args_html":"(name : Symbol, param : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>, original_value : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>, value : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>, param_key : <a href=\"../String.html\">String</a>, errors : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/generic_attribute.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/generic_attribute.cr#L15"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"Symbol"},{"name":"param","external_name":"param","restriction":"String | ::Nil"},{"name":"original_value","external_name":"original_value","restriction":"String | ::Nil"},{"name":"value","external_name":"value","restriction":"String | ::Nil"},{"name":"param_key","external_name":"param_key","restriction":"String"},{"name":"errors","external_name":"errors","restriction":"Array(String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, param, original_value, value, param_key, errors)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"errors:Array(String)-instance-method","name":"errors","abstract":false,"location":{"filename":"src/avram/generic_attribute.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/generic_attribute.cr#L13"},"def":{"name":"errors","return_type":"Array(String)","visibility":"Public","body":"@errors"},"external_var":false},{"html_id":"name:Symbol-instance-method","name":"name","abstract":false,"location":{"filename":"src/avram/generic_attribute.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/generic_attribute.cr#L8"},"def":{"name":"name","return_type":"Symbol","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"original_value:String|Nil-instance-method","name":"original_value","abstract":false,"location":{"filename":"src/avram/generic_attribute.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/generic_attribute.cr#L10"},"def":{"name":"original_value","return_type":"String | ::Nil","visibility":"Public","body":"@original_value"},"external_var":false},{"html_id":"param:String|Nil-instance-method","name":"param","abstract":false,"location":{"filename":"src/avram/generic_attribute.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/generic_attribute.cr#L9"},"def":{"name":"param","return_type":"String | ::Nil","visibility":"Public","body":"@param"},"external_var":false},{"html_id":"param_key:String-instance-method","name":"param_key","abstract":false,"location":{"filename":"src/avram/generic_attribute.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/generic_attribute.cr#L12"},"def":{"name":"param_key","return_type":"String","visibility":"Public","body":"@param_key"},"external_var":false},{"html_id":"valid?:Bool-instance-method","name":"valid?","abstract":false,"location":{"filename":"src/avram/generic_attribute.cr","line_number":25,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/generic_attribute.cr#L25"},"def":{"name":"valid?","return_type":"Bool","visibility":"Public","body":"errors.empty?"},"external_var":false},{"html_id":"value:String|Nil-instance-method","name":"value","abstract":false,"location":{"filename":"src/avram/generic_attribute.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/generic_attribute.cr#L11"},"def":{"name":"value","return_type":"String | ::Nil","visibility":"Public","body":"@value"},"external_var":false}]},{"html_id":"avram/Avram/HabitatSettings","path":"Avram/HabitatSettings.html","kind":"class","full_name":"Avram::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram.cr#L27"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"database_to_migrate:Avram::Database.class-class-method","name":"database_to_migrate","abstract":false,"def":{"name":"database_to_migrate","return_type":"Avram::Database.class","visibility":"Public","body":"@@database_to_migrate.not_nil!"},"external_var":false},{"html_id":"database_to_migrate=(value:Avram::Database.class)-class-method","name":"database_to_migrate=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Avram::Database.class"}],"args_string":"(value : Avram::Database.class)","args_html":"(value : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Database</span>.<span class=\"k\">class</span>)","def":{"name":"database_to_migrate=","args":[{"name":"value","external_name":"value","restriction":"Avram::Database.class"}],"visibility":"Public","body":"@@database_to_migrate = value"},"external_var":false},{"html_id":"database_to_migrate?-class-method","name":"database_to_migrate?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use database_to_migrate in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use database_to_migrate in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"database_to_migrate?","visibility":"Public","body":"@@database_to_migrate"},"external_var":false},{"html_id":"i18n_backend:Avram::I18nBackend-class-method","name":"i18n_backend","abstract":false,"def":{"name":"i18n_backend","return_type":"Avram::I18nBackend","visibility":"Public","body":"@@i18n_backend.not_nil!"},"external_var":false},{"html_id":"i18n_backend=(value:Avram::I18nBackend)-class-method","name":"i18n_backend=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Avram::I18nBackend"}],"args_string":"(value : Avram::I18nBackend)","args_html":"(value : <a href=\"../Avram/I18nBackend.html\">Avram::I18nBackend</a>)","def":{"name":"i18n_backend=","args":[{"name":"value","external_name":"value","restriction":"Avram::I18nBackend"}],"visibility":"Public","body":"@@i18n_backend = value"},"external_var":false},{"html_id":"i18n_backend?-class-method","name":"i18n_backend?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use i18n_backend in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use i18n_backend in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"i18n_backend?","visibility":"Public","body":"@@i18n_backend"},"external_var":false},{"html_id":"lazy_load_enabled:Bool-class-method","name":"lazy_load_enabled","abstract":false,"def":{"name":"lazy_load_enabled","return_type":"Bool","visibility":"Public","body":"@@lazy_load_enabled.not_nil!"},"external_var":false},{"html_id":"lazy_load_enabled=(value:Bool)-class-method","name":"lazy_load_enabled=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../Bool.html\">Bool</a>)","def":{"name":"lazy_load_enabled=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@lazy_load_enabled = value"},"external_var":false},{"html_id":"lazy_load_enabled?-class-method","name":"lazy_load_enabled?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use lazy_load_enabled in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use lazy_load_enabled in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"lazy_load_enabled?","visibility":"Public","body":"@@lazy_load_enabled"},"external_var":false},{"html_id":"query_cache_enabled:Bool-class-method","name":"query_cache_enabled","abstract":false,"def":{"name":"query_cache_enabled","return_type":"Bool","visibility":"Public","body":"@@query_cache_enabled.not_nil!"},"external_var":false},{"html_id":"query_cache_enabled=(value:Bool)-class-method","name":"query_cache_enabled=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../Bool.html\">Bool</a>)","def":{"name":"query_cache_enabled=","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"visibility":"Public","body":"@@query_cache_enabled = value"},"external_var":false},{"html_id":"query_cache_enabled?-class-method","name":"query_cache_enabled?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use query_cache_enabled in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use query_cache_enabled in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"query_cache_enabled?","visibility":"Public","body":"@@query_cache_enabled"},"external_var":false},{"html_id":"setup_database_name:String-class-method","name":"setup_database_name","abstract":false,"def":{"name":"setup_database_name","return_type":"String","visibility":"Public","body":"@@setup_database_name.not_nil!"},"external_var":false},{"html_id":"setup_database_name=(value:String)-class-method","name":"setup_database_name=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","def":{"name":"setup_database_name=","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"@@setup_database_name = value"},"external_var":false},{"html_id":"setup_database_name?-class-method","name":"setup_database_name?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use setup_database_name in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use setup_database_name in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"setup_database_name?","visibility":"Public","body":"@@setup_database_name"},"external_var":false},{"html_id":"time_formats:Array(String)-class-method","name":"time_formats","abstract":false,"def":{"name":"time_formats","return_type":"Array(String)","visibility":"Public","body":"@@time_formats.not_nil!"},"external_var":false},{"html_id":"time_formats=(value:Array(String))-class-method","name":"time_formats=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(String)"}],"args_string":"(value : Array(String))","args_html":"(value : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","def":{"name":"time_formats=","args":[{"name":"value","external_name":"value","restriction":"Array(String)"}],"visibility":"Public","body":"@@time_formats = value"},"external_var":false},{"html_id":"time_formats?-class-method","name":"time_formats?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use time_formats in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use time_formats in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"time_formats?","visibility":"Public","body":"@@time_formats"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"lazy_load_enabled\" => lazy_load_enabled, \"database_to_migrate\" => database_to_migrate, \"time_formats\" => time_formats, \"i18n_backend\" => i18n_backend, \"query_cache_enabled\" => query_cache_enabled, \"setup_database_name\" => setup_database_name}"},"external_var":false}]},{"html_id":"avram/Avram/I18n","path":"Avram/I18n.html","kind":"struct","full_name":"Avram::I18n","name":"I18n","abstract":false,"superclass":{"html_id":"avram/Avram/I18nBackend","kind":"struct","full_name":"Avram::I18nBackend","name":"I18nBackend"},"ancestors":[{"html_id":"avram/Avram/I18nBackend","kind":"struct","full_name":"Avram::I18nBackend","name":"I18nBackend"},{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/i18n_backend.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/i18n_backend.cr#L5"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"get(key:String|Symbol):String-instance-method","name":"get","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : String","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/i18n_backend.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/i18n_backend.cr#L6"},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"String","visibility":"Public","body":"{validate_acceptance_of: \"must be accepted\", validate_at_most_one_filled: \"must be blank\", validate_confirmation_of: \"must match\", validate_exact_size_of: \"must be exactly %d characters long\", validate_exactly_one_filled: \"at least one must be filled\", validate_format_of: \"is invalid\", validate_inclusion_of: \"is not included in the list\", validate_max_size_of: \"must not have more than %d characters\", validate_min_size_of: \"must have at least %d characters\", validate_numeric_max: \"must be no more than %s\", validate_numeric_min: \"must be at least %s\", validate_numeric_nil: \"must not be nil\", validate_required: \"is required\", validate_uniqueness_of: \"is already taken\", validate_url_format: \"must be a valid URL beginning with %s\"}[key]"},"external_var":false}]},{"html_id":"avram/Avram/I18nBackend","path":"Avram/I18nBackend.html","kind":"struct","full_name":"Avram::I18nBackend","name":"I18nBackend","abstract":true,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/i18n_backend.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/i18n_backend.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/I18n","kind":"struct","full_name":"Avram::I18n","name":"I18n"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/avram/i18n_backend.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/i18n_backend.cr#L1"},"def":{"name":"new","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"},"external_var":false}],"instance_methods":[{"html_id":"get(key:String|Symbol):String-instance-method","name":"get","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"args_string":"(key : String | Symbol) : String","args_html":"(key : <a href=\"../String.html\">String</a> | Symbol) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/i18n_backend.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/i18n_backend.cr#L2"},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String | Symbol"}],"return_type":"String","visibility":"Public","body":""},"external_var":false},{"html_id":"initialize-instance-method","name":"initialize","abstract":false,"location":{"filename":"src/avram/i18n_backend.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/i18n_backend.cr#L1"},"def":{"name":"initialize","visibility":"Public","body":""},"external_var":false}]},{"html_id":"avram/Avram/ImpossibleValidation","path":"Avram/ImpossibleValidation.html","kind":"class","full_name":"Avram::ImpossibleValidation","name":"ImpossibleValidation","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":50,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L50"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when a validation is expecting an impossible constraint","summary":"<p>Raised when a validation is expecting an impossible constraint</p>","constructors":[{"html_id":"new(attribute:Symbol,message:String=\"animpossiblevalidation\")-class-method","name":"new","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Symbol"},{"name":"message","default_value":"\"an impossible validation\"","external_name":"message","restriction":"String"}],"args_string":"(attribute : Symbol, message : String = \"an impossible validation\")","args_html":"(attribute : Symbol, message : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;an impossible validation&quot;</span>)","location":{"filename":"src/avram/errors.cr","line_number":53,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L53"},"def":{"name":"new","args":[{"name":"attribute","external_name":"attribute","restriction":"Symbol"},{"name":"message","default_value":"\"an impossible validation\"","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(attribute, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"attribute:Symbol-instance-method","name":"attribute","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":51,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L51"},"def":{"name":"attribute","return_type":"Symbol","visibility":"Public","body":"@attribute"},"external_var":false}]},{"html_id":"avram/Avram/IncludesCriteria","path":"Avram/IncludesCriteria.html","kind":"module","full_name":"Avram::IncludesCriteria(T, V)","name":"IncludesCriteria","abstract":false,"locations":[{"filename":"src/avram/criteria_extensions/includes_criteria.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria_extensions/includes_criteria.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Int32/Lucky/Criteria","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/Int64/Lucky/Criteria","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/String/Lucky/Criteria","kind":"class","full_name":"String::Lucky::Criteria(T, V)","name":"Criteria"},{"html_id":"avram/UUID/Lucky/Criteria","kind":"class","full_name":"UUID::Lucky::Criteria(T, V)","name":"Criteria"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"}},{"html_id":"avram/Avram/InheritColumnAttributes","path":"Avram/InheritColumnAttributes.html","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes","abstract":false,"locations":[{"filename":"src/avram/inherit_column_attributes.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/inherit_column_attributes.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"inherit_column_attributes-macro","name":"inherit_column_attributes","abstract":false,"location":{"filename":"src/avram/inherit_column_attributes.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/inherit_column_attributes.cr#L8"},"def":{"name":"inherit_column_attributes","visibility":"Public","body":"    \n\\{% if\n !@type.constant(:COLUMN_ATTRIBUTES) %}\n      COLUMN_ATTRIBUTES = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n attribute in @type.ancestors.first.constant :COLUMN_ATTRIBUTES %}\n        \n\\{% \nCOLUMN_ATTRIBUTES << attribute %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_column_attributes\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/Insert","path":"Avram/Insert.html","kind":"class","full_name":"Avram::Insert","name":"Insert","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/insert.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/insert.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(table:TableName,params:Params,column_names:Array(Symbol)=[]ofSymbol)-class-method","name":"new","abstract":false,"args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"params","external_name":"params","restriction":"Params"},{"name":"column_names","default_value":"[] of Symbol","external_name":"column_names","restriction":"Array(Symbol)"}],"args_string":"(table : TableName, params : Params, column_names : Array(Symbol) = [] of Symbol)","args_html":"(table : <a href=\"../Avram/TableName.html\">TableName</a>, params : <a href=\"../Avram/Insert/Params.html\">Params</a>, column_names : <a href=\"../Array.html\">Array</a>(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>)","location":{"filename":"src/avram/insert.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/insert.cr#L4"},"def":{"name":"new","args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"params","external_name":"params","restriction":"Params"},{"name":"column_names","default_value":"[] of Symbol","external_name":"column_names","restriction":"Array(Symbol)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table, params, column_names)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"args-instance-method","name":"args","abstract":false,"location":{"filename":"src/avram/insert.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/insert.cr#L19"},"def":{"name":"args","visibility":"Public","body":"@params.values"},"external_var":false},{"html_id":"statement:String-instance-method","name":"statement","abstract":false,"location":{"filename":"src/avram/insert.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/insert.cr#L7"},"def":{"name":"statement","return_type":"String","visibility":"Public","body":"\"insert into #{@table}(#{fields}) values(#{values_placeholders}) returning #{returning}\""},"external_var":false}],"types":[{"html_id":"avram/Avram/Insert/Params","path":"Avram/Insert/Params.html","kind":"alias","full_name":"Avram::Insert::Params","name":"Params","abstract":false,"locations":[{"filename":"src/avram/insert.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/insert.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Hash(Symbol, Nil) | Hash(Symbol, String | Nil) | Hash(Symbol, String))","aliased_html":"Hash(Symbol, <a href=\"../../Nil.html\">Nil</a>) | Hash(Symbol, <a href=\"../../String.html\">String</a>?) | Hash(Symbol, <a href=\"../../String.html\">String</a>)","const":false,"namespace":{"html_id":"avram/Avram/Insert","kind":"class","full_name":"Avram::Insert","name":"Insert"}}]},{"html_id":"avram/Avram/InvalidDatabaseNameError","path":"Avram/InvalidDatabaseNameError.html","kind":"class","full_name":"Avram::InvalidDatabaseNameError","name":"InvalidDatabaseNameError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":160,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L160"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"}},{"html_id":"avram/Avram/InvalidOperationError","path":"Avram/InvalidOperationError.html","kind":"class","full_name":"Avram::InvalidOperationError","name":"InvalidOperationError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"},{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":59,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L59"},{"filename":"src/lucky/ext/avram/errors.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/ext/avram/errors.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Lucky/RenderableError","kind":"module","full_name":"Lucky::RenderableError","name":"RenderableError"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when using the create!, update!, or delete! methods on an operation when it does not have the proper attributes","summary":"<p>Raised when using the create!, update!, or delete! methods on an operation when it does not have the proper attributes</p>","constructors":[{"html_id":"new(operation)-class-method","name":"new","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":""}],"args_string":"(operation)","args_html":"(operation)","location":{"filename":"src/avram/errors.cr","line_number":62,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L62"},"def":{"name":"new","args":[{"name":"operation","external_name":"operation","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(operation)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"errors:Hash(Symbol,Array(String))-instance-method","name":"errors","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":60,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L60"},"def":{"name":"errors","return_type":"Hash(Symbol, Array(String))","visibility":"Public","body":"@errors"},"external_var":false},{"html_id":"invalid_attribute_name:String-instance-method","name":"invalid_attribute_name","abstract":false,"location":{"filename":"src/lucky/ext/avram/errors.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/ext/avram/errors.cr#L17"},"def":{"name":"invalid_attribute_name","return_type":"String","visibility":"Public","body":"invalid_attribute[0].to_s"},"external_var":false},{"html_id":"renderable_details:String-instance-method","name":"renderable_details","abstract":false,"location":{"filename":"src/lucky/ext/avram/errors.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/ext/avram/errors.cr#L13"},"def":{"name":"renderable_details","return_type":"String","visibility":"Public","body":"\"#{invalid_attribute_name} #{validation_messages.first}\""},"external_var":false},{"html_id":"renderable_message:String-instance-method","name":"renderable_message","abstract":false,"location":{"filename":"src/lucky/ext/avram/errors.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/ext/avram/errors.cr#L9"},"def":{"name":"renderable_message","return_type":"String","visibility":"Public","body":"\"Invalid params\""},"external_var":false},{"html_id":"renderable_status:Int32-instance-method","name":"renderable_status","abstract":false,"location":{"filename":"src/lucky/ext/avram/errors.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/ext/avram/errors.cr#L5"},"def":{"name":"renderable_status","return_type":"Int32","visibility":"Public","body":"400"},"external_var":false}]},{"html_id":"avram/Avram/InvalidQueryError","path":"Avram/InvalidQueryError.html","kind":"class","full_name":"Avram::InvalidQueryError","name":"InvalidQueryError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":163,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L163"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"}},{"html_id":"avram/Avram/Join","path":"Avram/Join.html","kind":"module","full_name":"Avram::Join","name":"Join","abstract":false,"locations":[{"filename":"src/avram/join.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"types":[{"html_id":"avram/Avram/Join/Full","path":"Avram/Join/Full.html","kind":"class","full_name":"Avram::Join::Full","name":"Full","abstract":false,"superclass":{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/join.cr","line_number":77,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L77"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"instance_methods":[{"html_id":"join_type:String-instance-method","name":"join_type","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":78,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L78"},"def":{"name":"join_type","return_type":"String","visibility":"Public","body":"\"FULL\""},"external_var":false}]},{"html_id":"avram/Avram/Join/Inner","path":"Avram/Join/Inner.html","kind":"class","full_name":"Avram::Join::Inner","name":"Inner","abstract":false,"superclass":{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/join.cr","line_number":59,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L59"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"instance_methods":[{"html_id":"join_type:String-instance-method","name":"join_type","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":60,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L60"},"def":{"name":"join_type","return_type":"String","visibility":"Public","body":"\"INNER\""},"external_var":false}]},{"html_id":"avram/Avram/Join/Left","path":"Avram/Join/Left.html","kind":"class","full_name":"Avram::Join::Left","name":"Left","abstract":false,"superclass":{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/join.cr","line_number":65,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L65"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"instance_methods":[{"html_id":"join_type:String-instance-method","name":"join_type","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":66,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L66"},"def":{"name":"join_type","return_type":"String","visibility":"Public","body":"\"LEFT\""},"external_var":false}]},{"html_id":"avram/Avram/Join/Right","path":"Avram/Join/Right.html","kind":"class","full_name":"Avram::Join::Right","name":"Right","abstract":false,"superclass":{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Join/SqlClause","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/join.cr","line_number":71,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L71"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"instance_methods":[{"html_id":"join_type:String-instance-method","name":"join_type","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":72,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L72"},"def":{"name":"join_type","return_type":"String","visibility":"Public","body":"\"RIGHT\""},"external_var":false}]},{"html_id":"avram/Avram/Join/SqlClause","path":"Avram/Join/SqlClause.html","kind":"class","full_name":"Avram::Join::SqlClause","name":"SqlClause","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/join.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/Join/Full","kind":"class","full_name":"Avram::Join::Full","name":"Full"},{"html_id":"avram/Avram/Join/Inner","kind":"class","full_name":"Avram::Join::Inner","name":"Inner"},{"html_id":"avram/Avram/Join/Left","kind":"class","full_name":"Avram::Join::Left","name":"Left"},{"html_id":"avram/Avram/Join/Right","kind":"class","full_name":"Avram::Join::Right","name":"Right"}],"namespace":{"html_id":"avram/Avram/Join","kind":"module","full_name":"Avram::Join","name":"Join"},"constructors":[{"html_id":"new(from:TableName,to:TableName,primary_key:Symbol|Nil=nil,foreign_key:Symbol|Nil=nil,comparison:String|Nil=\"=\",using:Array(Symbol)=[]ofSymbol,alias_to:TableName|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"to","external_name":"to","restriction":"TableName"},{"name":"primary_key","default_value":"nil","external_name":"primary_key","restriction":"Symbol | ::Nil"},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":"Symbol | ::Nil"},{"name":"comparison","default_value":"\"=\"","external_name":"comparison","restriction":"String | ::Nil"},{"name":"using","default_value":"[] of Symbol","external_name":"using","restriction":"Array(Symbol)"},{"name":"alias_to","default_value":"nil","external_name":"alias_to","restriction":"TableName | ::Nil"}],"args_string":"(from : TableName, to : TableName, primary_key : Symbol | Nil = nil, foreign_key : Symbol | Nil = nil, comparison : String | Nil = \"=\", using : Array(Symbol) = [] of Symbol, alias_to : TableName | Nil = nil)","args_html":"(from : <a href=\"../../Avram/TableName.html\">TableName</a>, to : <a href=\"../../Avram/TableName.html\">TableName</a>, primary_key : Symbol | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, foreign_key : Symbol | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, comparison : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> = <span class=\"s\">&quot;=&quot;</span>, using : <a href=\"../../Array.html\">Array</a>(Symbol) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Symbol</span>, alias_to : <a href=\"../../Avram/TableName.html\">TableName</a> | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/join.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L9"},"def":{"name":"new","args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"to","external_name":"to","restriction":"TableName"},{"name":"primary_key","default_value":"nil","external_name":"primary_key","restriction":"Symbol | ::Nil"},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":"Symbol | ::Nil"},{"name":"comparison","default_value":"\"=\"","external_name":"comparison","restriction":"String | ::Nil"},{"name":"using","default_value":"[] of Symbol","external_name":"using","restriction":"Array(Symbol)"},{"name":"alias_to","default_value":"nil","external_name":"alias_to","restriction":"TableName | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(from, to, primary_key, foreign_key, comparison, using, alias_to)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"clone:self-instance-method","name":"clone","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":54,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L54"},"def":{"name":"clone","return_type":"self","visibility":"Public","body":"self"},"external_var":false},{"html_id":"default_foreign_key:String-instance-method","name":"default_foreign_key","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":50,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L50"},"def":{"name":"default_foreign_key","return_type":"String","visibility":"Public","body":"(Wordsmith::Inflector.singularize(@from.to_s)) + \"_id\""},"external_var":false},{"html_id":"from:TableName-instance-method","name":"from","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L5"},"def":{"name":"from","return_type":"TableName","visibility":"Public","body":"@from"},"external_var":false},{"html_id":"from_column:String-instance-method","name":"from_column","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":42,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L42"},"def":{"name":"from_column","return_type":"String","visibility":"Public","body":"\"\\\"#{@from}\\\".\\\"#{@primary_key || \"id\"}\\\"\""},"external_var":false},{"html_id":"join_type:String-instance-method","name":"join_type","abstract":true,"location":{"filename":"src/avram/join.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L21"},"def":{"name":"join_type","return_type":"String","visibility":"Public","body":""},"external_var":false},{"html_id":"to:TableName-instance-method","name":"to","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L38"},"def":{"name":"to","return_type":"TableName","visibility":"Public","body":"@alias_to || @to"},"external_var":false},{"html_id":"to_column:String-instance-method","name":"to_column","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":46,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L46"},"def":{"name":"to_column","return_type":"String","visibility":"Public","body":"\"\\\"#{to}\\\".\\\"#{@foreign_key || default_foreign_key}\\\"\""},"external_var":false},{"html_id":"to_sql:String-instance-method","name":"to_sql","abstract":false,"location":{"filename":"src/avram/join.cr","line_number":23,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/join.cr#L23"},"def":{"name":"to_sql","return_type":"String","visibility":"Public","body":"String.build do |io|\n  (io << join_type) << \" JOIN \"\n  @to.to_s(io)\n  if @alias_to\n    (io << \" AS \") << @alias_to\n  end\n  if @using.presence\n    ((io << \" USING (\") << @using) << ')'\n  else\n    (((((io << \" ON \") << from_column) << ' ') << @comparison) << ' ') << to_column\n  end\nend"},"external_var":false}]}]},{"html_id":"avram/Avram/LazyLoadError","path":"Avram/LazyLoadError.html","kind":"class","full_name":"Avram::LazyLoadError","name":"LazyLoadError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L16"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when trying to access a record that was not preloaded and lazy load\nis disabled.","summary":"<p>Raised when trying to access a record that was not preloaded and lazy load is disabled.</p>","constructors":[{"html_id":"new(model:String,association:String)-class-method","name":"new","abstract":false,"args":[{"name":"model","external_name":"model","restriction":"String"},{"name":"association","external_name":"association","restriction":"String"}],"args_string":"(model : String, association : String)","args_html":"(model : <a href=\"../String.html\">String</a>, association : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L20"},"def":{"name":"new","args":[{"name":"model","external_name":"model","restriction":"String"},{"name":"association","external_name":"association","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model, association)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"association:String-instance-method","name":"association","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L18"},"def":{"name":"association","return_type":"String","visibility":"Public","body":"@association"},"external_var":false},{"html_id":"model:String-instance-method","name":"model","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L17"},"def":{"name":"model","return_type":"String","visibility":"Public","body":"@model"},"external_var":false}]},{"html_id":"avram/Avram/MarkAsFailed","path":"Avram/MarkAsFailed.html","kind":"module","full_name":"Avram::MarkAsFailed","name":"MarkAsFailed","abstract":false,"locations":[{"filename":"src/avram/mark_as_failed.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/mark_as_failed.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"mark_as_failed:Nil-instance-method","name":"mark_as_failed","abstract":false,"location":{"filename":"src/avram/mark_as_failed.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/mark_as_failed.cr#L2"},"def":{"name":"mark_as_failed","return_type":"Nil","visibility":"Public","body":"self.save_status = Avram::SaveOperation::OperationStatus::SaveFailed"},"external_var":false}]},{"html_id":"avram/Avram/Migrator","path":"Avram/Migrator.html","kind":"module","full_name":"Avram::Migrator","name":"Migrator","abstract":false,"locations":[{"filename":"src/avram/migrator/alter_extension_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_extension_statement.cr#L1"},{"filename":"src/avram/migrator/migrator.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migrator.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"run(&)-class-method","name":"run","abstract":false,"location":{"filename":"src/avram/migrator/migrator.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migrator.cr#L2"},"def":{"name":"run","yields":0,"block_arity":0,"visibility":"Public","body":"begin\n  yield\nrescue e\n  puts(e.inspect_with_backtrace)\n  exit(1)\nend"},"external_var":false}],"types":[{"html_id":"avram/Avram/Migrator/AlterExtensionStatement","path":"Avram/Migrator/AlterExtensionStatement.html","kind":"class","full_name":"Avram::Migrator::AlterExtensionStatement","name":"AlterExtensionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/alter_extension_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_extension_statement.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(name:String,to:String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"to","default_value":"nil","external_name":"to","restriction":"String | ::Nil"}],"args_string":"(name : String, to : String | Nil = nil)","args_html":"(name : <a href=\"../../String.html\">String</a>, to : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/alter_extension_statement.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_extension_statement.cr#L2"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"to","default_value":"nil","external_name":"to","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, to)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/alter_extension_statement.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_extension_statement.cr#L5"},"def":{"name":"build","visibility":"Public","body":"String.build do |sql|\n  ((sql << \"ALTER EXTENSION \\\"\") << @name) << \"\\\" UPDATE\"\n  if @to\n    sql << to_version\n  end\n  sql << ';'\nend"},"external_var":false},{"html_id":"to_version-instance-method","name":"to_version","abstract":false,"location":{"filename":"src/avram/migrator/alter_extension_statement.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_extension_statement.cr#L13"},"def":{"name":"to_version","visibility":"Public","body":"\" TO '#{@to}'\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/AlterTableStatement","path":"Avram/Migrator/AlterTableStatement.html","kind":"class","full_name":"Avram::Migrator::AlterTableStatement","name":"AlterTableStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(table_name:TableName,*,if_exists:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"","external_name":"","restriction":""},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":"Bool"}],"args_string":"(table_name : TableName, *, if_exists : Bool = false)","args_html":"(table_name : <a href=\"../../Avram/TableName.html\">TableName</a>, *, if_exists : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L17"},"def":{"name":"new","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"","external_name":"","restriction":""},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":"Bool"}],"splat_index":1,"visibility":"Public","body":"_ = allocate\n_.initialize(table_name, if_exists: if_exists)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"add_change_default_statement(column:Avram::Migrator::Columns::Base)-instance-method","name":"add_change_default_statement","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"::Avram::Migrator::Columns::Base"}],"args_string":"(column : Avram::Migrator::Columns::Base)","args_html":"(column : <a href=\"../../Avram/Migrator/Columns/Base.html\">Avram::Migrator::Columns::Base</a>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":114,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L114"},"def":{"name":"add_change_default_statement","args":[{"name":"column","external_name":"column","restriction":"::Avram::Migrator::Columns::Base"}],"visibility":"Public","body":"change_default_statements << (column.build_change_default_statement(@table_name))"},"external_var":false},{"html_id":"add_change_type_statement(column:Avram::Migrator::Columns::Base)-instance-method","name":"add_change_type_statement","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"::Avram::Migrator::Columns::Base"}],"args_string":"(column : Avram::Migrator::Columns::Base)","args_html":"(column : <a href=\"../../Avram/Migrator/Columns/Base.html\">Avram::Migrator::Columns::Base</a>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":110,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L110"},"def":{"name":"add_change_type_statement","args":[{"name":"column","external_name":"column","restriction":"::Avram::Migrator::Columns::Base"}],"visibility":"Public","body":"change_type_statements << (column.build_change_type_statement(@table_name))"},"external_var":false},{"html_id":"add_fill_existing_with_statements(column:Symbol|String,type,value,nilable)-instance-method","name":"add_fill_existing_with_statements","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"Symbol | String"},{"name":"type","external_name":"type","restriction":""},{"name":"value","external_name":"value","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""}],"args_string":"(column : Symbol | String, type, value, nilable)","args_html":"(column : Symbol | <a href=\"../../String.html\">String</a>, type, value, nilable)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":288,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L288"},"def":{"name":"add_fill_existing_with_statements","args":[{"name":"column","external_name":"column","restriction":"Symbol | String"},{"name":"type","external_name":"type","restriction":""},{"name":"value","external_name":"value","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""}],"visibility":"Public","body":"@fill_existing_with_statements << \"UPDATE #{@table_name} SET #{column} = #{value};\"\nif nilable\nelse\n  @fill_existing_with_statements << \"ALTER TABLE #{if_exists_statement}#{@table_name} ALTER COLUMN #{column} SET NOT NULL;\"\nend\n"},"external_var":false},{"html_id":"alter_statements:Array(String)-instance-method","name":"alter_statements","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":153,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L153"},"def":{"name":"alter_statements","return_type":"Array(String)","visibility":"Public","body":"alterations = renamed_rows.map do |statement|\n  \"ALTER TABLE #{if_exists_statement}#{@table_name} #{statement};\"\nend\n\nif (rows + dropped_rows).empty?\nelse\n  alterations << String.build do |statement|\n    ((statement << \"ALTER TABLE \") << if_exists_statement) << @table_name\n    statement << \"\\n\"\n    (rows + dropped_rows).join(statement, \",\\n\")\n    statement << ';'\n  end\nend\n\nalterations\n"},"external_var":false},{"html_id":"build(&)-instance-method","name":"build","doc":"Accepts a block to alter a table using the `add` method. The generated sql\nstatements are aggregated in the `statements` getter.\n\n## Usage\n\n```\nbuilt = Avram::Migrator::AlterTableStatement.new(:users).build do\n  add name : String\n  add age : Int32\n  remove old_field\nend\n\nbuilt.statements\n# => [\n\"ALTER TABLE users\n  ADD name text NOT NULL,\n  ADD age int NOT NULL,\n  DROP old_field\"\n]\n```","summary":"<p>Accepts a block to alter a table using the <code><a href=\"../../Avram/Migrator/AlterTableStatement.html#add%28type_declaration%2Cindex%3Dfalse%2Cusing%3D%3Abtree%2Cunique%3Dfalse%2Cdefault%3Dnil%2Cfill_existing_with%3Dnil%2C%2A%2Atype_options%29-macro\">add</a></code> method.</p>","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":138,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L138"},"def":{"name":"build","yields":0,"block_arity":0,"visibility":"Public","body":"with self yield\nself\n"},"external_var":false},{"html_id":"build_nullability_statement(column_name,nullability)-instance-method","name":"build_nullability_statement","abstract":false,"args":[{"name":"column_name","external_name":"column_name","restriction":""},{"name":"nullability","external_name":"nullability","restriction":""}],"args_string":"(column_name, nullability)","args_html":"(column_name, nullability)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":106,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L106"},"def":{"name":"build_nullability_statement","args":[{"name":"column_name","external_name":"column_name","restriction":""},{"name":"nullability","external_name":"nullability","restriction":""}],"visibility":"Public","body":"\"ALTER TABLE #{@table_name} ALTER COLUMN #{column_name} #{nullability ? \"DROP\" : \"SET\"} NOT NULL;\""},"external_var":false},{"html_id":"change_default_statements:Array(String)-instance-method","name":"change_default_statements","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L13"},"def":{"name":"change_default_statements","visibility":"Public","body":"@change_default_statements"},"external_var":false},{"html_id":"change_nullability_statements:Array(String)-instance-method","name":"change_nullability_statements","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L14"},"def":{"name":"change_nullability_statements","visibility":"Public","body":"@change_nullability_statements"},"external_var":false},{"html_id":"change_type_statements:Array(String)-instance-method","name":"change_type_statements","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L12"},"def":{"name":"change_type_statements","visibility":"Public","body":"@change_type_statements"},"external_var":false},{"html_id":"dropped_rows:Array(String)-instance-method","name":"dropped_rows","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L10"},"def":{"name":"dropped_rows","visibility":"Public","body":"@dropped_rows"},"external_var":false},{"html_id":"fill_existing_with_statements:Array(String)-instance-method","name":"fill_existing_with_statements","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L11"},"def":{"name":"fill_existing_with_statements","visibility":"Public","body":"@fill_existing_with_statements"},"external_var":false},{"html_id":"if_exists_statement-instance-method","name":"if_exists_statement","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":147,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L147"},"def":{"name":"if_exists_statement","visibility":"Public","body":"if if_exists?\n  \"IF EXISTS \"\nend"},"external_var":false},{"html_id":"renamed_rows:Array(String)-instance-method","name":"renamed_rows","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L9"},"def":{"name":"renamed_rows","visibility":"Public","body":"@renamed_rows"},"external_var":false},{"html_id":"rows:Array(String)-instance-method","name":"rows","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L8"},"def":{"name":"rows","visibility":"Public","body":"@rows"},"external_var":false},{"html_id":"statements-instance-method","name":"statements","abstract":false,"location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":143,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L143"},"def":{"name":"statements","visibility":"Public","body":"((((alter_statements + change_type_statements) + change_default_statements) + change_nullability_statements) + index_statements) + fill_existing_with_statements"},"external_var":false}],"macros":[{"html_id":"add(type_declaration,index=false,using=:btree,unique=false,default=nil,fill_existing_with=nil,**type_options)-macro","name":"add","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"index","default_value":"false","external_name":"index","restriction":""},{"name":"using","default_value":":btree","external_name":"using","restriction":""},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"default","default_value":"nil","external_name":"default","restriction":""},{"name":"fill_existing_with","default_value":"nil","external_name":"fill_existing_with","restriction":""}],"args_string":"(type_declaration, index = false, using = :btree, unique = false, default = nil, fill_existing_with = nil, **type_options)","args_html":"(type_declaration, index = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>, unique = <span class=\"n\">false</span>, default = <span class=\"n\">nil</span>, fill_existing_with = <span class=\"n\">nil</span>, **type_options)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":219,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L219"},"def":{"name":"add","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"index","default_value":"false","external_name":"index","restriction":""},{"name":"using","default_value":":btree","external_name":"using","restriction":""},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"default","default_value":"nil","external_name":"default","restriction":""},{"name":"fill_existing_with","default_value":"nil","external_name":"fill_existing_with","restriction":""}],"double_splat":{"name":"type_options","external_name":"type_options","restriction":""},"visibility":"Public","body":"    \n{% type = type_declaration.type.resolve %}\n\n    \n{% nilable = false %}\n\n    \n{% array = false %}\n\n    \n{% should_fill_existing = (!(fill_existing_with == nil)) && (fill_existing_with != (:nothing)) %}\n\n\n    \n{% if type.nilable? %}\n      {% type = type.union_types.reject(&.==(Nil)).first %}\n      {% nilable = true %}\n    {% end %}\n\n    \n{% if type < Array %}\n      {% type = type.type_vars.first %}\n      {% array = true %}\n    {% end %}\n\n\n    \n{% if (!nilable && (default == nil)) && (fill_existing_with == nil) %}\n      {% raise(\"\\nYou must provide a default value or use fill_existing_with when adding a required column to an existing table.\\n\\nTry one of these...\\n\\n  ▸ add #{type_declaration}, default: \\\"Something\\\"\\n  ▸ add #{type_declaration}, fill_existing_with: \\\"Something\\\"\\n  ▸ add #{type_declaration}, fill_existing_with: :nothing\")\n%}\n    {% end %}\n\n\n    \n{% if (default != nil) && (fill_existing_with != nil) %}\n      {% type_declaration.raise(\"\\nCannot use both 'default' and 'fill_existing_with' arguments for add(#{type_declaration}).\\n\\nTry this...\\n\\n  ▸ Use `default` to set the default value, and backfill existing columns\\n  ▸ Use `fill_existing_with` to backfill existing columns without a default value\")\n%}\n    {% end %}\n\n\n    rows << Avram::Migrator::Columns::\n{{ type }}\nColumn(\n    \n{% if array %}Array({{ type }}){% else %}{{ type }}{% end %}\n\n    ).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: \n{{ nilable || should_fill_existing }}\n,\n      default: \n{{ default }}\n,\n      \n{{ type_options.double_splat }}\n\n    )\n    \n{% if array %}\n    .array!\n    {% end %}\n\n    .build_add_statement_for_alter\n\n    \n{% if should_fill_existing %}\n      add_fill_existing_with_statements(\n        column: {{ type_declaration.var.stringify }},\n        type: {{ type }},\n        value: Avram::Migrator::Columns::{{ type }}Column.prepare_value_for_database({{ fill_existing_with }}),\n        nilable: {{ nilable }}\n      )\n    {% end %}\n\n\n    \n{% if index || unique %}\n      add_index :{{ type_declaration.var }}, using: {{ using }}, unique: {{ unique }}\n    {% end %}\n\n  \n"}},{"html_id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64,fill_existing_with=nil,unique=false,index=true)-macro","name":"add_belongs_to","doc":"Adds a references column and index given a model class and references option.","summary":"<p>Adds a references column and index given a model class and references option.</p>","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"on_delete","external_name":"on_delete","restriction":""},{"name":"references","default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","default_value":"Int64","external_name":"foreign_key_type","restriction":""},{"name":"fill_existing_with","default_value":"nil","external_name":"fill_existing_with","restriction":""},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"index","default_value":"true","external_name":"index","restriction":""}],"args_string":"(type_declaration, on_delete, references = nil, foreign_key_type = Int64, fill_existing_with = nil, unique = false, index = true)","args_html":"(type_declaration, on_delete, references = <span class=\"n\">nil</span>, foreign_key_type = <span class=\"t\">Int64</span>, fill_existing_with = <span class=\"n\">nil</span>, unique = <span class=\"n\">false</span>, index = <span class=\"n\">true</span>)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":171,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L171"},"def":{"name":"add_belongs_to","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"on_delete","external_name":"on_delete","restriction":""},{"name":"references","default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","default_value":"Int64","external_name":"foreign_key_type","restriction":""},{"name":"fill_existing_with","default_value":"nil","external_name":"fill_existing_with","restriction":""},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"index","default_value":"true","external_name":"index","restriction":""}],"visibility":"Public","body":"    \n{% if type_declaration.is_a?(TypeDeclaration) %}{% else %}\n      {% raise(\"add_belongs_to expected a type declaration like 'user : User', instead got: '#{type_declaration}'\") %}\n    {% end %}\n\n    \n{% if (type_declaration.type.stringify =~ (/\\w::\\w/)) && references.nil? %}\n      {% raise(\"Namespaced models must include the `references` option with the name of the table.\\n\\nTry this...\\n\\n  ▸ add_belongs_to(#{type_declaration}, on_delete: #{on_delete}, references: :the_table_name)\")\n%}\n    {% end %}\n\n    \n{% optional = type_declaration.type.is_a?(Union) %}\n\n\n    \n{% if optional %}\n      {% underscored_class = type_declaration.type.types.first %}\n    {% else %}\n      {% underscored_class = type_declaration.type %}\n    {% end %}\n\n    \n{% underscored_class = underscored_class.stringify.underscore.gsub(/::/, \"_\") %}\n\n\n    \n{% foreign_key_name = type_declaration.var + \"_id\" %}\n\n    \n%table_name\n = \n{{ references }}\n || Wordsmith::Inflector.pluralize(\n{{ underscored_class }}\n)\n\n    rows << ::Avram::Migrator::Columns::\n{{ foreign_key_type }}\nColumn(\n{{ foreign_key_type }}\n).new(\n      name: \n{{ foreign_key_name.stringify }}\n,\n      nilable: \n{{ optional }}\n,\n      default: nil\n    )\n    .set_references(references: \n%table_name\n.to_s, on_delete: \n{{ on_delete }}\n)\n    .build_add_statement_for_alter\n\n    \n{% if !(fill_existing_with == nil) && (fill_existing_with != (:nothing)) %}\n      add_fill_existing_with_statements(\n        column: {{ foreign_key_name.stringify }},\n        type: {{ foreign_key_type }},\n        value: Avram::Migrator::Columns::{{ foreign_key_type }}Column.prepare_value_for_database({{ fill_existing_with }}),\n        nilable: {{ optional }}\n      )\n    {% end %}\n\n\n    \n{% if index %}\n    add_index :{{ foreign_key_name }}, unique: {{ unique }}\n    {% end %}\n\n  \n"}},{"html_id":"allow_nulls_for(column_name)-macro","name":"allow_nulls_for","doc":"Change the column's nullability from whatever it is currently to true.\n```\nalter table_for(User) do\n  allow_nulls_for :email\nend\n```","summary":"<p>Change the column's nullability from whatever it is currently to true.</p>\n<p><span class=\"flag red\">DEPRECATED</span>  Use make_optional instead</p>","abstract":false,"args":[{"name":"column_name","external_name":"column_name","restriction":""}],"args_string":"(column_name)","args_html":"(column_name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":91,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L91"},"def":{"name":"allow_nulls_for","args":[{"name":"column_name","external_name":"column_name","restriction":""}],"visibility":"Public","body":"    change_nullability_statements << build_nullability_statement(\n{{ column_name.id.stringify }}\n, true)\n  \n"}},{"html_id":"change_default(type_declaration,default)-macro","name":"change_default","doc":"Change the columns' default value to `default`\n```\nalter table_for(Post) do\n  change_default published_at : Time, default: :now\nend\n```","summary":"<p>Change the columns' default value to <code>default</code> <code>alter table_for(Post) do   change_default published_at : <a href=\"../../Time.html\">Time</a>, default: :now end</code></p>","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"default","external_name":"default","restriction":""}],"args_string":"(type_declaration, default)","args_html":"(type_declaration, default)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":70,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L70"},"def":{"name":"change_default","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"    \n{%\n  if !type_declaration.is_a?(TypeDeclaration)\n    raise(\"Must pass a type declaration to 'change_default'. Example: change_default count : Int32, default: 1\")\n  end\n%}\n\n    \n%column\n = ::Avram::Migrator::Columns::\n{{ type_declaration.type }}\nColumn(\n{{ type_declaration.type }}\n).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: false,\n      default: \n{{ default }}\n\n    )\n    add_change_default_statement \n%column\n\n  \n"}},{"html_id":"change_type(type_declaration,**type_options)-macro","name":"change_type","doc":"Change the column's type from whatever it is currently to\n`type_declaration.type`. The only exceptions are when changing\nfrom `text` to `citext` with `String` using `case_sensitive`, or changing to\na `Float64` column which requires setting the `precision`, and `scale`.\n```\nalter table_for(User) do\n  change_type email : String, case_sensitive: false\nend\n```","summary":"<p>Change the column's type from whatever it is currently to <code>type_declaration.type</code>.</p>","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration, **type_options)","args_html":"(type_declaration, **type_options)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L29"},"def":{"name":"change_type","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"double_splat":{"name":"type_options","external_name":"type_options","restriction":""},"visibility":"Public","body":"    \n{%\n  if !type_declaration.is_a?(TypeDeclaration)\n    raise(\"Must pass a type declaration to 'change_type'. Example: change_type age : Int32\")\n  else\n    if type_options.keys.includes?(\"default\".id)\n      raise(\"Cannot change the default value from `change_type`. Use `change_default` instead.\")\n    end\n  end\n%}\n\n    \n{%\n  type = type_declaration.type.resolve\n  nilable = false\n  bytes = false\n%}\n\n    \n{%\n  if type.nilable?\n    type = type.union_types.reject(&.==(Nil)).first\n    nilable = true\n  end\n%}\n\n    \n{%\n  if type < Slice\n    type = \"Bytes\".id\n    bytes = true\n  end\n%}\n\n\n    \n%column\n = ::Avram::Migrator::Columns::\n{{ type }}\nColumn(\n{{ type }}\n).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: \n{{ nilable }}\n,\n      default: nil,\n      \n{{ type_options.double_splat }}\n\n    )\n    add_change_type_statement \n%column\n\n  \n"}},{"html_id":"forbid_nulls_for(column_name)-macro","name":"forbid_nulls_for","doc":"Change the column's nullability from whatever it is currently to false.\n```\nalter table_for(User) do\n  forbid_nulls_for :email\nend\n```","summary":"<p>Change the column's nullability from whatever it is currently to false.</p>\n<p><span class=\"flag red\">DEPRECATED</span>  Use make_required instead</p>","abstract":false,"args":[{"name":"column_name","external_name":"column_name","restriction":""}],"args_string":"(column_name)","args_html":"(column_name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":102,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L102"},"def":{"name":"forbid_nulls_for","args":[{"name":"column_name","external_name":"column_name","restriction":""}],"visibility":"Public","body":"    change_nullability_statements  << build_nullability_statement(\n{{ column_name.id.stringify }}\n, false)\n  \n"}},{"html_id":"remove(name)-macro","name":"remove","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":332,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L332"},"def":{"name":"remove","args":[{"name":"name","external_name":"name","restriction":""}],"visibility":"Public","body":"    \n{% if name.is_a?(SymbolLiteral) %}{% else %}\n      symbol_expected_error(\"remove\", {{ name }})\n    {% end %}\n\n    dropped_rows << \"  DROP #{\n{{ name }}\n}\"\n  \n"}},{"html_id":"remove_belongs_to(association_name)-macro","name":"remove_belongs_to","abstract":false,"args":[{"name":"association_name","external_name":"association_name","restriction":""}],"args_string":"(association_name)","args_html":"(association_name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":339,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L339"},"def":{"name":"remove_belongs_to","args":[{"name":"association_name","external_name":"association_name","restriction":""}],"visibility":"Public","body":"    \n{% if association_name.is_a?(SymbolLiteral) %}{% else %}\n      symbol_expected_error(\"remove_belongs_to\", {{ name }})\n    {% end %}\n\n    remove \n{{ association_name }}\n_id\n  \n"}},{"html_id":"rename(old_name,new_name)-macro","name":"rename","abstract":false,"args":[{"name":"old_name","external_name":"old_name","restriction":""},{"name":"new_name","external_name":"new_name","restriction":""}],"args_string":"(old_name, new_name)","args_html":"(old_name, new_name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":314,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L314"},"def":{"name":"rename","args":[{"name":"old_name","external_name":"old_name","restriction":""},{"name":"new_name","external_name":"new_name","restriction":""}],"visibility":"Public","body":"    \n{% for name in {old_name, new_name} %}\n      {% if name.is_a?(SymbolLiteral) %}{% else %}\n        symbol_expected_error(\"rename\", {{ name }})\n      {% end %}\n    {% end %}\n\n    renamed_rows << \"RENAME COLUMN #{\n{{ old_name }}\n} TO #{\n{{ new_name }}\n}\"\n  \n"}},{"html_id":"rename_belongs_to(old_association_name,new_association_name)-macro","name":"rename_belongs_to","abstract":false,"args":[{"name":"old_association_name","external_name":"old_association_name","restriction":""},{"name":"new_association_name","external_name":"new_association_name","restriction":""}],"args_string":"(old_association_name, new_association_name)","args_html":"(old_association_name, new_association_name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":323,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L323"},"def":{"name":"rename_belongs_to","args":[{"name":"old_association_name","external_name":"old_association_name","restriction":""},{"name":"new_association_name","external_name":"new_association_name","restriction":""}],"visibility":"Public","body":"    \n{% for association_name in {old_association_name, new_association_name} %}\n      {% if association_name.is_a?(SymbolLiteral) %}{% else %}\n        symbol_expected_error(\"rename_belongs_to\", {{ name }})\n      {% end %}\n    {% end %}\n\n    rename \n{{ old_association_name }}\n_id, \n{{ new_association_name }}\n_id\n  \n"}},{"html_id":"symbol_expected_error(action,name)-macro","name":"symbol_expected_error","abstract":false,"args":[{"name":"action","external_name":"action","restriction":""},{"name":"name","external_name":"name","restriction":""}],"args_string":"(action, name)","args_html":"(action, name)","location":{"filename":"src/avram/migrator/alter_table_statement.cr","line_number":293,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/alter_table_statement.cr#L293"},"def":{"name":"symbol_expected_error","args":[{"name":"action","external_name":"action","restriction":""},{"name":"name","external_name":"name","restriction":""}],"visibility":"Public","body":"    \n{% if name.is_a?(TypeDeclaration) %}\n      {% example = name.var %}\n    {% else %}\n      {% example = name.id %}\n    {% end %}\n\n\n    \n{% raise(\"\\n#{action} expected a symbol like :#{example}, instead got: #{name}.\\n\\nin: #{name.filename}:#{name.line_number}:#{name.column_number}\\n\\nTry replacing...\\n\\n  ▸ #{name} with :#{example}\")\n%}\n\n  \n"}}]},{"html_id":"avram/Avram/Migrator/BuildReferenceFragment","path":"Avram/Migrator/BuildReferenceFragment.html","kind":"class","full_name":"Avram::Migrator::BuildReferenceFragment","name":"BuildReferenceFragment","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/build_reference_fragment.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/build_reference_fragment.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(references:String|Symbol|Nil,on_delete:Symbol|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"references","external_name":"references","restriction":"::String | ::Symbol | ::Nil"},{"name":"on_delete","external_name":"on_delete","restriction":"::Symbol | ::Nil"}],"args_string":"(references : String | Symbol | Nil, on_delete : Symbol | Nil)","args_html":"(references : <a href=\"../../String.html\">String</a> | Symbol | <a href=\"../../Nil.html\">Nil</a>, on_delete : Symbol | <a href=\"../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/build_reference_fragment.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/build_reference_fragment.cr#L7"},"def":{"name":"new","args":[{"name":"references","external_name":"references","restriction":"::String | ::Symbol | ::Nil"},{"name":"on_delete","external_name":"on_delete","restriction":"::Symbol | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(references, on_delete)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/build_reference_fragment.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/build_reference_fragment.cr#L10"},"def":{"name":"build","visibility":"Public","body":"if on_delete == (:do_nothing)\n  \" REFERENCES #{references}\"\nelse\n  (\" REFERENCES #{references}\" + \" ON DELETE \") + on_delete_sql\nend"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/ChangeNullStatement","path":"Avram/Migrator/ChangeNullStatement.html","kind":"class","full_name":"Avram::Migrator::ChangeNullStatement","name":"ChangeNullStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/change_null_statement.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/change_null_statement.cr#L9"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for changing a columns NOT NULL status.\n\n### Usage\n\n```\nChangeNullStatement.new(:users, :email, make: :optional).build\n# => \"ALTER TABLE users ALTER COLUMN email DROP NOT NULL;\"\n```","summary":"<p>Builds an SQL statement for changing a columns NOT NULL status.</p>","constructors":[{"html_id":"new(table:TableName,column:Symbol,required:Bool)-class-method","name":"new","abstract":false,"args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"},{"name":"required","external_name":"required","restriction":"Bool"}],"args_string":"(table : TableName, column : Symbol, required : Bool)","args_html":"(table : <a href=\"../../Avram/TableName.html\">TableName</a>, column : Symbol, required : <a href=\"../../Bool.html\">Bool</a>)","location":{"filename":"src/avram/migrator/change_null_statement.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/change_null_statement.cr#L10"},"def":{"name":"new","args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"},{"name":"required","external_name":"required","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table, column, required)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/change_null_statement.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/change_null_statement.cr#L13"},"def":{"name":"build","visibility":"Public","body":"if @required\n  change = \"SET\"\nelse\n  change = \"DROP\"\nend\n\nString.build do |index|\n  (index << \"ALTER TABLE \") << @table\n  (index << \" ALTER COLUMN \") << @column\n  ((index << ' ') << change) << \" NOT NULL;\"\nend\n"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns","path":"Avram/Migrator/Columns.html","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns","abstract":false,"locations":[{"filename":"src/avram/migrator/columns/base.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L1"},{"filename":"src/avram/migrator/columns/bool_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/bool_column.cr#L3"},{"filename":"src/avram/migrator/columns/bytes_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/bytes_column.cr#L3"},{"filename":"src/avram/migrator/columns/float_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L3"},{"filename":"src/avram/migrator/columns/int16_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int16_column.cr#L3"},{"filename":"src/avram/migrator/columns/int32_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int32_column.cr#L3"},{"filename":"src/avram/migrator/columns/int64_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int64_column.cr#L3"},{"filename":"src/avram/migrator/columns/string_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/string_column.cr#L3"},{"filename":"src/avram/migrator/columns/time_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/time_column.cr#L3"},{"filename":"src/avram/migrator/columns/uuid_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/uuid_column.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"types":[{"html_id":"avram/Avram/Migrator/Columns/Base","path":"Avram/Migrator/Columns/Base.html","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/base.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/Migrator/Columns/BoolColumn","kind":"class","full_name":"Avram::Migrator::Columns::BoolColumn(T)","name":"BoolColumn"},{"html_id":"avram/Avram/Migrator/Columns/BytesColumn","kind":"class","full_name":"Avram::Migrator::Columns::BytesColumn(T)","name":"BytesColumn"},{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn(T)","name":"FloatColumn"},{"html_id":"avram/Avram/Migrator/Columns/Int16Column","kind":"class","full_name":"Avram::Migrator::Columns::Int16Column(T)","name":"Int16Column"},{"html_id":"avram/Avram/Migrator/Columns/Int32Column","kind":"class","full_name":"Avram::Migrator::Columns::Int32Column(T)","name":"Int32Column"},{"html_id":"avram/Avram/Migrator/Columns/Int64Column","kind":"class","full_name":"Avram::Migrator::Columns::Int64Column(T)","name":"Int64Column"},{"html_id":"avram/Avram/Migrator/Columns/JSON/AnyColumn","kind":"class","full_name":"Avram::Migrator::Columns::JSON::AnyColumn(T)","name":"AnyColumn"},{"html_id":"avram/Avram/Migrator/Columns/StringColumn","kind":"class","full_name":"Avram::Migrator::Columns::StringColumn(T)","name":"StringColumn"},{"html_id":"avram/Avram/Migrator/Columns/TimeColumn","kind":"class","full_name":"Avram::Migrator::Columns::TimeColumn(T)","name":"TimeColumn"},{"html_id":"avram/Avram/Migrator/Columns/UUIDColumn","kind":"class","full_name":"Avram::Migrator::Columns::UUIDColumn(T)","name":"UUIDColumn"}],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"class_methods":[{"html_id":"escape_literal(value)-class-method","name":"escape_literal","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":78,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L78"},"def":{"name":"escape_literal","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"PG::EscapeHelper.escape_literal(value)"},"external_var":false},{"html_id":"prepare_value_for_database(value:Array)-class-method","name":"prepare_value_for_database","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array"}],"args_string":"(value : Array)","args_html":"(value : <a href=\"../../../Array.html\">Array</a>)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":74,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L74"},"def":{"name":"prepare_value_for_database","args":[{"name":"value","external_name":"value","restriction":"Array"}],"visibility":"Public","body":"escape_literal(PQ::Param.encode_array(value))"},"external_var":false},{"html_id":"prepare_value_for_database(value)-class-method","name":"prepare_value_for_database","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":70,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L70"},"def":{"name":"prepare_value_for_database","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"escape_literal(value.to_s)"},"external_var":false}],"constructors":[{"html_id":"new(name)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L13"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"array!-instance-method","name":"array!","abstract":false,"location":{"filename":"src/avram/migrator/columns/base.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L28"},"def":{"name":"array!","visibility":"Public","body":"@array = true\nself\n"},"external_var":false},{"html_id":"as_array_type:String-instance-method","name":"as_array_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/base.cr","line_number":49,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L49"},"def":{"name":"as_array_type","return_type":"String","visibility":"Public","body":"@array ? \"[]\" : \"\""},"external_var":false},{"html_id":"build_add_statement_for_alter:String-instance-method","name":"build_add_statement_for_alter","abstract":false,"location":{"filename":"src/avram/migrator/columns/base.cr","line_number":41,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L41"},"def":{"name":"build_add_statement_for_alter","return_type":"String","visibility":"Public","body":"\"  ADD \" + build_add_statement"},"external_var":false},{"html_id":"build_add_statement_for_create:String-instance-method","name":"build_add_statement_for_create","abstract":false,"location":{"filename":"src/avram/migrator/columns/base.cr","line_number":45,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L45"},"def":{"name":"build_add_statement_for_create","return_type":"String","visibility":"Public","body":"\"  \" + build_add_statement"},"external_var":false},{"html_id":"build_change_default_statement(table_name:TableName):String-instance-method","name":"build_change_default_statement","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"}],"args_string":"(table_name : TableName) : String","args_html":"(table_name : <a href=\"../../../Avram/TableName.html\">TableName</a>) : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L37"},"def":{"name":"build_change_default_statement","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"}],"return_type":"String","visibility":"Public","body":"\"ALTER TABLE ONLY #{table_name} ALTER COLUMN #{name} SET#{default_fragment};\""},"external_var":false},{"html_id":"build_change_type_statement(table_name:TableName):String-instance-method","name":"build_change_type_statement","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"}],"args_string":"(table_name : TableName) : String","args_html":"(table_name : <a href=\"../../../Avram/TableName.html\">TableName</a>) : <a href=\"../../../String.html\">String</a>","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":33,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L33"},"def":{"name":"build_change_type_statement","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"}],"return_type":"String","visibility":"Public","body":"\"ALTER TABLE #{table_name} ALTER COLUMN #{name} SET DATA TYPE #{column_type};\""},"external_var":false},{"html_id":"column_type:String-instance-method","name":"column_type","abstract":true,"location":{"filename":"src/avram/migrator/columns/base.cr","line_number":64,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L64"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":""},"external_var":false},{"html_id":"set_references(references:String,on_delete:Symbol)-instance-method","name":"set_references","abstract":false,"args":[{"name":"references","external_name":"references","restriction":"String"},{"name":"on_delete","external_name":"on_delete","restriction":"Symbol"}],"args_string":"(references : String, on_delete : Symbol)","args_html":"(references : <a href=\"../../../String.html\">String</a>, on_delete : Symbol)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L16"},"def":{"name":"set_references","args":[{"name":"references","external_name":"references","restriction":"String"},{"name":"on_delete","external_name":"on_delete","restriction":"Symbol"}],"visibility":"Public","body":"@references = references\n@on_delete = on_delete\nself\n"},"external_var":false},{"html_id":"set_references(references:Nil,on_delete:Nil)-instance-method","name":"set_references","abstract":false,"args":[{"name":"references","external_name":"references","restriction":"Nil"},{"name":"on_delete","external_name":"on_delete","restriction":"Nil"}],"args_string":"(references : Nil, on_delete : Nil)","args_html":"(references : <a href=\"../../../Nil.html\">Nil</a>, on_delete : <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L20"},"def":{"name":"set_references","args":[{"name":"references","external_name":"references","restriction":"Nil"},{"name":"on_delete","external_name":"on_delete","restriction":"Nil"}],"visibility":"Public","body":"@references = references\n@on_delete = on_delete\nself\n"},"external_var":false},{"html_id":"set_references(references:Nil|String,on_delete:Symbol|Nil)-instance-method","name":"set_references","abstract":false,"args":[{"name":"references","external_name":"references","restriction":"::Nil | ::String"},{"name":"on_delete","external_name":"on_delete","restriction":"::Symbol | ::Nil"}],"args_string":"(references : Nil | String, on_delete : Symbol | Nil)","args_html":"(references : <a href=\"../../../Nil.html\">Nil</a> | <a href=\"../../../String.html\">String</a>, on_delete : Symbol | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/base.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/base.cr#L24"},"def":{"name":"set_references","args":[{"name":"references","external_name":"references","restriction":"::Nil | ::String"},{"name":"on_delete","external_name":"on_delete","restriction":"::Symbol | ::Nil"}],"visibility":"Public","body":"@references = references\n@on_delete = on_delete\n{% raise(\"When setting a reference you must set the reference table and the 'on_delete' option.\") %}\n"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/BoolColumn","path":"Avram/Migrator/Columns/BoolColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::BoolColumn(T)","name":"BoolColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/bool_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/bool_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:T|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"T | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : T | Nil)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : T | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/bool_column.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/bool_column.cr#L7"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"T | ::Nil"}],"visibility":"Public","body":"_ = BoolColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/bool_column.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/bool_column.cr#L10"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"boolean\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/BytesColumn","path":"Avram/Migrator/Columns/BytesColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::BytesColumn(T)","name":"BytesColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/bytes_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/bytes_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:Slice(UInt8)|T|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Slice(::UInt8) | T | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : Slice(UInt8) | T | Nil)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : <a href=\"../../../Slice.html\">Slice</a>(UInt8) | T | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/bytes_column.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/bytes_column.cr#L7"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Slice(::UInt8) | T | ::Nil"}],"visibility":"Public","body":"_ = BytesColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/bytes_column.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/bytes_column.cr#L10"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"bytea\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/Float32Column","path":"Avram/Migrator/Columns/Float32Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Float32Column(T)","name":"Float32Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/float_column.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L26"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name,nilable,default,precision,scale)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""},{"name":"default","external_name":"default","restriction":""},{"name":"precision","external_name":"precision","restriction":""},{"name":"scale","external_name":"scale","restriction":""}],"args_string":"(name, nilable, default, precision, scale)","args_html":"(name, nilable, default, precision, scale)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L11"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""},{"name":"default","external_name":"default","restriction":""},{"name":"precision","external_name":"precision","restriction":""},{"name":"scale","external_name":"scale","restriction":""}],"visibility":"Public","body":"_ = Float32Column(T).allocate\n_.initialize(name, nilable, default, precision, scale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(name,nilable,default)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""},{"name":"default","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L14"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"_ = Float32Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/Float64Column","path":"Avram/Migrator/Columns/Float64Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Float64Column(T)","name":"Float64Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn","name":"FloatColumn"},{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/float_column.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L29"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name,nilable,default,precision,scale)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""},{"name":"default","external_name":"default","restriction":""},{"name":"precision","external_name":"precision","restriction":""},{"name":"scale","external_name":"scale","restriction":""}],"args_string":"(name, nilable, default, precision, scale)","args_html":"(name, nilable, default, precision, scale)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L11"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""},{"name":"default","external_name":"default","restriction":""},{"name":"precision","external_name":"precision","restriction":""},{"name":"scale","external_name":"scale","restriction":""}],"visibility":"Public","body":"_ = Float64Column(T).allocate\n_.initialize(name, nilable, default, precision, scale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(name,nilable,default)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""},{"name":"default","external_name":"default","restriction":""}],"args_string":"(name, nilable, default)","args_html":"(name, nilable, default)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L14"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"nilable","external_name":"nilable","restriction":""},{"name":"default","external_name":"default","restriction":""}],"visibility":"Public","body":"_ = Float64Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/FloatColumn","path":"Avram/Migrator/Columns/FloatColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::FloatColumn(T)","name":"FloatColumn","abstract":true,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/float_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/Migrator/Columns/Float32Column","kind":"class","full_name":"Avram::Migrator::Columns::Float32Column(T)","name":"Float32Column"},{"html_id":"avram/Avram/Migrator/Columns/Float64Column","kind":"class","full_name":"Avram::Migrator::Columns::Float64Column(T)","name":"Float64Column"}],"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:Float32|T|Nil,precision:Int32|Nil,scale:Int32|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Float32 | T | ::Nil"},{"name":"precision","external_name":"precision","restriction":"::Int32 | ::Nil"},{"name":"scale","external_name":"scale","restriction":"::Int32 | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : Float32 | T | Nil, precision : Int32 | Nil, scale : Int32 | Nil)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : Float32 | T | <a href=\"../../../Nil.html\">Nil</a>, precision : <a href=\"../../../Int32.html\">Int32</a> | <a href=\"../../../Nil.html\">Nil</a>, scale : <a href=\"../../../Int32.html\">Int32</a> | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L11"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Float32 | T | ::Nil"},{"name":"precision","external_name":"precision","restriction":"::Int32 | ::Nil"},{"name":"scale","external_name":"scale","restriction":"::Int32 | ::Nil"}],"visibility":"Public","body":"_ = FloatColumn(T).allocate\n_.initialize(name, nilable, default, precision, scale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(name:String,nilable:Bool|Nil,default:Float32|T|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Float32 | T | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : Float32 | T | Nil)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : Float32 | T | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L14"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Float32 | T | ::Nil"}],"visibility":"Public","body":"_ = FloatColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/float_column.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/float_column.cr#L17"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"if precision && scale\n  \"decimal(#{precision},#{scale})\"\nelse\n  \"decimal\"\nend"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/Int16Column","path":"Avram/Migrator/Columns/Int16Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Int16Column(T)","name":"Int16Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/int16_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int16_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:Int32|T|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Int32 | T | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : Int32 | T | Nil)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : <a href=\"../../../Int32.html\">Int32</a> | T | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/int16_column.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int16_column.cr#L7"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Int32 | T | ::Nil"}],"visibility":"Public","body":"_ = Int16Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/int16_column.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int16_column.cr#L10"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"smallint\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/Int32Column","path":"Avram/Migrator/Columns/Int32Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Int32Column(T)","name":"Int32Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/int32_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int32_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:T|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"T | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : T | Nil)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : T | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/int32_column.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int32_column.cr#L7"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"T | ::Nil"}],"visibility":"Public","body":"_ = Int32Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/int32_column.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int32_column.cr#L10"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"int4\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/Int64Column","path":"Avram/Migrator/Columns/Int64Column.html","kind":"class","full_name":"Avram::Migrator::Columns::Int64Column(T)","name":"Int64Column","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/int64_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int64_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:Int32|T|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Int32 | T | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : Int32 | T | Nil)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : <a href=\"../../../Int32.html\">Int32</a> | T | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/int64_column.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int64_column.cr#L7"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Int32 | T | ::Nil"}],"visibility":"Public","body":"_ = Int64Column(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/int64_column.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/int64_column.cr#L10"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"bigint\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/JSON","path":"Avram/Migrator/Columns/JSON.html","kind":"module","full_name":"Avram::Migrator::Columns::JSON","name":"JSON","abstract":false,"locations":[{"filename":"src/avram/migrator/columns/json_column.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/json_column.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"types":[{"html_id":"avram/Avram/Migrator/Columns/JSON/AnyColumn","path":"Avram/Migrator/Columns/JSON/AnyColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::JSON::AnyColumn(T)","name":"AnyColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/json_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/json_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns/JSON","kind":"module","full_name":"Avram::Migrator::Columns::JSON","name":"JSON"},"class_methods":[{"html_id":"prepare_value_for_database(value)-class-method","name":"prepare_value_for_database","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/migrator/columns/json_column.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/json_column.cr#L14"},"def":{"name":"prepare_value_for_database","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"escape_literal(value.to_json)"},"external_var":false}],"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:::JSON::Any|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::JSON::Any | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : ::JSON::Any | Nil)","args_html":"(name : <a href=\"../../../../String.html\">String</a>, nilable : <a href=\"../../../../Bool.html\">Bool</a> | <a href=\"../../../../Nil.html\">Nil</a>, default : <a href=\"../../../../JSON/Any.html\">::JSON::Any</a> | <a href=\"../../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/json_column.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/json_column.cr#L7"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::JSON::Any | ::Nil"}],"visibility":"Public","body":"_ = AnyColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/json_column.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/json_column.cr#L10"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"jsonb\""},"external_var":false}]}]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","path":"Avram/Migrator/Columns/PrimaryKeys.html","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys","abstract":false,"locations":[{"filename":"src/avram/migrator/columns/primary_keys/base.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/base.cr#L1"},{"filename":"src/avram/migrator/columns/primary_keys/int16_primary_key.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int16_primary_key.cr#L3"},{"filename":"src/avram/migrator/columns/primary_keys/int32_primary_key.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int32_primary_key.cr#L3"},{"filename":"src/avram/migrator/columns/primary_keys/int64_primary_key.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int64_primary_key.cr#L3"},{"filename":"src/avram/migrator/columns/primary_keys/string_primary_key.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/string_primary_key.cr#L3"},{"filename":"src/avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/uuid_primary_key.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"types":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","path":"Avram/Migrator/Columns/PrimaryKeys/Base.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/primary_keys/base.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/base.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int16PrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int16PrimaryKey","name":"Int16PrimaryKey"},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int32PrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int32PrimaryKey","name":"Int32PrimaryKey"},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int64PrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int64PrimaryKey","name":"Int64PrimaryKey"},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/StringPrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::StringPrimaryKey","name":"StringPrimaryKey"},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/UUIDPrimaryKey","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::UUIDPrimaryKey","name":"UUIDPrimaryKey"}],"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"instance_methods":[{"html_id":"build:String-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/columns/primary_keys/base.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/base.cr#L8"},"def":{"name":"build","return_type":"String","visibility":"Public","body":"\"  \\\"#{name}\\\" #{column_type} PRIMARY KEY\""},"external_var":false},{"html_id":"column_type-instance-method","name":"column_type","abstract":true,"location":{"filename":"src/avram/migrator/columns/primary_keys/base.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/base.cr#L6"},"def":{"name":"column_type","visibility":"Public","body":""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int16PrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/Int16PrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int16PrimaryKey","name":"Int16PrimaryKey","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/primary_keys/int16_primary_key.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int16_primary_key.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"constructors":[{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/columns/primary_keys/int16_primary_key.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int16_primary_key.cr#L5"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/primary_keys/int16_primary_key.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int16_primary_key.cr#L8"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"smallserial\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int32PrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/Int32PrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int32PrimaryKey","name":"Int32PrimaryKey","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/primary_keys/int32_primary_key.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int32_primary_key.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"constructors":[{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/columns/primary_keys/int32_primary_key.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int32_primary_key.cr#L5"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/primary_keys/int32_primary_key.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int32_primary_key.cr#L8"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"serial4\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Int64PrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/Int64PrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Int64PrimaryKey","name":"Int64PrimaryKey","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/primary_keys/int64_primary_key.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int64_primary_key.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"constructors":[{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/columns/primary_keys/int64_primary_key.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int64_primary_key.cr#L5"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/primary_keys/int64_primary_key.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/int64_primary_key.cr#L8"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"bigserial\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/StringPrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/StringPrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::StringPrimaryKey","name":"StringPrimaryKey","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/primary_keys/string_primary_key.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/string_primary_key.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"constructors":[{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/columns/primary_keys/string_primary_key.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/string_primary_key.cr#L5"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build:String-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/columns/primary_keys/string_primary_key.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/string_primary_key.cr#L12"},"def":{"name":"build","return_type":"String","visibility":"Public","body":"\"  #{name} #{column_type} PRIMARY KEY\""},"external_var":false},{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/primary_keys/string_primary_key.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/string_primary_key.cr#L8"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"text\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/UUIDPrimaryKey","path":"Avram/Migrator/Columns/PrimaryKeys/UUIDPrimaryKey.html","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::UUIDPrimaryKey","name":"UUIDPrimaryKey","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys/Base","kind":"class","full_name":"Avram::Migrator::Columns::PrimaryKeys::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/uuid_primary_key.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns/PrimaryKeys","kind":"module","full_name":"Avram::Migrator::Columns::PrimaryKeys","name":"PrimaryKeys"},"constructors":[{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/uuid_primary_key.cr#L5"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build:String-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/uuid_primary_key.cr#L12"},"def":{"name":"build","return_type":"String","visibility":"Public","body":"\"  \\\"#{name}\\\" #{column_type} PRIMARY KEY DEFAULT gen_random_uuid()\""},"external_var":false},{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/primary_keys/uuid_primary_key.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/primary_keys/uuid_primary_key.cr#L8"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"uuid\""},"external_var":false}]}]},{"html_id":"avram/Avram/Migrator/Columns/StringColumn","path":"Avram/Migrator/Columns/StringColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::StringColumn(T)","name":"StringColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/string_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/string_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:T|Nil,case_sensitive:Bool=true)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"T | ::Nil"},{"name":"case_sensitive","default_value":"true","external_name":"case_sensitive","restriction":"::Bool"}],"args_string":"(name : String, nilable : Bool | Nil, default : T | Nil, case_sensitive : Bool = true)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : T | <a href=\"../../../Nil.html\">Nil</a>, case_sensitive : <a href=\"../../../Bool.html\">Bool</a> = <span class=\"n\">true</span>)","location":{"filename":"src/avram/migrator/columns/string_column.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/string_column.cr#L8"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"T | ::Nil"},{"name":"case_sensitive","default_value":"true","external_name":"case_sensitive","restriction":"::Bool"}],"visibility":"Public","body":"_ = StringColumn(T).allocate\n_.initialize(name, nilable, default, case_sensitive)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","doc":"If `case_sensitive?` is false then the column type is set to `citext`\nwhich requires the `citext` extension to be enabled\notherwise the type is `text`","summary":"<p>If <code>case_sensitive?</code> is false then the column type is set to <code>citext</code> which requires the <code>citext</code> extension to be enabled otherwise the type is <code>text</code></p>","abstract":false,"location":{"filename":"src/avram/migrator/columns/string_column.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/string_column.cr#L14"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"case_sensitive? ? \"text\" : \"citext\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/TimeColumn","path":"Avram/Migrator/Columns/TimeColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::TimeColumn(T)","name":"TimeColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/time_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/time_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"class_methods":[{"html_id":"prepare_value_for_database(value)-class-method","name":"prepare_value_for_database","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/migrator/columns/time_column.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/time_column.cr#L14"},"def":{"name":"prepare_value_for_database","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"if value == (:now)\n  \"NOW()\"\nelse\n  if value.is_a?(Time)\n    escape_literal(value.to_utc.to_s)\n  else\n    raise(\"Unrecognized value :#{value} for a timestamptz. Please use a Time object or :now for current timestamp.\")\n  end\nend"},"external_var":false}],"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:Symbol|T|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Symbol | T | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : Symbol | T | Nil)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : Symbol | T | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/time_column.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/time_column.cr#L7"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"::Symbol | T | ::Nil"}],"visibility":"Public","body":"_ = TimeColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/time_column.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/time_column.cr#L10"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"timestamptz\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/Columns/UUIDColumn","path":"Avram/Migrator/Columns/UUIDColumn.html","kind":"class","full_name":"Avram::Migrator::Columns::UUIDColumn(T)","name":"UUIDColumn","abstract":false,"superclass":{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},"ancestors":[{"html_id":"avram/Avram/Migrator/Columns/Base","kind":"class","full_name":"Avram::Migrator::Columns::Base","name":"Base"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/columns/uuid_column.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/uuid_column.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator/Columns","kind":"module","full_name":"Avram::Migrator::Columns","name":"Columns"},"constructors":[{"html_id":"new(name:String,nilable:Bool|Nil,default:T|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"T | ::Nil"}],"args_string":"(name : String, nilable : Bool | Nil, default : T | Nil)","args_html":"(name : <a href=\"../../../String.html\">String</a>, nilable : <a href=\"../../../Bool.html\">Bool</a> | <a href=\"../../../Nil.html\">Nil</a>, default : T | <a href=\"../../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/columns/uuid_column.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/uuid_column.cr#L7"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"::String"},{"name":"nilable","external_name":"nilable","restriction":"::Bool | ::Nil"},{"name":"default","external_name":"default","restriction":"T | ::Nil"}],"visibility":"Public","body":"_ = UUIDColumn(T).allocate\n_.initialize(name, nilable, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column_type:String-instance-method","name":"column_type","abstract":false,"location":{"filename":"src/avram/migrator/columns/uuid_column.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/columns/uuid_column.cr#L10"},"def":{"name":"column_type","return_type":"String","visibility":"Public","body":"\"uuid\""},"external_var":false}]}]},{"html_id":"avram/Avram/Migrator/CreateExtensionStatement","path":"Avram/Migrator/CreateExtensionStatement.html","kind":"class","full_name":"Avram::Migrator::CreateExtensionStatement","name":"CreateExtensionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/create_extension_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_extension_statement.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/create_extension_statement.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_extension_statement.cr#L2"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/create_extension_statement.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_extension_statement.cr#L5"},"def":{"name":"build","visibility":"Public","body":"\"CREATE EXTENSION IF NOT EXISTS \\\"#{@name}\\\";\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/CreateForeignKeyStatement","path":"Avram/Migrator/CreateForeignKeyStatement.html","kind":"class","full_name":"Avram::Migrator::CreateForeignKeyStatement","name":"CreateForeignKeyStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/create_foreign_key_statement.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_foreign_key_statement.cr#L9"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Generates an ALTER TABLE statement for adding a foreign key constraint on a table.\n\n### Usage\n\n```\nCreateForeignKeyStatement.new(from: :comments, to: :users, column: :author_id, primary_key: :uid, on_delete: :cascade).build\n# => \"ALTER TABLE comments ADD CONSTRAINT comments_author_id_fk FOREIGN KEY (author_id) REFERENCES users (uid) ON DELETE CASCADE;\"\n```","summary":"<p>Generates an ALTER TABLE statement for adding a foreign key constraint on a table.</p>","constructors":[{"html_id":"new(from:TableName,to:TableName,on_delete:Symbol,column:Symbol|Nil=nil,primary_key:Symbol=:id)-class-method","name":"new","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"to","external_name":"to","restriction":"TableName"},{"name":"on_delete","external_name":"on_delete","restriction":"Symbol"},{"name":"column","default_value":"nil","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","default_value":":id","external_name":"primary_key","restriction":"::Symbol"}],"args_string":"(from : TableName, to : TableName, on_delete : Symbol, column : Symbol | Nil = nil, primary_key : Symbol = :id)","args_html":"(from : <a href=\"../../Avram/TableName.html\">TableName</a>, to : <a href=\"../../Avram/TableName.html\">TableName</a>, on_delete : Symbol, column : Symbol | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, primary_key : Symbol = <span class=\"n\">:id</span>)","location":{"filename":"src/avram/migrator/create_foreign_key_statement.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_foreign_key_statement.cr#L10"},"def":{"name":"new","args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"to","external_name":"to","restriction":"TableName"},{"name":"on_delete","external_name":"on_delete","restriction":"Symbol"},{"name":"column","default_value":"nil","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","default_value":":id","external_name":"primary_key","restriction":"::Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(from, to, on_delete, column, primary_key)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/create_foreign_key_statement.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_foreign_key_statement.cr#L13"},"def":{"name":"build","visibility":"Public","body":"foreign_key = @column || ((Wordsmith::Inflector.singularize(@to.to_s)) + \"_id\")\nString.build do |index|\n  index << \"ALTER TABLE\"\n  (index << ' ') << @from\n  ((((index << \" ADD CONSTRAINT \") << @from) << '_') << foreign_key) << \"_fk\"\n  ((index << \" FOREIGN KEY (\") << foreign_key) << ')'\n  index << (BuildReferenceFragment.new(\"#{@to} (#{@primary_key})\", @on_delete)).build\n  index << ';'\nend\n"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/CreateFunctionStatement","path":"Avram/Migrator/CreateFunctionStatement.html","kind":"class","full_name":"Avram::Migrator::CreateFunctionStatement","name":"CreateFunctionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/create_function_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_function_statement.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(name:String,body:String,returns:String=\"trigger\")-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"body","external_name":"body","restriction":"String"},{"name":"returns","default_value":"\"trigger\"","external_name":"returns","restriction":"String"}],"args_string":"(name : String, body : String, returns : String = \"trigger\")","args_html":"(name : <a href=\"../../String.html\">String</a>, body : <a href=\"../../String.html\">String</a>, returns : <a href=\"../../String.html\">String</a> = <span class=\"s\">&quot;trigger&quot;</span>)","location":{"filename":"src/avram/migrator/create_function_statement.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_function_statement.cr#L2"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"body","external_name":"body","restriction":"String"},{"name":"returns","default_value":"\"trigger\"","external_name":"returns","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, body, returns)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/create_function_statement.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_function_statement.cr#L13"},"def":{"name":"build","visibility":"Public","body":"\"CREATE OR REPLACE FUNCTION #{function_name}\\n  RETURNS #{@returns} AS $$\\nBEGIN\\n  #{@body}\\nEND\\n$$ LANGUAGE 'plpgsql';\""},"external_var":false},{"html_id":"function_name-instance-method","name":"function_name","abstract":false,"location":{"filename":"src/avram/migrator/create_function_statement.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_function_statement.cr#L5"},"def":{"name":"function_name","visibility":"Public","body":"if @name.ends_with?(')')\n  @name\nelse\n  \"#{@name}()\"\nend"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/CreateIndexStatement","path":"Avram/Migrator/CreateIndexStatement.html","kind":"class","full_name":"Avram::Migrator::CreateIndexStatement","name":"CreateIndexStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/create_index_statement.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_index_statement.cr#L28"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for creating an index using table name, column\nname(s), index type and unique flag.\n\n### Usage\n\nFor a single column:\n\n```\nCreateIndexStatement.new(:users, columns: :email, using: :btree, unique: true).build\n# => \"CREATE UNIQUE INDEX users_email_index ON users USING btree (email);\"\n```\n\nFor multiple columns:\n\n```\nCreateIndexStatement.new(:users, columns: [:email, :username], using: :btree, unique: true).build\n# => \"CREATE UNIQUE INDEX users_email_username_index ON users USING btree (email, username);\"\n```\n\nWith custom name:\n\n```\nCreateIndexStatement.new(:users, columns: [:email, :username], name: :custom_index_name).build\n# => \"CREATE INDEX custom_index_name ON users USING btree (email, username);\"\n```","summary":"<p>Builds an SQL statement for creating an index using table name, column name(s), index type and unique flag.</p>","constructors":[{"html_id":"new(table:TableName,columns:Columns,using:Symbol=:btree,unique:Bool=false,name:String|Nil|Symbol|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"columns","external_name":"columns","restriction":"Columns"},{"name":"using","default_value":":btree","external_name":"using","restriction":"Symbol"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"::Bool"},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"args_string":"(table : TableName, columns : Columns, using : Symbol = :btree, unique : Bool = false, name : String | Nil | Symbol | Nil = nil)","args_html":"(table : <a href=\"../../Avram/TableName.html\">TableName</a>, columns : <a href=\"../../Avram/Migrator/IndexStatementHelpers/Columns.html\">Columns</a>, using : Symbol = <span class=\"n\">:btree</span>, unique : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>, name : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> | Symbol | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/create_index_statement.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_index_statement.cr#L39"},"def":{"name":"new","args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"columns","external_name":"columns","restriction":"Columns"},{"name":"using","default_value":":btree","external_name":"using","restriction":"Symbol"},{"name":"unique","default_value":"false","external_name":"unique","restriction":"::Bool"},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table, columns, using, unique, name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/create_index_statement.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_index_statement.cr#L44"},"def":{"name":"build","visibility":"Public","body":"index_name = @name\nindex_name || (index_name = \"#{@table}_#{columns.join('_')}_index\")\nmapped_columns = columns.join(\", \") do |col|\n  \"\\\"#{col}\\\"\"\nend\n\nString.build do |index|\n  index << \"CREATE\"\n  if @unique\n    index << \" UNIQUE\"\n  end\n  (index << \" INDEX \") << index_name\n  (index << \" ON \") << @table\n  (index << \" USING \") << @using.to_s.downcase\n  ((index << \" (\") << mapped_columns) << \");\"\nend\n"},"external_var":false}],"types":[{"html_id":"avram/Avram/Migrator/CreateIndexStatement/IndexTypes","path":"Avram/Migrator/CreateIndexStatement/IndexTypes.html","kind":"enum","full_name":"Avram::Migrator::CreateIndexStatement::IndexTypes","name":"IndexTypes","abstract":false,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/create_index_statement.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_index_statement.cr#L31"}],"repository_name":"avram","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Btree","name":"Btree","value":"0"},{"id":"Hash","name":"Hash","value":"1"},{"id":"Gist","name":"Gist","value":"2"},{"id":"Gin","name":"Gin","value":"3"},{"id":"Brin","name":"Brin","value":"4"}],"namespace":{"html_id":"avram/Avram/Migrator/CreateIndexStatement","kind":"class","full_name":"Avram::Migrator::CreateIndexStatement","name":"CreateIndexStatement"},"instance_methods":[{"html_id":"brin?-instance-method","name":"brin?","doc":"Returns `true` if this enum value equals `Brin`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../../Avram/Migrator/CreateIndexStatement/IndexTypes.html#Brin\">Brin</a></code></p>","abstract":false,"location":{"filename":"src/avram/migrator/create_index_statement.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_index_statement.cr#L36"},"def":{"name":"brin?","visibility":"Public","body":"self == Brin"},"external_var":false},{"html_id":"btree?-instance-method","name":"btree?","doc":"Returns `true` if this enum value equals `Btree`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../../Avram/Migrator/CreateIndexStatement/IndexTypes.html#Btree\">Btree</a></code></p>","abstract":false,"location":{"filename":"src/avram/migrator/create_index_statement.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_index_statement.cr#L32"},"def":{"name":"btree?","visibility":"Public","body":"self == Btree"},"external_var":false},{"html_id":"gin?-instance-method","name":"gin?","doc":"Returns `true` if this enum value equals `Gin`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../../Avram/Migrator/CreateIndexStatement/IndexTypes.html#Gin\">Gin</a></code></p>","abstract":false,"location":{"filename":"src/avram/migrator/create_index_statement.cr","line_number":35,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_index_statement.cr#L35"},"def":{"name":"gin?","visibility":"Public","body":"self == Gin"},"external_var":false},{"html_id":"gist?-instance-method","name":"gist?","doc":"Returns `true` if this enum value equals `Gist`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../../Avram/Migrator/CreateIndexStatement/IndexTypes.html#Gist\">Gist</a></code></p>","abstract":false,"location":{"filename":"src/avram/migrator/create_index_statement.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_index_statement.cr#L34"},"def":{"name":"gist?","visibility":"Public","body":"self == Gist"},"external_var":false},{"html_id":"hash?-instance-method","name":"hash?","doc":"Returns `true` if this enum value equals `Hash`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../../Avram/Migrator/CreateIndexStatement/IndexTypes.html#Hash\">Hash</a></code></p>","abstract":false,"location":{"filename":"src/avram/migrator/create_index_statement.cr","line_number":33,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_index_statement.cr#L33"},"def":{"name":"hash?","visibility":"Public","body":"self == Hash"},"external_var":false}]}]},{"html_id":"avram/Avram/Migrator/CreateSequenceStatement","path":"Avram/Migrator/CreateSequenceStatement.html","kind":"class","full_name":"Avram::Migrator::CreateSequenceStatement","name":"CreateSequenceStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/create_sequence_statement.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_sequence_statement.cr#L10"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for creating a sequence using the given name appending \"_seq\".\nAdditional options may be provided for extra customization.\n\n### Usage\n\n```\nCreateSequenceStatement.new(:accounts_number, if_not_exists: true, owned_by: \"accounts.number\").build\n# => \"CREATE SEQUENCE accounts_number_seq;\"\n```","summary":"<p>Builds an SQL statement for creating a sequence using the given name appending &quot;_seq&quot;.</p>","constructors":[{"html_id":"new(name:String|Symbol,*,if_not_exists:Bool=false,owned_by:String=\"NONE\")-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String | Symbol"},{"name":"","external_name":"","restriction":""},{"name":"if_not_exists","default_value":"false","external_name":"if_not_exists","restriction":"Bool"},{"name":"owned_by","default_value":"\"NONE\"","external_name":"owned_by","restriction":"String"}],"args_string":"(name : String | Symbol, *, if_not_exists : Bool = false, owned_by : String = \"NONE\")","args_html":"(name : <a href=\"../../String.html\">String</a> | Symbol, *, if_not_exists : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>, owned_by : <a href=\"../../String.html\">String</a> = <span class=\"s\">&quot;NONE&quot;</span>)","location":{"filename":"src/avram/migrator/create_sequence_statement.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_sequence_statement.cr#L13"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String | Symbol"},{"name":"","external_name":"","restriction":""},{"name":"if_not_exists","default_value":"false","external_name":"if_not_exists","restriction":"Bool"},{"name":"owned_by","default_value":"\"NONE\"","external_name":"owned_by","restriction":"String"}],"splat_index":1,"visibility":"Public","body":"_ = allocate\n_.initialize(name, if_not_exists: if_not_exists, owned_by: owned_by)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/create_sequence_statement.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_sequence_statement.cr#L16"},"def":{"name":"build","visibility":"Public","body":"name = \"#{@name}_seq\"\n\nString.build do |io|\n  io << \"CREATE SEQUENCE \"\n  if if_not_exists?\n    io << \"IF NOT EXISTS \"\n  end\n  io << name\n  ((io << \" OWNED BY \") << @owned_by) << ';'\nend\n"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/CreateTableStatement","path":"Avram/Migrator/CreateTableStatement.html","kind":"class","full_name":"Avram::Migrator::CreateTableStatement","name":"CreateTableStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/create_table_statement.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(table_name:TableName,*,if_not_exists:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"","external_name":"","restriction":""},{"name":"if_not_exists","default_value":"false","external_name":"if_not_exists","restriction":"Bool"}],"args_string":"(table_name : TableName, *, if_not_exists : Bool = false)","args_html":"(table_name : <a href=\"../../Avram/TableName.html\">TableName</a>, *, if_not_exists : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L12"},"def":{"name":"new","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"","external_name":"","restriction":""},{"name":"if_not_exists","default_value":"false","external_name":"if_not_exists","restriction":"Bool"}],"splat_index":1,"visibility":"Public","body":"_ = allocate\n_.initialize(table_name, if_not_exists: if_not_exists)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build(&):CreateTableStatement-instance-method","name":"build","doc":"Accepts a block to build a table and indices using `add` and `add_index` methods.\n\nThe generated sql statements are aggregated in the `statements` method.\n\n## Usage\n\n```\nbuilt = Avram::Migrator::CreateTableStatement.new(:users).build do\n  add_belongs_to Account, on_delete: :cascade\n  add :email : String, unique: true\nend\n\nbuilt.statements\n# => [\n  \"CREATE TABLE users (\n    id serial PRIMARY KEY,\n    created_at timestamptz NOT NULL,\n    updated_at timestamptz NOT NULL,\n    account_id bigint NOT NULL REFERENCES accounts (id) ON DELETE CASCADE,\n    email text NOT NULL);\",\n  \"CREATE UNIQUE INDEX users_email_index ON users USING btree (email);\"\n]\n```\n\nAn optional second argument can toggle between the usage of a numeric or uuid\nbased id column.\n\n```\nbuilt = Avram::Migrator::CreateTableStatement.new(:users, PrimaryKeyType::UUID).build do\n  add :email : String, unique: true\nend\n```","summary":"<p>Accepts a block to build a table and indices using <code><a href=\"../../Avram/Migrator/CreateTableStatement.html#add%28type_declaration%2Cdefault%3Dnil%2Cindex%3Dfalse%2Cunique%3Dfalse%2Cusing%3D%3Abtree%2C%2A%2Atype_options%29-macro\">add</a></code> and <code>add_index</code> methods.</p>","abstract":false,"location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":47,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L47"},"def":{"name":"build","yields":0,"block_arity":0,"return_type":"CreateTableStatement","visibility":"Public","body":"with self yield\nself\n"},"external_var":false},{"html_id":"statements-instance-method","name":"statements","abstract":false,"location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L52"},"def":{"name":"statements","visibility":"Public","body":"[table_statement] + index_statements"},"external_var":false}],"macros":[{"html_id":"add(type_declaration,default=nil,index=false,unique=false,using=:btree,**type_options)-macro","name":"add","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"default","default_value":"nil","external_name":"default","restriction":""},{"name":"index","default_value":"false","external_name":"index","restriction":""},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"using","default_value":":btree","external_name":"using","restriction":""}],"args_string":"(type_declaration, default = nil, index = false, unique = false, using = :btree, **type_options)","args_html":"(type_declaration, default = <span class=\"n\">nil</span>, index = <span class=\"n\">false</span>, unique = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>, **type_options)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":91,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L91"},"def":{"name":"add","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"default","default_value":"nil","external_name":"default","restriction":""},{"name":"index","default_value":"false","external_name":"index","restriction":""},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"using","default_value":":btree","external_name":"using","restriction":""}],"double_splat":{"name":"type_options","external_name":"type_options","restriction":""},"visibility":"Public","body":"    \n{%\n  type = type_declaration.type.resolve\n  nilable = false\n  array = false\n  bytes = false\n%}\n\n    \n{%\n  if type.nilable?\n    type = type.union_types.reject(&.==(Nil)).first\n    nilable = true\n  end\n%}\n\n    \n{%\n  if type < Array\n    type = type.type_vars.first\n    array = true\n  end\n%}\n\n    \n{%\n  if type < Slice\n    type = \"Bytes\".id\n    bytes = true\n  end\n%}\n\n\n\n    rows << Avram::Migrator::Columns::\n{{ type }}\nColumn(\n    \n{% if array %}Array({{ type }}){% else %}{{ type }}{% end %}\n\n    ).new(\n      name: \n{{ type_declaration.var.stringify }}\n,\n      nilable: \n{{ nilable }}\n,\n      default: \n{{ default }}\n,\n      \n{{ type_options.double_splat }}\n\n    )\n    \n{% if array %}\n    .array!\n    {% end %}\n\n    .build_add_statement_for_create\n\n    \n{% if index || unique %}\n      add_index :{{ type_declaration.var }}, using: {{ using }}, unique: {{ unique }}\n    {% end %}\n\n  \n"}},{"html_id":"add_belongs_to(type_declaration,on_delete,references=nil,foreign_key_type=Int64,unique=false,index=true)-macro","name":"add_belongs_to","doc":"Adds a references column and index given a model class and references option.","summary":"<p>Adds a references column and index given a model class and references option.</p>","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"on_delete","external_name":"on_delete","restriction":""},{"name":"references","default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","default_value":"Int64","external_name":"foreign_key_type","restriction":""},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"index","default_value":"true","external_name":"index","restriction":""}],"args_string":"(type_declaration, on_delete, references = nil, foreign_key_type = Int64, unique = false, index = true)","args_html":"(type_declaration, on_delete, references = <span class=\"n\">nil</span>, foreign_key_type = <span class=\"t\">Int64</span>, unique = <span class=\"n\">false</span>, index = <span class=\"n\">true</span>)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":137,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L137"},"def":{"name":"add_belongs_to","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"on_delete","external_name":"on_delete","restriction":""},{"name":"references","default_value":"nil","external_name":"references","restriction":""},{"name":"foreign_key_type","default_value":"Int64","external_name":"foreign_key_type","restriction":""},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"index","default_value":"true","external_name":"index","restriction":""}],"visibility":"Public","body":"    \n{% if type_declaration.is_a?(TypeDeclaration) %}{% else %}\n      {% raise(\"add_belongs_to expected a type declaration like 'user : User', instead got: '#{type_declaration}'\") %}\n    {% end %}\n\n    \n{% if (type_declaration.type.stringify =~ (/\\w::\\w/)) && references.nil? %}\n      {% raise(\"Namespaced models must include the `references` option with the name of the table.\\n\\nTry this...\\n\\n  ▸ add_belongs_to(#{type_declaration}, on_delete: #{on_delete}, references: :the_table_name)\")\n%}\n    {% end %}\n\n    \n{% optional = type_declaration.type.is_a?(Union) %}\n\n\n    \n{% if optional %}\n      {% underscored_class = type_declaration.type.types.first %}\n    {% else %}\n      {% underscored_class = type_declaration.type %}\n    {% end %}\n\n    \n{% underscored_class = underscored_class.stringify.underscore.gsub(/::/, \"_\") %}\n\n\n    \n{% foreign_key_name = type_declaration.var + \"_id\" %}\n\n    \n%table_name\n = \n{{ references }}\n || Wordsmith::Inflector.pluralize(\n{{ underscored_class }}\n)\n\n    rows << Avram::Migrator::Columns::\n{{ foreign_key_type }}\nColumn(\n{{ foreign_key_type }}\n).new(\n      name: \n{{ foreign_key_name.stringify }}\n,\n      nilable: \n{{ optional }}\n,\n      default: nil,\n    )\n    .set_references(references: \n%table_name\n.to_s, on_delete: \n{{ on_delete }}\n)\n    .build_add_statement_for_create\n\n    \n{% if index %}\n    add_index :{{ foreign_key_name }}, unique: {{ unique }}\n    {% end %}\n\n  \n"}},{"html_id":"add_timestamps-macro","name":"add_timestamps","abstract":false,"location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":86,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L86"},"def":{"name":"add_timestamps","visibility":"Public","body":"    add created_at : Time, default: :now\n    add updated_at : Time, default: :now\n  "}},{"html_id":"belongs_to(type_declaration,*args,**named_args)-macro","name":"belongs_to","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(type_declaration, *args, **named_args)","args_html":"(type_declaration, *args, **named_args)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":176,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L176"},"def":{"name":"belongs_to","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"    \n{% raise(\"Unexpected call to `belongs_to` in a migration.\\nFound in #{type_declaration.filename.id}:#{type_declaration.line_number}:#{type_declaration.column_number}.\\n\\nDid you mean to use 'add_belongs_to'?\\n\\n'add_belongs_to #{type_declaration}, ...'\")\n%}\n\n  \n"}},{"html_id":"composite_primary_key(*columns)-macro","name":"composite_primary_key","abstract":false,"args":[{"name":"columns","external_name":"columns","restriction":""}],"args_string":"(*columns)","args_html":"(*columns)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":79,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L79"},"def":{"name":"composite_primary_key","args":[{"name":"columns","external_name":"columns","restriction":""}],"splat_index":0,"visibility":"Public","body":"    \n{% if columns.size < 2 %}\n    {% raise(\"composite_primary_key expected at least two primary keys, instead got #{columns.size}\") %}\n    {% end %}\n\n    constraints << %(  PRIMARY KEY (\n{{ (columns.map do |col|\n  \"\\\"#{col.id}\\\"\"\nend.join(\", \")).id }}\n))\n  \n"}},{"html_id":"primary_key(type_declaration)-macro","name":"primary_key","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","args_html":"(type_declaration)","location":{"filename":"src/avram/migrator/create_table_statement.cr","line_number":73,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_table_statement.cr#L73"},"def":{"name":"primary_key","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"visibility":"Public","body":"    rows << Avram::Migrator::Columns::PrimaryKeys::\n{{ type_declaration.type }}\nPrimaryKey\n      .new(name: \n{{ type_declaration.var.stringify }}\n)\n      .build\n  \n"}}]},{"html_id":"avram/Avram/Migrator/CreateTriggerStatement","path":"Avram/Migrator/CreateTriggerStatement.html","kind":"class","full_name":"Avram::Migrator::CreateTriggerStatement","name":"CreateTriggerStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/create_trigger_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_trigger_statement.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(table_name:TableName,trigger_name:String,function:String,callbacktrigger_when:Symbol=:before,ontrigger_operation:Array(Symbol)=[:update])-class-method","name":"new","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"trigger_name","external_name":"trigger_name","restriction":"String"},{"name":"function","external_name":"function","restriction":"String"},{"name":"trigger_when","default_value":":before","external_name":"callback","restriction":"Symbol"},{"name":"trigger_operation","default_value":"[:update]","external_name":"on","restriction":"Array(Symbol)"}],"args_string":"(table_name : TableName, trigger_name : String, function : String, callback trigger_when : Symbol = :before, on trigger_operation : Array(Symbol) = [:update])","args_html":"(table_name : <a href=\"../../Avram/TableName.html\">TableName</a>, trigger_name : <a href=\"../../String.html\">String</a>, function : <a href=\"../../String.html\">String</a>, callback trigger_when : Symbol = <span class=\"n\">:before</span>, on trigger_operation : <a href=\"../../Array.html\">Array</a>(Symbol) = [<span class=\"n\">:update</span>])","location":{"filename":"src/avram/migrator/create_trigger_statement.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_trigger_statement.cr#L2"},"def":{"name":"new","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"trigger_name","external_name":"trigger_name","restriction":"String"},{"name":"function","external_name":"function","restriction":"String"},{"name":"trigger_when","default_value":":before","external_name":"callback","restriction":"Symbol"},{"name":"trigger_operation","default_value":"[:update]","external_name":"on","restriction":"Array(Symbol)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table_name, trigger_name, function, trigger_when, trigger_operation)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/create_trigger_statement.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/create_trigger_statement.cr#L11"},"def":{"name":"build","visibility":"Public","body":"\"CREATE TRIGGER #{@trigger_name}\\n#{@trigger_when.to_s.upcase} #{operation_statement} ON #{@table_name}\\nFOR EACH ROW\\nEXECUTE PROCEDURE #{@function}();\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/DropExtensionStatement","path":"Avram/Migrator/DropExtensionStatement.html","kind":"class","full_name":"Avram::Migrator::DropExtensionStatement","name":"DropExtensionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/drop_extension_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_extension_statement.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/drop_extension_statement.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_extension_statement.cr#L2"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/drop_extension_statement.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_extension_statement.cr#L5"},"def":{"name":"build","visibility":"Public","body":"\"DROP EXTENSION IF EXISTS \\\"#{@name}\\\" CASCADE;\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/DropForeignKeyStatement","path":"Avram/Migrator/DropForeignKeyStatement.html","kind":"class","full_name":"Avram::Migrator::DropForeignKeyStatement","name":"DropForeignKeyStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/drop_foreign_key_statement.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_foreign_key_statement.cr#L9"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Generates an ALTER TABLE statement for dropping a foreign key constraint on a table.\n\n### Usage\n\n```\nDropForeignKeyStatement.new(from: :comments, references: :users, column: :author_id).build\n# => \"ALTER TABLE comments DROP CONSTRAINT comments_author_id_fk;\"\n```","summary":"<p>Generates an ALTER TABLE statement for dropping a foreign key constraint on a table.</p>","constructors":[{"html_id":"new(from:TableName,references:TableName,column:Symbol|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"references","external_name":"references","restriction":"TableName"},{"name":"column","default_value":"nil","external_name":"column","restriction":"Symbol | ::Nil"}],"args_string":"(from : TableName, references : TableName, column : Symbol | Nil = nil)","args_html":"(from : <a href=\"../../Avram/TableName.html\">TableName</a>, references : <a href=\"../../Avram/TableName.html\">TableName</a>, column : Symbol | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/drop_foreign_key_statement.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_foreign_key_statement.cr#L10"},"def":{"name":"new","args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"references","external_name":"references","restriction":"TableName"},{"name":"column","default_value":"nil","external_name":"column","restriction":"Symbol | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(from, references, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/drop_foreign_key_statement.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_foreign_key_statement.cr#L13"},"def":{"name":"build","visibility":"Public","body":"foreign_key = @column || ((Wordsmith::Inflector.singularize(@references.to_s)) + \"_id\")\nString.build do |index|\n  index << \"ALTER TABLE\"\n  (index << ' ') << @from\n  ((((index << \" DROP CONSTRAINT \") << @from) << '_') << foreign_key) << \"_fk\"\n  index << ';'\nend\n"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/DropFunctionStatement","path":"Avram/Migrator/DropFunctionStatement.html","kind":"class","full_name":"Avram::Migrator::DropFunctionStatement","name":"DropFunctionStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/drop_function_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_function_statement.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/drop_function_statement.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_function_statement.cr#L2"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/drop_function_statement.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_function_statement.cr#L5"},"def":{"name":"build","visibility":"Public","body":"\"DROP FUNCTION IF EXISTS \\\"#{@name}\\\" CASCADE;\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/DropIndexStatement","path":"Avram/Migrator/DropIndexStatement.html","kind":"class","full_name":"Avram::Migrator::DropIndexStatement","name":"DropIndexStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/drop_index_statement.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_index_statement.cr#L27"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ALLOWED_ON_DELETE_STRATEGIES","name":"ALLOWED_ON_DELETE_STRATEGIES","value":"[:cascade, :restrict] of ::Symbol"}],"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for dropping an index by inferring it's name using table name and column(s).\n\n### Usage\n\nFor a single column index:\n\n```\nDropIndexStatement.new(:users, :email, if_exists: true, on_delete: :cascade).build\n# => \"DROP INDEX IF EXISTS users_email_index CASCADE;\"\n```\n\nFor multiple column index:\n\n```\nDropIndexStatement.new(:users, [:email, :username] if_exists: true, on_delete: :cascade).build\n# => \"DROP INDEX IF EXISTS users_email_username_index CASCADE;\"\n```\n\nFor index by name:\n\n```\nDropIndexStatement.new(:users, name: :custom_index_name).build\n# => \"DROP INDEX custom_index_name;\"\n```","summary":"<p>Builds an SQL statement for dropping an index by inferring it's name using table name and column(s).</p>","constructors":[{"html_id":"new(table:TableName,columns:Columns|Nil=nil,if_exists:Bool=false,on_delete:Symbol=:do_nothing,name:String|Nil|Symbol|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"columns","default_value":"nil","external_name":"columns","restriction":"Columns | ::Nil"},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":"::Bool"},{"name":"on_delete","default_value":":do_nothing","external_name":"on_delete","restriction":"::Symbol"},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"args_string":"(table : TableName, columns : Columns | Nil = nil, if_exists : Bool = false, on_delete : Symbol = :do_nothing, name : String | Nil | Symbol | Nil = nil)","args_html":"(table : <a href=\"../../Avram/TableName.html\">TableName</a>, columns : <a href=\"../../Avram/Migrator/IndexStatementHelpers/Columns.html\">Columns</a> | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, if_exists : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>, on_delete : Symbol = <span class=\"n\">:do_nothing</span>, name : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> | Symbol | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/drop_index_statement.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_index_statement.cr#L32"},"def":{"name":"new","args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"columns","default_value":"nil","external_name":"columns","restriction":"Columns | ::Nil"},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":"::Bool"},{"name":"on_delete","default_value":":do_nothing","external_name":"on_delete","restriction":"::Symbol"},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table, columns, if_exists, on_delete, name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/drop_index_statement.cr","line_number":35,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_index_statement.cr#L35"},"def":{"name":"build","visibility":"Public","body":"String.build do |index|\n  index << \"DROP INDEX\"\n  if @if_exists\n    index << \" IF EXISTS\"\n  end\n  (index << ' ') << index_name\n  index << (on_delete_strategy(@on_delete))\nend"},"external_var":false},{"html_id":"on_delete_strategy(on_delete=:do_nothing)-instance-method","name":"on_delete_strategy","abstract":false,"args":[{"name":"on_delete","default_value":":do_nothing","external_name":"on_delete","restriction":""}],"args_string":"(on_delete = :do_nothing)","args_html":"(on_delete = <span class=\"n\">:do_nothing</span>)","location":{"filename":"src/avram/migrator/drop_index_statement.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_index_statement.cr#L44"},"def":{"name":"on_delete_strategy","args":[{"name":"on_delete","default_value":":do_nothing","external_name":"on_delete","restriction":""}],"visibility":"Public","body":"if on_delete == (:do_nothing)\n  \";\"\nelse\n  if ALLOWED_ON_DELETE_STRATEGIES.includes?(on_delete)\n    \" #{on_delete};\".upcase\n  else\n    raise(\"on_delete: :#{on_delete} is not supported. Please use :do_nothing, :cascade or :restrict\")\n  end\nend"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/DropSequenceStatement","path":"Avram/Migrator/DropSequenceStatement.html","kind":"class","full_name":"Avram::Migrator::DropSequenceStatement","name":"DropSequenceStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/drop_sequence_statement.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_sequence_statement.cr#L9"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"doc":"Builds an SQL statement for dropping a sequence using the given name.\n\n### Usage\n\n```\nDropSequenceStatement.new(:accounts_number, if_not_exists: true, owned_by: \"accounts.number\").build\n# => \"CREATE SEQUENCE accounts_number_seq;\"\n```","summary":"<p>Builds an SQL statement for dropping a sequence using the given name.</p>","constructors":[{"html_id":"new(name:String|Symbol)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"args_string":"(name : String | Symbol)","args_html":"(name : <a href=\"../../String.html\">String</a> | Symbol)","location":{"filename":"src/avram/migrator/drop_sequence_statement.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_sequence_statement.cr#L10"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String | Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/drop_sequence_statement.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_sequence_statement.cr#L13"},"def":{"name":"build","visibility":"Public","body":"name = \"#{@name}_seq\"\n\nString.build do |io|\n  io << \"DROP SEQUENCE IF EXISTS \"\n  io << name\n  io << ';'\nend\n"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/DropTableStatement","path":"Avram/Migrator/DropTableStatement.html","kind":"class","full_name":"Avram::Migrator::DropTableStatement","name":"DropTableStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/drop_table_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_table_statement.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(table_name:TableName,if_exists:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":"Bool"}],"args_string":"(table_name : TableName, if_exists : Bool = false)","args_html":"(table_name : <a href=\"../../Avram/TableName.html\">TableName</a>, if_exists : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/drop_table_statement.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_table_statement.cr#L2"},"def":{"name":"new","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table_name, if_exists)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/drop_table_statement.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_table_statement.cr#L5"},"def":{"name":"build","visibility":"Public","body":"\"DROP TABLE #{@if_exists ? \"IF EXISTS \" : \"\"}#{@table_name};\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/DropTriggerStatement","path":"Avram/Migrator/DropTriggerStatement.html","kind":"class","full_name":"Avram::Migrator::DropTriggerStatement","name":"DropTriggerStatement","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/drop_trigger_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_trigger_statement.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(table_name:TableName,trigger_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"trigger_name","external_name":"trigger_name","restriction":"String"}],"args_string":"(table_name : TableName, trigger_name : String)","args_html":"(table_name : <a href=\"../../Avram/TableName.html\">TableName</a>, trigger_name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/drop_trigger_statement.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_trigger_statement.cr#L2"},"def":{"name":"new","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"trigger_name","external_name":"trigger_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table_name, trigger_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"build-instance-method","name":"build","abstract":false,"location":{"filename":"src/avram/migrator/drop_trigger_statement.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/drop_trigger_statement.cr#L5"},"def":{"name":"build","visibility":"Public","body":"\"DROP TRIGGER IF EXISTS #{@trigger_name} ON #{@table_name};\""},"external_var":false}]},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","path":"Avram/Migrator/IndexStatementHelpers.html","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers","abstract":false,"locations":[{"filename":"src/avram/migrator/index_statement_helpers.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/index_statement_helpers.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Migrator/AlterTableStatement","kind":"class","full_name":"Avram::Migrator::AlterTableStatement","name":"AlterTableStatement"},{"html_id":"avram/Avram/Migrator/CreateIndexStatement","kind":"class","full_name":"Avram::Migrator::CreateIndexStatement","name":"CreateIndexStatement"},{"html_id":"avram/Avram/Migrator/CreateTableStatement","kind":"class","full_name":"Avram::Migrator::CreateTableStatement","name":"CreateTableStatement"},{"html_id":"avram/Avram/Migrator/DropIndexStatement","kind":"class","full_name":"Avram::Migrator::DropIndexStatement","name":"DropIndexStatement"},{"html_id":"avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"instance_methods":[{"html_id":"add_index(column:Symbol,unique=false,using:Symbol=:btree)-instance-method","name":"add_index","doc":"Generates raw sql for adding an index to a table column. Accepts 'unique' and 'using' options.","summary":"<p>Generates raw sql for adding an index to a table column.</p>","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"Symbol"},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"using","default_value":":btree","external_name":"using","restriction":"Symbol"}],"args_string":"(column : Symbol, unique = false, using : Symbol = :btree)","args_html":"(column : Symbol, unique = <span class=\"n\">false</span>, using : Symbol = <span class=\"n\">:btree</span>)","location":{"filename":"src/avram/migrator/index_statement_helpers.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/index_statement_helpers.cr#L7"},"def":{"name":"add_index","args":[{"name":"column","external_name":"column","restriction":"Symbol"},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"using","default_value":":btree","external_name":"using","restriction":"Symbol"}],"visibility":"Public","body":"index = (CreateIndexStatement.new(@table_name, column, using, unique)).build\nif index_added?(index, column)\nelse\n  index_statements << index\nend\n"},"external_var":false},{"html_id":"index_added?(index:String,column:Symbol)-instance-method","name":"index_added?","doc":"Returns false unless matching index exists. Ignores UNIQUE","summary":"<p>Returns false unless matching index exists.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"String"},{"name":"column","external_name":"column","restriction":"Symbol"}],"args_string":"(index : String, column : Symbol)","args_html":"(index : <a href=\"../../String.html\">String</a>, column : Symbol)","location":{"filename":"src/avram/migrator/index_statement_helpers.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/index_statement_helpers.cr#L13"},"def":{"name":"index_added?","args":[{"name":"index","external_name":"index","restriction":"String"},{"name":"column","external_name":"column","restriction":"Symbol"}],"visibility":"Public","body":"if (index_statements.includes?(index)) || (index_statements.includes?(index.gsub(\" UNIQUE\", \"\")))\nelse\n  return false\nend\nraise(\"index on #{@table_name}.#{column} already exists\")\n"},"external_var":false}],"types":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers/Columns","path":"Avram/Migrator/IndexStatementHelpers/Columns.html","kind":"alias","full_name":"Avram::Migrator::IndexStatementHelpers::Columns","name":"Columns","abstract":false,"locations":[{"filename":"src/avram/migrator/index_statement_helpers.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/index_statement_helpers.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Array(Symbol) | Symbol)","aliased_html":"<a href=\"../../../Array.html\">Array(Symbol)</a> | Symbol","const":false,"namespace":{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}}]},{"html_id":"avram/Avram/Migrator/Migration","path":"Avram/Migrator/Migration.html","kind":"module","full_name":"Avram::Migrator::Migration","name":"Migration","abstract":false,"locations":[{"filename":"src/avram/migrator/migration.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"types":[{"html_id":"avram/Avram/Migrator/Migration/V1","path":"Avram/Migrator/Migration/V1.html","kind":"class","full_name":"Avram::Migrator::Migration::V1","name":"V1","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"},{"html_id":"avram/Avram/TableFor","kind":"module","full_name":"Avram::TableFor","name":"TableFor"},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/migration.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"}],"namespace":{"html_id":"avram/Avram/Migrator/Migration","kind":"module","full_name":"Avram::Migrator::Migration","name":"Migration"},"instance_methods":[{"html_id":"down(quiet=false)-instance-method","name":"down","doc":"Same as #up except calls rollback method in migration.","summary":"<p>Same as #up except calls rollback method in migration.</p>","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":""}],"args_string":"(quiet = false)","args_html":"(quiet = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/migration.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L48"},"def":{"name":"down","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":""}],"visibility":"Public","body":"suppress_logging do\n  if pending?\n    puts(\"Already rolled back #{self.class.name.colorize(:cyan)}\")\n  else\n    reset_prepared_statements\n    rollback\n    execute_in_transaction(@prepared_statements) do |tx|\n      untrack_migration(tx)\n      if quiet\n      else\n        puts(\"Rolled back #{self.class.name.colorize(:green)}\")\n      end\n    end\n  end\nend"},"external_var":false},{"html_id":"migrate-instance-method","name":"migrate","abstract":true,"location":{"filename":"src/avram/migrator/migration.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L21"},"def":{"name":"migrate","visibility":"Public","body":""},"external_var":false},{"html_id":"migrated?-instance-method","name":"migrated?","abstract":false,"location":{"filename":"src/avram/migrator/migration.cr","line_number":69,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L69"},"def":{"name":"migrated?","visibility":"Public","body":"suppress_logging do\n  Avram.settings.database_to_migrate.query_one?(\"SELECT id FROM migrations WHERE version = $1\", version, as: MigrationId)\nend"},"external_var":false},{"html_id":"pending?-instance-method","name":"pending?","abstract":false,"location":{"filename":"src/avram/migrator/migration.cr","line_number":65,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L65"},"def":{"name":"pending?","visibility":"Public","body":"!migrated?"},"external_var":false},{"html_id":"prepared_statements:Array(String)-instance-method","name":"prepared_statements","abstract":false,"location":{"filename":"src/avram/migrator/migration.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L24"},"def":{"name":"prepared_statements","visibility":"Public","body":"@prepared_statements"},"external_var":false},{"html_id":"reset_prepared_statements-instance-method","name":"reset_prepared_statements","abstract":false,"location":{"filename":"src/avram/migrator/migration.cr","line_number":110,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L110"},"def":{"name":"reset_prepared_statements","visibility":"Public","body":"@prepared_statements = [] of String"},"external_var":false},{"html_id":"up(quiet=false)-instance-method","name":"up","doc":"Unless already migrated, calls migrate which in turn calls statement\nhelpers to generate and collect SQL statements in the\n@prepared_statements array. Each statement is then executed in  a\ntransaction and tracked upon completion.","summary":"<p>Unless already migrated, calls migrate which in turn calls statement helpers to generate and collect SQL statements in the @prepared_statements array.</p>","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":""}],"args_string":"(quiet = false)","args_html":"(quiet = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/migration.cr","line_number":30,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L30"},"def":{"name":"up","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":""}],"visibility":"Public","body":"suppress_logging do\n  if migrated?\n    puts(\"Already migrated #{self.class.name.colorize(:cyan)}\")\n  else\n    reset_prepared_statements\n    migrate\n    execute_in_transaction(@prepared_statements) do |tx|\n      track_migration(tx)\n      if quiet\n      else\n        puts(\"Migrated #{self.class.name.colorize(:green)}\")\n      end\n    end\n  end\nend"},"external_var":false},{"html_id":"version:Int64-instance-method","name":"version","abstract":true,"location":{"filename":"src/avram/migrator/migration.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L22"},"def":{"name":"version","return_type":"Int64","visibility":"Public","body":""},"external_var":false}],"types":[{"html_id":"avram/Avram/Migrator/Migration/V1/MigrationId","path":"Avram/Migrator/Migration/V1/MigrationId.html","kind":"alias","full_name":"Avram::Migrator::Migration::V1::MigrationId","name":"MigrationId","abstract":false,"locations":[{"filename":"src/avram/migrator/migration.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/migration.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Int32 | Int64)","aliased_html":"<a href=\"../../../../Int32.html\">Int32</a> | <a href=\"../../../../Int64.html\">Int64</a>","const":false,"namespace":{"html_id":"avram/Avram/Migrator/Migration/V1","kind":"class","full_name":"Avram::Migrator::Migration::V1","name":"V1"}}]}]},{"html_id":"avram/Avram/Migrator/MigrationGenerator","path":"Avram/Migrator/MigrationGenerator.html","kind":"class","full_name":"Avram::Migrator::MigrationGenerator","name":"MigrationGenerator","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/LuckyTask/TextHelpers","kind":"module","full_name":"LuckyTask::TextHelpers","name":"TextHelpers"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/gen/migration_generator.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration_generator.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/LuckyTask/TextHelpers","kind":"module","full_name":"LuckyTask::TextHelpers","name":"TextHelpers"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"constructors":[{"html_id":"new(name:String,io:IO,migrate_contents:String,rollback_contents:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"migrate_contents","external_name":"migrate_contents","restriction":"String"},{"name":"rollback_contents","external_name":"rollback_contents","restriction":"String"}],"args_string":"(name : String, io : IO, migrate_contents : String, rollback_contents : String)","args_html":"(name : <a href=\"../../String.html\">String</a>, io : IO, migrate_contents : <a href=\"../../String.html\">String</a>, rollback_contents : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/tasks/gen/migration_generator.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration_generator.cr#L17"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"migrate_contents","external_name":"migrate_contents","restriction":"String"},{"name":"rollback_contents","external_name":"rollback_contents","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, io, migrate_contents, rollback_contents)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(name:String,io:IO)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(name : String, io : IO)","args_html":"(name : <a href=\"../../String.html\">String</a>, io : IO)","location":{"filename":"src/avram/tasks/gen/migration_generator.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration_generator.cr#L14"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"formatted_migrate_contents:String|Nil-instance-method","name":"formatted_migrate_contents","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration_generator.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration_generator.cr#L28"},"def":{"name":"formatted_migrate_contents","return_type":"String | ::Nil","visibility":"Public","body":"@migrate_contents.try do |contents|\n  pad_contents(contents)\nend"},"external_var":false},{"html_id":"formatted_rollback_contents:String|Nil-instance-method","name":"formatted_rollback_contents","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration_generator.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration_generator.cr#L34"},"def":{"name":"formatted_rollback_contents","return_type":"String | ::Nil","visibility":"Public","body":"@rollback_contents.try do |contents|\n  pad_contents(contents)\nend"},"external_var":false},{"html_id":"generate(_version:Nil|String=@_version)-instance-method","name":"generate","abstract":false,"args":[{"name":"_version","default_value":"@_version","external_name":"_version","restriction":"::Nil | ::String"}],"args_string":"(_version : Nil | String = @_version)","args_html":"(_version : <a href=\"../../Nil.html\">Nil</a> | <a href=\"../../String.html\">String</a> = @_version)","location":{"filename":"src/avram/tasks/gen/migration_generator.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration_generator.cr#L20"},"def":{"name":"generate","args":[{"name":"_version","default_value":"@_version","external_name":"_version","restriction":"::Nil | ::String"}],"visibility":"Public","body":"@_version = _version\n@name = name.camelcase\nmake_migrations_folder_if_missing\nensure_unique\nFile.write(file_path, contents)\nio.puts(\"Created #{migration_class_name.colorize(:green)} in .#{relative_file_path.colorize(:green)}\")\n"},"external_var":false},{"html_id":"io:IO-instance-method","name":"io","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration_generator.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration_generator.cr#L7"},"def":{"name":"io","return_type":"IO","visibility":"Public","body":"@io"},"external_var":false},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration_generator.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration_generator.cr#L7"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"},"external_var":false},{"html_id":"to_s(__io__:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"__io__","external_name":"__io__","restriction":"IO"}],"args_string":"(__io__ : IO) : Nil","args_html":"(__io__ : IO) : <a href=\"../../Nil.html\">Nil</a>","location":{"filename":"src/avram/tasks/gen/migration_generator.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration_generator.cr#L12"},"def":{"name":"to_s","args":[{"name":"__io__","external_name":"__io__","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"::ECR.embed(\"/home/runner/work/avram/avram/src/avram/tasks/gen/migration.ecr\", \"__io__\")"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/MissingOnDeleteWithBelongsToError","path":"Avram/Migrator/MissingOnDeleteWithBelongsToError.html","kind":"module","full_name":"Avram::Migrator::MissingOnDeleteWithBelongsToError","name":"MissingOnDeleteWithBelongsToError","abstract":false,"locations":[{"filename":"src/avram/migrator/missing_on_delete_with_belongs_to_error.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/missing_on_delete_with_belongs_to_error.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Migrator/AlterTableStatement","kind":"class","full_name":"Avram::Migrator::AlterTableStatement","name":"AlterTableStatement"},{"html_id":"avram/Avram/Migrator/CreateTableStatement","kind":"class","full_name":"Avram::Migrator::CreateTableStatement","name":"CreateTableStatement"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"macros":[{"html_id":"add_belongs_to(type_declaration,references=nil)-macro","name":"add_belongs_to","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"references","default_value":"nil","external_name":"references","restriction":""}],"args_string":"(type_declaration, references = nil)","args_html":"(type_declaration, references = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/missing_on_delete_with_belongs_to_error.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/missing_on_delete_with_belongs_to_error.cr#L2"},"def":{"name":"add_belongs_to","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"references","default_value":"nil","external_name":"references","restriction":""}],"visibility":"Public","body":"    \n{% raise(\"Must use 'on_delete' with 'add_belongs_to'\\n\\nTry this...\\n\\n  ▸ add_belongs_to #{type_declaration}, on_delete: :cascade\\n\\nYou can also use :restrict, :nullify, or :do_nothing\\n\\nRead more at: https://luckyframework.org/guides/database/migrations#associations\\n\\n\")\n%}\n\n  \n"}}]},{"html_id":"avram/Avram/Migrator/Runner","path":"Avram/Migrator/Runner.html","kind":"class","full_name":"Avram::Migrator::Runner","name":"Runner","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/migrator/runner.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MIGRATIONS_TABLE_NAME","name":"MIGRATIONS_TABLE_NAME","value":"\"migrations\""}],"extended_modules":[{"html_id":"avram/LuckyTask/TextHelpers","kind":"module","full_name":"LuckyTask::TextHelpers","name":"TextHelpers"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"class_methods":[{"html_id":"cmd_args-class-method","name":"cmd_args","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L40"},"def":{"name":"cmd_args","visibility":"Public","body":"String.build do |args|\n  if self.db_user\n    (args << \"-U \") << self.db_user\n  end\n  if self.db_host\n    (args << \" -h \") << self.db_host\n  end\n  if self.db_port\n    (args << \" -p \") << self.db_port\n  end\n  (args << ' ') << self.db_name\nend"},"external_var":false},{"html_id":"cmd_args_array:Array(String)-class-method","name":"cmd_args_array","doc":"Returns the DB connection args used\nfor postgres in an array so you can pass\nthem to `Process.run`","summary":"<p>Returns the DB connection args used for postgres in an array so you can pass them to <code>Process.run</code></p>","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L52"},"def":{"name":"cmd_args_array","return_type":"Array(String)","visibility":"Public","body":"args = [] of String\nif user = self.db_user\n  args << \"-U\"\n  args << user\nend\nif host = self.db_host\n  args << \"-h\"\n  args << host\nend\nif port = self.db_port\n  args << \"-p\"\n  args << port.to_s\nend\n\nargs << self.db_name\nargs\n"},"external_var":false},{"html_id":"create_db(quiet:Bool=false)-class-method","name":"create_db","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L80"},"def":{"name":"create_db","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"begin\n  DB.connect(\"#{credentials.connection_string}/#{Avram.settings.setup_database_name}\") do |db|\n    db.exec(\"CREATE DATABASE #{db_name}\")\n  end\n  if quiet\n  else\n    puts(\"Done creating #{db_name.colorize(:green)}\")\n  end\nrescue e : DB::ConnectionRefused\n  message = e.message.to_s\n  if message.blank?\n    raise(ConnectionError.new(URI.parse(credentials.url_without_query_params), Avram.settings.database_to_migrate))\n  else\n    raise(e)\n  end\nrescue e : Exception\n  message = e.message.to_s\n  if message.includes?(\"\\\"#{self.db_name}\\\" already exists\")\n    if quiet\n    else\n      puts(\"Already created #{self.db_name.colorize(:green)}\")\n    end\n  else\n    if message.includes?(\"Cannot establish connection\")\n      raise(PGNotRunningError.new(message))\n    else\n      raise(e)\n    end\n  end\nend"},"external_var":false},{"html_id":"credentials-class-method","name":"credentials","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L36"},"def":{"name":"credentials","visibility":"Public","body":"Avram.settings.database_to_migrate.credentials"},"external_var":false},{"html_id":"db_host-class-method","name":"db_host","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L20"},"def":{"name":"db_host","visibility":"Public","body":"credentials.hostname"},"external_var":false},{"html_id":"db_name-class-method","name":"db_name","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L16"},"def":{"name":"db_name","visibility":"Public","body":"credentials.database"},"external_var":false},{"html_id":"db_password-class-method","name":"db_password","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L32"},"def":{"name":"db_password","visibility":"Public","body":"credentials.password"},"external_var":false},{"html_id":"db_port-class-method","name":"db_port","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L24"},"def":{"name":"db_port","visibility":"Public","body":"credentials.port"},"external_var":false},{"html_id":"db_user-class-method","name":"db_user","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L28"},"def":{"name":"db_user","visibility":"Public","body":"credentials.username"},"external_var":false},{"html_id":"drop_db(quiet:Bool=false)-class-method","name":"drop_db","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":71,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L71"},"def":{"name":"drop_db","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"DB.connect(\"#{credentials.connection_string}/#{Avram.settings.setup_database_name}\") do |db|\n  db.exec(\"DROP DATABASE IF EXISTS #{db_name}\")\nend\nif quiet\nelse\n  puts(\"Done dropping #{Avram::Migrator::Runner.db_name.colorize(:green)}\")\nend\n"},"external_var":false},{"html_id":"dump_db(dump_to:String=\"db/structure.sql\",quiet:Bool=false)-class-method","name":"dump_db","doc":"Creates a new file at `dump_to` with your database schema,\nand includes the migtation data.","summary":"<p>Creates a new file at <code>dump_to</code> with your database schema, and includes the migtation data.</p>","abstract":false,"args":[{"name":"dump_to","default_value":"\"db/structure.sql\"","external_name":"dump_to","restriction":"String"},{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(dump_to : String = \"db/structure.sql\", quiet : Bool = false)","args_html":"(dump_to : <a href=\"../../String.html\">String</a> = <span class=\"s\">&quot;db/structure.sql&quot;</span>, quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":123,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L123"},"def":{"name":"dump_db","args":[{"name":"dump_to","default_value":"\"db/structure.sql\"","external_name":"dump_to","restriction":"String"},{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"Db::VerifyConnection.new(quiet: true).run_task\nFile.open(dump_to, \"w+\") do |f|\n  run(\"pg_dump\", [\"-s\", *cmd_args_array], output: f)\n  run(\"pg_dump\", [\"-t\", \"migrations\", \"--data-only\", *cmd_args_array], output: f)\nend\nif quiet\nelse\n  puts(\"Done dumping #{db_name.colorize(:green)}\")\nend\n"},"external_var":false},{"html_id":"migrations-class-method","name":"migrations","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L11"},"def":{"name":"migrations","visibility":"Public","body":"@@migrations"},"external_var":false},{"html_id":"restore_db(restore_file:String,quiet:Bool=false)-class-method","name":"restore_db","abstract":false,"args":[{"name":"restore_file","external_name":"restore_file","restriction":"String"},{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(restore_file : String, quiet : Bool = false)","args_html":"(restore_file : <a href=\"../../String.html\">String</a>, quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":107,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L107"},"def":{"name":"restore_db","args":[{"name":"restore_file","external_name":"restore_file","restriction":"String"},{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"if File.exists?(restore_file)\n  output = quiet ? IO::Memory.new : STDOUT\n  File.open(restore_file) do |f|\n    run(\"psql\", [\"-q\", *cmd_args_array, \"-v\", \"ON_ERROR_STOP=1\"], input: f, output: output)\n  end\n  if quiet\n  else\n    puts(\"Done restoring #{db_name.colorize(:green)}\")\n  end\nelse\n  raise(\"Unable to locate the restore file: #{restore_file}\")\nend"},"external_var":false},{"html_id":"run(command:String,output:IO=STDOUT,input:Process::Stdio=Process::Redirect::Close)-class-method","name":"run","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Calling run with a single string is deprecated. Pass the args as a separate Array</p>","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"output","default_value":"STDOUT","external_name":"output","restriction":"IO"},{"name":"input","default_value":"Process::Redirect::Close","external_name":"input","restriction":"Process::Stdio"}],"args_string":"(command : String, output : IO = STDOUT, input : Process::Stdio = Process::Redirect::Close)","args_html":"(command : <a href=\"../../String.html\">String</a>, output : IO = <span class=\"t\">STDOUT</span>, input : Process::Stdio = <span class=\"t\">Process</span><span class=\"t\">::</span><span class=\"t\">Redirect</span><span class=\"t\">::</span><span class=\"t\">Close</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":159,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L159"},"def":{"name":"run","args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"output","default_value":"STDOUT","external_name":"output","restriction":"IO"},{"name":"input","default_value":"Process::Redirect::Close","external_name":"input","restriction":"Process::Stdio"}],"visibility":"Public","body":"program, *args = command.split(' ')\nself.run(program, args, output, input)\n"},"external_var":false},{"html_id":"run(command:String,args:Array(String),output:IO=STDOUT,input:Process::Stdio=Process::Redirect::Close)-class-method","name":"run","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"args","external_name":"args","restriction":"Array(String)"},{"name":"output","default_value":"STDOUT","external_name":"output","restriction":"IO"},{"name":"input","default_value":"Process::Redirect::Close","external_name":"input","restriction":"Process::Stdio"}],"args_string":"(command : String, args : Array(String), output : IO = STDOUT, input : Process::Stdio = Process::Redirect::Close)","args_html":"(command : <a href=\"../../String.html\">String</a>, args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>), output : IO = <span class=\"t\">STDOUT</span>, input : Process::Stdio = <span class=\"t\">Process</span><span class=\"t\">::</span><span class=\"t\">Redirect</span><span class=\"t\">::</span><span class=\"t\">Close</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":164,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L164"},"def":{"name":"run","args":[{"name":"command","external_name":"command","restriction":"String"},{"name":"args","external_name":"args","restriction":"Array(String)"},{"name":"output","default_value":"STDOUT","external_name":"output","restriction":"IO"},{"name":"input","default_value":"Process::Redirect::Close","external_name":"input","restriction":"Process::Stdio"}],"visibility":"Public","body":"error_messages = IO::Memory.new\nif self.db_password\n  ENV[\"PGPASSWORD\"] = self.db_password\nend\nresult = Process.run(command: command, args: args, input: input, output: output, error: error_messages)\nif self.db_password\n  ENV.delete(\"PGPASSWORD\")\nend\nif result.success?\nelse\n  raise(error_messages.to_s)\nend\n"},"external_var":false},{"html_id":"setup_migration_tracking_tables-class-method","name":"setup_migration_tracking_tables","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":134,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L134"},"def":{"name":"setup_migration_tracking_tables","visibility":"Public","body":"suppress_logging do\n  db = Avram.settings.database_to_migrate\n  db.exec(create_table_for_tracking_migrations)\n  db.exec(create_unique_index_for_migrations)\nend"},"external_var":false}],"constructors":[{"html_id":"new(quiet:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L13"},"def":{"name":"new","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"ensure_migrated!-instance-method","name":"ensure_migrated!","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":221,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L221"},"def":{"name":"ensure_migrated!","visibility":"Public","body":"if !pending_migrations.empty?\n  display_migration_error_banner\n  Process.signal(:term, Process.ppid)\n  exit(1)\nend"},"external_var":false},{"html_id":"rollback_all-instance-method","name":"rollback_all","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":198,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L198"},"def":{"name":"rollback_all","visibility":"Public","body":"self.class.setup_migration_tracking_tables\nmigrated_migrations.reverse.each do |__arg1|\n  __arg1.new.down\nend\n"},"external_var":false},{"html_id":"rollback_one-instance-method","name":"rollback_one","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":203,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L203"},"def":{"name":"rollback_one","visibility":"Public","body":"self.class.setup_migration_tracking_tables\nif migrated_migrations.empty?\n  puts(\"Did not roll anything back because the database has no migrations.\".colorize(:green))\nelse\n  migrated_migrations.last.new.down\nend\n"},"external_var":false},{"html_id":"rollback_to(last_version:Int64)-instance-method","name":"rollback_to","abstract":false,"args":[{"name":"last_version","external_name":"last_version","restriction":"Int64"}],"args_string":"(last_version : Int64)","args_html":"(last_version : <a href=\"../../Int64.html\">Int64</a>)","location":{"filename":"src/avram/migrator/runner.cr","line_number":212,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L212"},"def":{"name":"rollback_to","args":[{"name":"last_version","external_name":"last_version","restriction":"Int64"}],"visibility":"Public","body":"self.class.setup_migration_tracking_tables\nsubset = migrated_migrations.select do |mm|\n  mm.new.version > last_version\nend\nsubset.reverse.each do |__arg2|\n  __arg2.new.down\nend\nputs(\"Done rolling back to #{last_version}\".colorize(:green))\n"},"external_var":false},{"html_id":"run_next_migration-instance-method","name":"run_next_migration","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":192,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L192"},"def":{"name":"run_next_migration","visibility":"Public","body":"prepare_for_migration do\n  pending_migrations.first.new.up\nend"},"external_var":false},{"html_id":"run_pending_migrations-instance-method","name":"run_pending_migrations","abstract":false,"location":{"filename":"src/avram/migrator/runner.cr","line_number":186,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/runner.cr#L186"},"def":{"name":"run_pending_migrations","visibility":"Public","body":"prepare_for_migration do\n  pending_migrations.each do |__arg0|\n    __arg0.new.up(@quiet)\n  end\nend"},"external_var":false}]},{"html_id":"avram/Avram/Migrator/StatementHelpers","path":"Avram/Migrator/StatementHelpers.html","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers","abstract":false,"ancestors":[{"html_id":"avram/Avram/TableFor","kind":"module","full_name":"Avram::TableFor","name":"TableFor"},{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"}],"locations":[{"filename":"src/avram/migrator/statement_helpers.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Migrator/IndexStatementHelpers","kind":"module","full_name":"Avram::Migrator::IndexStatementHelpers","name":"IndexStatementHelpers"},{"html_id":"avram/Avram/TableFor","kind":"module","full_name":"Avram::TableFor","name":"TableFor"}],"including_types":[{"html_id":"avram/Avram/Migrator/Migration/V1","kind":"class","full_name":"Avram::Migrator::Migration::V1","name":"V1"}],"namespace":{"html_id":"avram/Avram/Migrator","kind":"module","full_name":"Avram::Migrator","name":"Migrator"},"instance_methods":[{"html_id":"create_foreign_key(from:TableName,to:TableName,on_delete:Symbol,column:Symbol|Nil,primary_key=:id)-instance-method","name":"create_foreign_key","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"to","external_name":"to","restriction":"TableName"},{"name":"on_delete","external_name":"on_delete","restriction":"Symbol"},{"name":"column","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","default_value":":id","external_name":"primary_key","restriction":""}],"args_string":"(from : TableName, to : TableName, on_delete : Symbol, column : Symbol | Nil, primary_key = :id)","args_html":"(from : <a href=\"../../Avram/TableName.html\">TableName</a>, to : <a href=\"../../Avram/TableName.html\">TableName</a>, on_delete : Symbol, column : Symbol | <a href=\"../../Nil.html\">Nil</a>, primary_key = <span class=\"n\">:id</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L31"},"def":{"name":"create_foreign_key","args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"to","external_name":"to","restriction":"TableName"},{"name":"on_delete","external_name":"on_delete","restriction":"Symbol"},{"name":"column","external_name":"column","restriction":"Symbol | ::Nil"},{"name":"primary_key","default_value":":id","external_name":"primary_key","restriction":""}],"visibility":"Public","body":"prepared_statements << (CreateForeignKeyStatement.new(from, to, on_delete, column, primary_key)).build"},"external_var":false},{"html_id":"create_function(name:String,body:String,returns:String=\"trigger\")-instance-method","name":"create_function","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"body","external_name":"body","restriction":"String"},{"name":"returns","default_value":"\"trigger\"","external_name":"returns","restriction":"String"}],"args_string":"(name : String, body : String, returns : String = \"trigger\")","args_html":"(name : <a href=\"../../String.html\">String</a>, body : <a href=\"../../String.html\">String</a>, returns : <a href=\"../../String.html\">String</a> = <span class=\"s\">&quot;trigger&quot;</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":67,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L67"},"def":{"name":"create_function","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"body","external_name":"body","restriction":"String"},{"name":"returns","default_value":"\"trigger\"","external_name":"returns","restriction":"String"}],"visibility":"Public","body":"prepared_statements << (Avram::Migrator::CreateFunctionStatement.new(name, body: body, returns: returns)).build"},"external_var":false},{"html_id":"create_index(table_name:TableName,columns:Columns,unique=false,using=:btree,name:String|Nil|Symbol|Nil=nil)-instance-method","name":"create_index","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"columns","external_name":"columns","restriction":"Columns"},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"using","default_value":":btree","external_name":"using","restriction":""},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"args_string":"(table_name : TableName, columns : Columns, unique = false, using = :btree, name : String | Nil | Symbol | Nil = nil)","args_html":"(table_name : <a href=\"../../Avram/TableName.html\">TableName</a>, columns : <a href=\"../../Avram/Migrator/IndexStatementHelpers/Columns.html\">Columns</a>, unique = <span class=\"n\">false</span>, using = <span class=\"n\">:btree</span>, name : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> | Symbol | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L39"},"def":{"name":"create_index","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"columns","external_name":"columns","restriction":"Columns"},{"name":"unique","default_value":"false","external_name":"unique","restriction":""},{"name":"using","default_value":":btree","external_name":"using","restriction":""},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"visibility":"Public","body":"prepared_statements << (CreateIndexStatement.new(table_name, columns, using, unique, name)).build"},"external_var":false},{"html_id":"create_sequence(table:TableName,column:Symbol)-instance-method","name":"create_sequence","abstract":false,"args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"}],"args_string":"(table : TableName, column : Symbol)","args_html":"(table : <a href=\"../../Avram/TableName.html\">TableName</a>, column : Symbol)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":97,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L97"},"def":{"name":"create_sequence","args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"}],"visibility":"Public","body":"sequence_name = \"#{table}_#{column}\"\nowned_by = \"#{table}.#{column}\"\nprepared_statements << (Avram::Migrator::CreateSequenceStatement.new(sequence_name, if_not_exists: true, owned_by: owned_by)).build\n"},"external_var":false},{"html_id":"create_trigger(table_name:TableName,name:String,function_name:String,callback:Symbol=:before,on:Array(Symbol)=[:update])-instance-method","name":"create_trigger","doc":"Drop any existing trigger by this name first before creating.\nPostgres does not support updating or replacing a trigger as of version 12\n\nCreates a new TRIGGER named `name` on the table `table_name`.\n`function_name` - The PG function to run from this trigger.\n`callback` - When to run this trigger (BEFORE or AFTER). Default `:before`\n`on` - The operation(s) for this trigger (INSERT, UPDATE, DELETE). Default is `[:update]`\n\n```\ncreate_trigger(:users, \"trigger_set_timestamps\", \"set_timestamps\")\n# => CREATE TRIGGER trigger_set_timestamps BEFORE UPDATE ON users FOR EACH ROW EXECUTE PROCEDURE set_timestamps();\n```","summary":"<p>Drop any existing trigger by this name first before creating.</p>","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"name","external_name":"name","restriction":"String"},{"name":"function_name","external_name":"function_name","restriction":"String"},{"name":"callback","default_value":":before","external_name":"callback","restriction":"Symbol"},{"name":"on","default_value":"[:update]","external_name":"on","restriction":"Array(Symbol)"}],"args_string":"(table_name : TableName, name : String, function_name : String, callback : Symbol = :before, on : Array(Symbol) = [:update])","args_html":"(table_name : <a href=\"../../Avram/TableName.html\">TableName</a>, name : <a href=\"../../String.html\">String</a>, function_name : <a href=\"../../String.html\">String</a>, callback : Symbol = <span class=\"n\">:before</span>, on : <a href=\"../../Array.html\">Array</a>(Symbol) = [<span class=\"n\">:update</span>])","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":87,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L87"},"def":{"name":"create_trigger","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"name","external_name":"name","restriction":"String"},{"name":"function_name","external_name":"function_name","restriction":"String"},{"name":"callback","default_value":":before","external_name":"callback","restriction":"Symbol"},{"name":"on","default_value":"[:update]","external_name":"on","restriction":"Array(Symbol)"}],"visibility":"Public","body":"drop_trigger(table_name, name)\nprepared_statements << (Avram::Migrator::CreateTriggerStatement.new(table_name, name, function_name, callback, on)).build\n"},"external_var":false},{"html_id":"disable_extension(name:String)-instance-method","name":"disable_extension","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":59,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L59"},"def":{"name":"disable_extension","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropExtensionStatement.new(name)).build"},"external_var":false},{"html_id":"drop(table_name,*,if_exists=false)-instance-method","name":"drop","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":""}],"args_string":"(table_name, *, if_exists = false)","args_html":"(table_name, *, if_exists = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L17"},"def":{"name":"drop","args":[{"name":"table_name","external_name":"table_name","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":""}],"splat_index":1,"visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropTableStatement.new(table_name, if_exists)).build"},"external_var":false},{"html_id":"drop_foreign_key(from:TableName,references:TableName,column:Symbol|Nil)-instance-method","name":"drop_foreign_key","abstract":false,"args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"references","external_name":"references","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol | ::Nil"}],"args_string":"(from : TableName, references : TableName, column : Symbol | Nil)","args_html":"(from : <a href=\"../../Avram/TableName.html\">TableName</a>, references : <a href=\"../../Avram/TableName.html\">TableName</a>, column : Symbol | <a href=\"../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":35,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L35"},"def":{"name":"drop_foreign_key","args":[{"name":"from","external_name":"from","restriction":"TableName"},{"name":"references","external_name":"references","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol | ::Nil"}],"visibility":"Public","body":"prepared_statements << (DropForeignKeyStatement.new(from, references, column)).build"},"external_var":false},{"html_id":"drop_function(name:String)-instance-method","name":"drop_function","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":71,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L71"},"def":{"name":"drop_function","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropFunctionStatement.new(name)).build"},"external_var":false},{"html_id":"drop_index(table_name:TableName,columns:Columns|Nil=nil,if_exists=false,on_delete=:do_nothing,name:String|Nil|Symbol|Nil=nil)-instance-method","name":"drop_index","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"columns","default_value":"nil","external_name":"columns","restriction":"Columns | ::Nil"},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","default_value":":do_nothing","external_name":"on_delete","restriction":""},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"args_string":"(table_name : TableName, columns : Columns | Nil = nil, if_exists = false, on_delete = :do_nothing, name : String | Nil | Symbol | Nil = nil)","args_html":"(table_name : <a href=\"../../Avram/TableName.html\">TableName</a>, columns : <a href=\"../../Avram/Migrator/IndexStatementHelpers/Columns.html\">Columns</a> | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, if_exists = <span class=\"n\">false</span>, on_delete = <span class=\"n\">:do_nothing</span>, name : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> | Symbol | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":43,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L43"},"def":{"name":"drop_index","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"columns","default_value":"nil","external_name":"columns","restriction":"Columns | ::Nil"},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":""},{"name":"on_delete","default_value":":do_nothing","external_name":"on_delete","restriction":""},{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil | Symbol | ::Nil"}],"visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropIndexStatement.new(table_name, columns, if_exists, on_delete, name)).build"},"external_var":false},{"html_id":"drop_sequence(table:TableName,column:Symbol)-instance-method","name":"drop_sequence","abstract":false,"args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"}],"args_string":"(table : TableName, column : Symbol)","args_html":"(table : <a href=\"../../Avram/TableName.html\">TableName</a>, column : Symbol)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L103"},"def":{"name":"drop_sequence","args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"}],"visibility":"Public","body":"sequence_name = \"#{table}_#{column}\"\nprepared_statements << (Avram::Migrator::DropSequenceStatement.new(sequence_name)).build\n"},"external_var":false},{"html_id":"drop_trigger(table_name:TableName,name:String)-instance-method","name":"drop_trigger","doc":"Drop the tigger `name` for the table `table_name`","summary":"<p>Drop the tigger <code>name</code> for the table <code>table_name</code></p>","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(table_name : TableName, name : String)","args_html":"(table_name : <a href=\"../../Avram/TableName.html\">TableName</a>, name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":93,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L93"},"def":{"name":"drop_trigger","args":[{"name":"table_name","external_name":"table_name","restriction":"TableName"},{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"prepared_statements << (Avram::Migrator::DropTriggerStatement.new(table_name, name)).build"},"external_var":false},{"html_id":"enable_extension(name:String)-instance-method","name":"enable_extension","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L55"},"def":{"name":"enable_extension","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"prepared_statements << (Avram::Migrator::CreateExtensionStatement.new(name)).build"},"external_var":false},{"html_id":"make_optional(table:TableName,column:Symbol)-instance-method","name":"make_optional","abstract":false,"args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"}],"args_string":"(table : TableName, column : Symbol)","args_html":"(table : <a href=\"../../Avram/TableName.html\">TableName</a>, column : Symbol)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":51,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L51"},"def":{"name":"make_optional","args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"}],"visibility":"Public","body":"prepared_statements << (Avram::Migrator::ChangeNullStatement.new(table, column, required: false)).build"},"external_var":false},{"html_id":"make_required(table:TableName,column:Symbol)-instance-method","name":"make_required","abstract":false,"args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"}],"args_string":"(table : TableName, column : Symbol)","args_html":"(table : <a href=\"../../Avram/TableName.html\">TableName</a>, column : Symbol)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":47,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L47"},"def":{"name":"make_required","args":[{"name":"table","external_name":"table","restriction":"TableName"},{"name":"column","external_name":"column","restriction":"Symbol"}],"visibility":"Public","body":"prepared_statements << (Avram::Migrator::ChangeNullStatement.new(table, column, required: true)).build"},"external_var":false},{"html_id":"update_extension(name:String,to:String|Nil=nil)-instance-method","name":"update_extension","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"to","default_value":"nil","external_name":"to","restriction":"String | ::Nil"}],"args_string":"(name : String, to : String | Nil = nil)","args_html":"(name : <a href=\"../../String.html\">String</a>, to : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":63,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L63"},"def":{"name":"update_extension","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"to","default_value":"nil","external_name":"to","restriction":"String | ::Nil"}],"visibility":"Public","body":"prepared_statements << (Avram::Migrator::AlterExtensionStatement.new(name, to: to)).build"},"external_var":false}],"macros":[{"html_id":"alter(table_name,*,if_exists=false)-macro","name":"alter","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":""}],"args_string":"(table_name, *, if_exists = false)","args_html":"(table_name, *, if_exists = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L21"},"def":{"name":"alter","args":[{"name":"table_name","external_name":"table_name","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"if_exists","default_value":"false","external_name":"if_exists","restriction":""}],"splat_index":1,"visibility":"Public","body":"    statements = Avram::Migrator::AlterTableStatement.new(\n{{ table_name }}\n, if_exists: \n{{ if_exists }}\n).build do\n      \n{{ yield }}\n\n    \nend.statements\n\n    statements.each do |statement|\n      prepared_statements <<  statement\n    \nend\n  \n"}},{"html_id":"create(table_name,*,if_not_exists=false)-macro","name":"create","abstract":false,"args":[{"name":"table_name","external_name":"table_name","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"if_not_exists","default_value":"false","external_name":"if_not_exists","restriction":""}],"args_string":"(table_name, *, if_not_exists = false)","args_html":"(table_name, *, if_not_exists = <span class=\"n\">false</span>)","location":{"filename":"src/avram/migrator/statement_helpers.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/migrator/statement_helpers.cr#L7"},"def":{"name":"create","args":[{"name":"table_name","external_name":"table_name","restriction":""},{"name":"","external_name":"","restriction":""},{"name":"if_not_exists","default_value":"false","external_name":"if_not_exists","restriction":""}],"splat_index":1,"visibility":"Public","body":"    statements = Avram::Migrator::CreateTableStatement.new(\n{{ table_name }}\n, if_not_exists: \n{{ if_not_exists }}\n).build do\n      \n{{ yield }}\n\n    \nend.statements\n\n    statements.each do |statement|\n      prepared_statements << statement\n    \nend\n  \n"}}]}]},{"html_id":"avram/Avram/MissingRequiredAssociationError","path":"Avram/MissingRequiredAssociationError.html","kind":"class","full_name":"Avram::MissingRequiredAssociationError","name":"MissingRequiredAssociationError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L40"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(model:Avram::Model.class,association:Avram::Model.class)-class-method","name":"new","abstract":false,"args":[{"name":"model","external_name":"model","restriction":"Avram::Model.class"},{"name":"association","external_name":"association","restriction":"Avram::Model.class"}],"args_string":"(model : Avram::Model.class, association : Avram::Model.class)","args_html":"(model : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Model</span>.<span class=\"k\">class</span>, association : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Model</span>.<span class=\"k\">class</span>)","location":{"filename":"src/avram/errors.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L44"},"def":{"name":"new","args":[{"name":"model","external_name":"model","restriction":"Avram::Model.class"},{"name":"association","external_name":"association","restriction":"Avram::Model.class"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model, association)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"association:Avram::Model.class-instance-method","name":"association","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":42,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L42"},"def":{"name":"association","return_type":"Avram::Model.class","visibility":"Public","body":"@association"},"external_var":false},{"html_id":"model:Avram::Model.class-instance-method","name":"model","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":41,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L41"},"def":{"name":"model","return_type":"Avram::Model.class","visibility":"Public","body":"@model"},"external_var":false}]},{"html_id":"avram/Avram/Model","path":"Avram/Model.html","kind":"class","full_name":"Avram::Model","name":"Model","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},{"html_id":"avram/Avram/Polymorphic","kind":"module","full_name":"Avram::Polymorphic","name":"Polymorphic"},{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},{"html_id":"avram/Avram/Associations/BelongsTo","kind":"module","full_name":"Avram::Associations::BelongsTo","name":"BelongsTo"},{"html_id":"avram/Avram/Associations/HasOne","kind":"module","full_name":"Avram::Associations::HasOne","name":"HasOne"},{"html_id":"avram/Avram/Associations/HasMany","kind":"module","full_name":"Avram::Associations::HasMany","name":"HasMany"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/model.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Associations","kind":"module","full_name":"Avram::Associations","name":"Associations"},{"html_id":"avram/Avram/Polymorphic","kind":"module","full_name":"Avram::Polymorphic","name":"Polymorphic"},{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"database-class-method","name":"database","doc":"TODO: Ideally this should be a compile-time raise, but something is calling this when it shouldn't","summary":"<p><span class=\"flag orange\">TODO</span>  Ideally this should be a compile-time raise, but something is calling this when it shouldn't</p>","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":23,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L23"},"def":{"name":"database","visibility":"Public","body":"raise(\"The class method `database` must be defined on #{self.name}, the BaseModel,\\nor defined as separate `read_database` and `write_database` class methods.\\n\\nExample:\\n  def self.database : Avram::Database.class\\n    AppDatabase\\n  end\\n\\nOr separated as:\\n  def self.read_database : Avram::Database.class\\n    ReadDatabase\\n  end\\n\\n  def self.write_database : Avram::Database.class\\n    WriteDatabase\\n  end\")"},"external_var":false},{"html_id":"database_table_info:Avram::Database::TableInfo|Nil-class-method","name":"database_table_info","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L52"},"def":{"name":"database_table_info","return_type":"Avram::Database::TableInfo | ::Nil","visibility":"Public","body":"read_database.database_info.table(table_name.to_s)"},"external_var":false},{"html_id":"primary_key_name:Symbol|Nil-class-method","name":"primary_key_name","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L18"},"def":{"name":"primary_key_name","return_type":"Symbol | ::Nil","visibility":"Public","body":"nil"},"external_var":false},{"html_id":"read_database:Avram::Database.class-class-method","name":"read_database","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L44"},"def":{"name":"read_database","return_type":"Avram::Database.class","visibility":"Public","body":"database"},"external_var":false},{"html_id":"write_database:Avram::Database.class-class-method","name":"write_database","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L48"},"def":{"name":"write_database","return_type":"Avram::Database.class","visibility":"Public","body":"database"},"external_var":false}],"instance_methods":[{"html_id":"delete-instance-method","name":"delete","doc":"Refer to `PrimaryKeyMethods#delete`","summary":"<p>Refer to <code><a href=\"../Avram/PrimaryKeyMethods.html#delete-instance-method\">PrimaryKeyMethods#delete</a></code></p>","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":76,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L76"},"def":{"name":"delete","visibility":"Public","body":"{% raise(\"Unable to call Avram::Model#delete on #{@type.name} because it does not have a primary key. Add a primary key or define your own `delete` method.\") %}"},"external_var":false},{"html_id":"model_name:String-instance-method","name":"model_name","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":56,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L56"},"def":{"name":"model_name","return_type":"String","visibility":"Public","body":"self.class.name"},"external_var":false},{"html_id":"reload:self-instance-method","name":"reload","doc":"Refer to `PrimaryKeyMethods#reload`","summary":"<p>Refer to <code><a href=\"../Avram/PrimaryKeyMethods.html#reload%3Aself-instance-method\">PrimaryKeyMethods#reload</a></code></p>","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":61,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L61"},"def":{"name":"reload","return_type":"self","visibility":"Public","body":"{% raise(\"Unable to call Avram::Model#reload on #{@type.name} because it does not have a primary key. Add a primary key or define your own `reload` method.\") %}"},"external_var":false},{"html_id":"reload(&):self-instance-method","name":"reload","doc":"Refer to `PrimaryKeyMethods#reload`","summary":"<p>Refer to <code><a href=\"../Avram/PrimaryKeyMethods.html#reload%3Aself-instance-method\">PrimaryKeyMethods#reload</a></code></p>","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":66,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L66"},"def":{"name":"reload","yields":0,"block_arity":0,"return_type":"self","visibility":"Public","body":"{% raise(\"Unable to call Avram::Model#reload on #{@type.name} because it does not have a primary key. Add a primary key or define your own `reload` method.\") %}"},"external_var":false},{"html_id":"to_param:String-instance-method","name":"to_param","doc":"Refer to `PrimaryKeyMethods#to_param`","summary":"<p>Refer to <code><a href=\"../Avram/PrimaryKeyMethods.html#to_param%3AString-instance-method\">PrimaryKeyMethods#to_param</a></code></p>","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":71,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L71"},"def":{"name":"to_param","return_type":"String","visibility":"Public","body":"{% raise(\"Unable to call Avram::Model#to_param on #{@type.name} because it does not have a primary key. Add a primary key or define your own `to_param` method.\") %}"},"external_var":false}],"macros":[{"html_id":"association(assoc_name,type,relationship_type,foreign_key=nil,through=nil,base_query_class=nil)-macro","name":"association","abstract":false,"args":[{"name":"assoc_name","external_name":"assoc_name","restriction":""},{"name":"type","external_name":"type","restriction":""},{"name":"relationship_type","external_name":"relationship_type","restriction":""},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"through","default_value":"nil","external_name":"through","restriction":""},{"name":"base_query_class","default_value":"nil","external_name":"base_query_class","restriction":""}],"args_string":"(assoc_name, type, relationship_type, foreign_key = nil, through = nil, base_query_class = nil)","args_html":"(assoc_name, type, relationship_type, foreign_key = <span class=\"n\">nil</span>, through = <span class=\"n\">nil</span>, base_query_class = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/model.cr","line_number":330,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L330"},"def":{"name":"association","args":[{"name":"assoc_name","external_name":"assoc_name","restriction":""},{"name":"type","external_name":"type","restriction":""},{"name":"relationship_type","external_name":"relationship_type","restriction":""},{"name":"foreign_key","default_value":"nil","external_name":"foreign_key","restriction":""},{"name":"through","default_value":"nil","external_name":"through","restriction":""},{"name":"base_query_class","default_value":"nil","external_name":"base_query_class","restriction":""}],"visibility":"Public","body":"    \n{% ASSOCIATIONS << {type: type, assoc_name: assoc_name.id, foreign_key: foreign_key, relationship_type: relationship_type, through: through, base_query_class: base_query_class} %}\n\n  \n"}},{"html_id":"column(type_declaration,autogenerated=false,serializeis_serialized=false,allow_blank=false,converter=nil)-macro","name":"column","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"autogenerated","default_value":"false","external_name":"autogenerated","restriction":""},{"name":"is_serialized","default_value":"false","external_name":"serialize","restriction":""},{"name":"allow_blank","default_value":"false","external_name":"allow_blank","restriction":""},{"name":"converter","default_value":"nil","external_name":"converter","restriction":""}],"args_string":"(type_declaration, autogenerated = false, serialize is_serialized = false, allow_blank = false, converter = nil)","args_html":"(type_declaration, autogenerated = <span class=\"n\">false</span>, serialize is_serialized = <span class=\"n\">false</span>, allow_blank = <span class=\"n\">false</span>, converter = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/model.cr","line_number":278,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L278"},"def":{"name":"column","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""},{"name":"autogenerated","default_value":"false","external_name":"autogenerated","restriction":""},{"name":"is_serialized","default_value":"false","external_name":"serialize","restriction":""},{"name":"allow_blank","default_value":"false","external_name":"allow_blank","restriction":""},{"name":"converter","default_value":"nil","external_name":"converter","restriction":""}],"visibility":"Public","body":"    \n{% if type_declaration.type.is_a?(Union) %}\n      {% data_type = type_declaration.type.types.first %}\n      {% nilable = true %}\n    {% else %}\n      {% data_type = type_declaration.type %}\n      {% nilable = false %}\n    {% end %}\n\n    \n{% if type_declaration.value || (type_declaration.value == false) %}\n      {% value = type_declaration.value %}\n    {% else %}\n      {% value = nil %}\n    {% end %}\n\n\n    @[DB::Field(\n      ignore: false,\n      key: \n{{ type_declaration.var }}\n,\n      \n{% if is_serialized %}\n      converter: JSONConverter({{ data_type }}),\n      {% else %}{% if data_type.id == Array(Float64).id %}\n      converter: PG::NumericArrayFloatConverter,\n      {% else %}{% if converter %}\n      converter: {{ converter }},\n      {% end %}{% end %}{% end %}\n\n    )]\n    \n{% if data_type.is_a?(Generic) || is_serialized %}\n      @{{ type_declaration.var }} : {{ data_type }}{% if nilable %}?{% end %}\n    {% else %}\n      @{{ type_declaration.var }} : {{ data_type }}::Lucky::ColumnType{% if nilable %}?{% end %}\n    {% end %}\n\n\n    \n{% COLUMNS << {name: type_declaration.var, type: data_type, nilable: nilable.id, autogenerated: autogenerated, value: value, serialized: is_serialized, allow_blank: allow_blank} %}\n\n  \n"}},{"html_id":"default_columns-macro","name":"default_columns","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":192,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L192"},"def":{"name":"default_columns","visibility":"Public","body":"    primary_key id : Int64\n    timestamps\n  "}},{"html_id":"primary_key(type_declaration)-macro","name":"primary_key","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","args_html":"(type_declaration)","location":{"filename":"src/avram/model.cr","line_number":122,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L122"},"def":{"name":"primary_key","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"visibility":"Public","body":"    PRIMARY_KEY_TYPE = \n{{ type_declaration.type }}\n\n    PRIMARY_KEY_NAME = \n{{ type_declaration.var.symbolize }}\n\n    column \n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n, autogenerated: true\n    alias PrimaryKeyType = \n{{ type_declaration.type }}\n\n\n    def self.primary_key_name : Symbol?\n      :\n{{ type_declaration.var.stringify }}\n\n    \nend\n\n    \n{% if type_declaration.type.stringify == \"String\" %}\n      {% value_generator = type_declaration.value %}\n\n      {% if !value_generator || (value_generator && !((value_generator.is_a?(ProcLiteral) || value_generator.is_a?(ProcPointer)) || value_generator.is_a?(Call))) %}\n          {% raise(\"When using a String primary_key, you must also specify a way to generate the value.\\nYou can provide a class method, a proc or a proc pointer.\\nYour value generator must return a non-nullable String.\\n\\nExample:\\n  table do\\n    primary_key id : String = Random::Secure.hex\\n    ...\\n  end\\n\\nOr with a proc:\\n  table do\\n    primary_key id : String = -> { Random::Secure.hex }\\n    ...\\n  end\")\n%}\n      {% end %}\n\n      def self.primary_key_value_generator : String\n        {% if value_generator.is_a?(ProcLiteral) || value_generator.is_a?(ProcPointer) %}\n          {{ value_generator }}.call\n        {% else %}\n          {{ value_generator }}\n        {% end %}\n      end\n    {% end %}\n\n\n    include Avram::PrimaryKeyMethods\n\n    \n# If not using default 'id' primary key\n\n    \n{% if type_declaration.var.id != \"id\".id %}\n      # Then point 'id' to the primary key\n      def id\n        {{ type_declaration.var.id }}\n      end\n    {% end %}\n\n  \n"}},{"html_id":"setup(step,*args,**named_args)-macro","name":"setup","abstract":false,"args":[{"name":"step","external_name":"step","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(step, *args, **named_args)","args_html":"(step, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":207,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L207"},"def":{"name":"setup","args":[{"name":"step","external_name":"step","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"    \n{{ step.id }}\n(\n      type: \n{{ @type }}\n,\n      columns: \n{{ COLUMNS }}\n,\n      associations: \n{{ ASSOCIATIONS }}\n,\n      \n{{ named_args.double_splat }}\n\n    )\n  \n"}},{"html_id":"setup_association_queries(associations,*args,**named_args)-macro","name":"setup_association_queries","abstract":false,"args":[{"name":"associations","external_name":"associations","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(associations, *args, **named_args)","args_html":"(associations, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":241,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L241"},"def":{"name":"setup_association_queries","args":[{"name":"associations","external_name":"associations","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"    \n{% for assoc in associations %}\n      def {{ assoc[:assoc_name] }}_query\n        {% if assoc[:relationship_type] == (:has_many) %}\n          {{ assoc[:base_query_class] }}.new.{{ assoc[:foreign_key].id }}(id)\n        {% else %}{% if assoc[:relationship_type] == (:belongs_to) %}\n          {{ assoc[:type] }}::BaseQuery.new.id({{ assoc[:foreign_key].id }})\n        {% else %}\n          {{ assoc[:type] }}::BaseQuery.new\n        {% end %}{% end %}\n      end\n    {% end %}\n\n  \n"}},{"html_id":"setup_column_info_methods(columns,*args,**named_args)-macro","name":"setup_column_info_methods","abstract":false,"args":[{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","args_html":"(columns, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":312,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L312"},"def":{"name":"setup_column_info_methods","args":[{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"    def self.column_names : Array(Symbol)\n      columns.map \n{ |column| column[:name] }\n    \nend\n\n    def self.columns : Array(\n{name: Symbol, nilable: Bool, type: String})\n      [\n        \n{% for column in columns %}\n          {\n            name: {{ column[:name].id.symbolize }},\n            nilable: {{ column[:nilable] }},\n            type: {{ column[:type].id }}.name\n          },\n        {% end %}\n\n      ]\n    \nend\n  \n"}},{"html_id":"setup_getters(columns,*args,**named_args)-macro","name":"setup_getters","abstract":false,"args":[{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","args_html":"(columns, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":265,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L265"},"def":{"name":"setup_getters","args":[{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"    \n{% for column in columns %}\n      def {{ column[:name] }} : {{ column[:type] }}{{ (column[:nilable] ? \"?\" : \"\").id }}\n        {{ column[:type] }}.adapter.from_db!(@{{ column[:name] }})\n      end\n      {% if column[:type].id == Bool.id %}\n      def {{ column[:name] }}? : Bool\n        !!{{ column[:name] }}\n      end\n      {% end %}\n    {% end %}\n\n  \n"}},{"html_id":"setup_initialize(columns,*args,**named_args)-macro","name":"setup_initialize","abstract":false,"args":[{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(columns, *args, **named_args)","args_html":"(columns, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":232,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L232"},"def":{"name":"setup_initialize","args":[{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"    def initialize(\n        \n{% for column in columns %}\n          @{{ column[:name] }},\n        {% end %}\n\n      )\n    \nend\n  \n"}},{"html_id":"setup_table_schema_enforcer_validations(type,*args,**named_args)-macro","name":"setup_table_schema_enforcer_validations","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(type, *args, **named_args)","args_html":"(type, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":255,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L255"},"def":{"name":"setup_table_schema_enforcer_validations","args":[{"name":"type","external_name":"type","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"    schema_enforcer_validations << EnsureExistingTable.new(model_class: \n{{ type.id }}\n)\n    schema_enforcer_validations << EnsureMatchingColumns.new(model_class: \n{{ type.id }}\n)\n  \n"}},{"html_id":"setup_view_schema_enforcer_validations(type,*args,**named_args)-macro","name":"setup_view_schema_enforcer_validations","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(type, *args, **named_args)","args_html":"(type, *args, **named_args)","location":{"filename":"src/avram/model.cr","line_number":260,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L260"},"def":{"name":"setup_view_schema_enforcer_validations","args":[{"name":"type","external_name":"type","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"    schema_enforcer_validations << EnsureExistingTable.new(model_class: \n{{ type.id }}\n)\n    schema_enforcer_validations << EnsureMatchingColumns.new(model_class: \n{{ type.id }}\n, check_required: false)\n  \n"}},{"html_id":"skip_default_columns-macro","name":"skip_default_columns","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":197,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L197"},"def":{"name":"skip_default_columns","visibility":"Public","body":"    macro default_columns\n    \nend\n  \n"}},{"html_id":"table(table_name=nil)-macro","name":"table","abstract":false,"args":[{"name":"table_name","default_value":"nil","external_name":"table_name","restriction":""}],"args_string":"(table_name = nil)","args_html":"(table_name = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/model.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L80"},"def":{"name":"table","args":[{"name":"table_name","default_value":"nil","external_name":"table_name","restriction":""}],"visibility":"Public","body":"    default_columns\n\n    \n{{ yield }}\n\n\n    validate_columns(\"table\")\n    validate_primary_key\n\n    \n{% if table_name %}\n    class_getter table_name : String = {{ table_name.id.stringify }}\n    {% else %}\n    class_getter table_name : String = Avram::TableFor.table_for({{ @type.id }})\n    {% end %}\n\n    setup(Avram::Model.setup_initialize)\n    setup(Avram::Model.setup_getters)\n    setup(Avram::Model.setup_column_info_methods)\n    setup(Avram::Model.setup_association_queries)\n    setup(Avram::Model.setup_table_schema_enforcer_validations)\n    setup(Avram::BaseQueryTemplate.setup)\n    setup(Avram::SaveOperationTemplate.setup)\n    setup(Avram::DeleteOperationTemplate.setup)\n    setup(Avram::SchemaEnforcer.setup)\n  \n"}},{"html_id":"timestamps-macro","name":"timestamps","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":202,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L202"},"def":{"name":"timestamps","visibility":"Public","body":"    column created_at : Time, autogenerated: true\n    column updated_at : Time, autogenerated: true\n  "}},{"html_id":"validate_columns(model_type)-macro","name":"validate_columns","abstract":false,"args":[{"name":"model_type","external_name":"model_type","restriction":""}],"args_string":"(model_type)","args_html":"(model_type)","location":{"filename":"src/avram/model.cr","line_number":216,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L216"},"def":{"name":"validate_columns","args":[{"name":"model_type","external_name":"model_type","restriction":""}],"visibility":"Public","body":"    \n{% if COLUMNS.empty? %}\n      {% raise(\"#{@type} must define at least one column.\\n\\nExample:\\n\\n  #{model_type.id} do\\n    primary_key id : Int64\\n    ...\\n  end\")\n%}\n    {% end %}\n\n  \n"}},{"html_id":"validate_primary_key-macro","name":"validate_primary_key","abstract":false,"location":{"filename":"src/avram/model.cr","line_number":176,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L176"},"def":{"name":"validate_primary_key","visibility":"Public","body":"    \n{% if !(@type.has_constant?(\"PRIMARY_KEY_TYPE\")) %}\n      \\{% raise <<-ERROR\n        No primary key was specified.\n\n        Example:\n\n          table do\n            primary_key id : Int64\n            ...\n          end\n        ERROR\n      %}\n    {% end %}\n\n  \n"}},{"html_id":"view(view_name=nil,materialized=false)-macro","name":"view","abstract":false,"args":[{"name":"view_name","default_value":"nil","external_name":"view_name","restriction":""},{"name":"materialized","default_value":"false","external_name":"materialized","restriction":""}],"args_string":"(view_name = nil, materialized = false)","args_html":"(view_name = <span class=\"n\">nil</span>, materialized = <span class=\"n\">false</span>)","location":{"filename":"src/avram/model.cr","line_number":104,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/model.cr#L104"},"def":{"name":"view","args":[{"name":"view_name","default_value":"nil","external_name":"view_name","restriction":""},{"name":"materialized","default_value":"false","external_name":"materialized","restriction":""}],"visibility":"Public","body":"    \n{{ yield }}\n\n\n    validate_columns(\"view\")\n    \n{% if view_name %}\n      class_getter table_name : String = {{ view_name.id.stringify }}\n    {% else %}\n      class_getter table_name : String = Avram::TableFor.table_for({{ @type.id }})\n    {% end %}\n\n    setup(Avram::Model.setup_initialize)\n    setup(Avram::Model.setup_getters)\n    setup(Avram::Model.setup_column_info_methods)\n    setup(Avram::Model.setup_association_queries)\n    setup(Avram::Model.setup_view_schema_enforcer_validations)\n    setup(Avram::BaseQueryTemplate.setup, materialized_view: \n{{ materialized }}\n)\n    setup(Avram::SchemaEnforcer.setup)\n  \n"}}]},{"html_id":"avram/Avram/NeedyInitializer","path":"Avram/NeedyInitializer.html","kind":"module","full_name":"Avram::NeedyInitializer","name":"NeedyInitializer","abstract":false,"locations":[{"filename":"src/avram/needy_initializer.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"generate_initializer(attribute_method_args,attribute_params)-macro","name":"generate_initializer","abstract":false,"args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","args_html":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer.cr","line_number":68,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer.cr#L68"},"def":{"name":"generate_initializer","args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"visibility":"Public","body":"    \n{% needs_method_args = \"\" %}\n\n    \n{% for type_declaration in OPERATION_NEEDS %}\n      {% needs_method_args = needs_method_args + \"@#{type_declaration},\\n\" %}\n    {% end %}\n\n\n    def initialize(\n        @params : Avram::Paramable,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @params = Avram::Params.new\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def set_attributes(\n{{ attribute_method_args.id }}\n)\n      \n{% for attribute in ATTRIBUTES %}\n        unless {{ attribute.var }}.is_a? Avram::Nothing\n          self.{{ attribute.var }}.value = {{ attribute.var }}\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"html_id":"generate_initializers-macro","name":"generate_initializers","abstract":false,"location":{"filename":"src/avram/needy_initializer.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer.cr#L37"},"def":{"name":"generate_initializers","visibility":"Public","body":"    \n# Build up a list of method arguments\n\n    \n#\n\n    \n# This way everything has a name and type and we don't have to rely on\n\n    \n# **named_args. **named_args** are easy but you get horrible type errors.\n\n    \n#\n\n    \n# attribute_method_args would look something like:\n\n    \n#\n\n    \n#   name : String | Avram::Nothing = IGNORE,\n\n    \n#   email : String | Nil | Avram::Nothing = IGNORE\n\n    \n#\n\n    \n# This can be passed to macros as a string, and then the macro can call .id\n\n    \n# on it to output the string as code!\n\n    \n{% attribute_method_args = \"\" %}\n\n\n    \n# Build up a list of params so you can use the method args\n\n    \n#\n\n    \n# This looks something like:\n\n    \n#\n\n    \n#   name: name,\n\n    \n#   email: email\n\n    \n{% attribute_params = \"\" %}\n\n\n    \n{% for attribute in ATTRIBUTES %}\n      {% attribute_method_args = attribute_method_args + \"#{attribute.var} : #{attribute.type} | Avram::Nothing = IGNORE,\\n\" %}\n      {% attribute_params = attribute_params + \"#{attribute.var}: #{attribute.var},\\n\" %}\n    {% end %}\n\n\n    generate_initializer(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n  \n"}},{"html_id":"inherit_needs-macro","name":"inherit_needs","abstract":false,"location":{"filename":"src/avram/needy_initializer.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer.cr#L15"},"def":{"name":"inherit_needs","visibility":"Public","body":"    \n\\{% if\n !@type.constant(:OPERATION_NEEDS) %}\n      OPERATION_NEEDS = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n type_declaration in @type.ancestors.first.constant :OPERATION_NEEDS %}\n        \n\\{% \nOPERATION_NEEDS << type_declaration %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_needs\n    \nend\n\n    macro finished\n      \n# This is called at the end so @type will be of the subclass,\n\n      \n# and not the parent abstract class.\n\n      generate_initializers\n    \nend\n  \n"}},{"html_id":"needs(type_declaration)-macro","name":"needs","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","args_html":"(type_declaration)","location":{"filename":"src/avram/needy_initializer.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer.cr#L10"},"def":{"name":"needs","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"visibility":"Public","body":"    \n{% OPERATION_NEEDS << type_declaration %}\n\n    property \n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n\n  \n"}}]},{"html_id":"avram/Avram/NeedyInitializerAndDeleteMethods","path":"Avram/NeedyInitializerAndDeleteMethods.html","kind":"module","full_name":"Avram::NeedyInitializerAndDeleteMethods","name":"NeedyInitializerAndDeleteMethods","abstract":false,"locations":[{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_delete_methods.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"generate_delete(attribute_method_args,attribute_params,with_params,with_bang)-macro","name":"generate_delete","abstract":false,"args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""},{"name":"with_params","external_name":"with_params","restriction":""},{"name":"with_bang","external_name":"with_bang","restriction":""}],"args_string":"(attribute_method_args, attribute_params, with_params, with_bang)","args_html":"(attribute_method_args, attribute_params, with_params, with_bang)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":94,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_delete_methods.cr#L94"},"def":{"name":"generate_delete","args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""},{"name":"with_params","external_name":"with_params","restriction":""},{"name":"with_bang","external_name":"with_bang","restriction":""}],"visibility":"Public","body":"    def self.delete\n{% if with_bang %}!{% end %}\n(\n      record : T,\n      params : Hash,\n      **named_args\n    )\n      \n{% if with_bang %}\n      {% else %}\n        yield nil, nil\n      {% end %}\n\n      hash_is_not_allowed_helpful_error(:delete\n{% if with_bang %}!{% end %}\n, additional_args: \"record, \")\n    \nend\n\n    def self.delete\n{% if with_bang %}!{% end %}\n(\n        record : T,\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration }},\n        {% end %}\n\n        \n{{ attribute_method_args.id }}\n\n      )\n      operation = new(\n        record,\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration.var }},\n        {% end %}\n\n        \n{{ attribute_params.id }}\n\n      )\n\n      \n{% if with_bang %}\n        operation.delete!\n      {% else %}\n        operation.delete\n        yield operation, operation.record\n      {% end %}\n\n    \nend\n  \n"}},{"html_id":"generate_delete_methods(attribute_method_args,attribute_params)-macro","name":"generate_delete_methods","abstract":false,"args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","args_html":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":133,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_delete_methods.cr#L133"},"def":{"name":"generate_delete_methods","args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"visibility":"Public","body":"    generate_delete(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: true)\n    generate_delete(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: false)\n    generate_delete(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: true)\n    generate_delete(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: false)\n  \n"}},{"html_id":"generate_initializer(attribute_method_args,attribute_params)-macro","name":"generate_initializer","abstract":false,"args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","args_html":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":140,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_delete_methods.cr#L140"},"def":{"name":"generate_initializer","args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"visibility":"Public","body":"    \n{% needs_method_args = \"\" %}\n\n    \n{% for type_declaration in OPERATION_NEEDS %}\n      {% needs_method_args = needs_method_args + \"@#{type_declaration},\\n\" %}\n    {% end %}\n\n\n    def initialize(\n        @record : T,\n        @params : Avram::Paramable,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n      )\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        @record : T,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @params = Avram::Params.new\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def set_attributes(\n{{ attribute_method_args.id }}\n)\n      \nextract_changes_from_params\n      \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n        {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n          unless {{ attribute[:name] }}.is_a? Avram::Nothing\n            self.{{ attribute[:name] }}.value = {{ attribute[:name] }}\n          end\n        {% end %}\n      {% end %}\n\n\n      \n{% for attribute in ATTRIBUTES %}\n        unless {{ attribute.var }}.is_a? Avram::Nothing\n          self.{{ attribute.var }}.value = {{ attribute.var }}\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"html_id":"generate_initializer_and_delete_methods-macro","name":"generate_initializer_and_delete_methods","abstract":false,"location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_delete_methods.cr#L37"},"def":{"name":"generate_initializer_and_delete_methods","visibility":"Public","body":"    \n# Build up a list of method arguments\n\n    \n#\n\n    \n# These method arguments can be used in macros for generating delete/new\n\n    \n#\n\n    \n# This way everything has a name and type and we don't have to rely on\n\n    \n# **named_args. **named_args** are easy but you get horrible type errors.\n\n    \n#\n\n    \n# attribute_method_args would look something like:\n\n    \n#\n\n    \n#   name : String | Avram::Nothing = IGNORE,\n\n    \n#   email : String | Nil | Avram::Nothing = IGNORE\n\n    \n#\n\n    \n# This can be passed to macros as a string, and then the macro can call .id\n\n    \n# on it to output the string as code!\n\n    \n{% attribute_method_args = \"\" %}\n\n\n    \n# Build up a list of params so you can use the method args\n\n    \n#\n\n    \n# This looks something like:\n\n    \n#\n\n    \n#   name: name,\n\n    \n#   email: email\n\n    \n{% attribute_params = \"\" %}\n\n\n    \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n      {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n        {% attribute_method_args = attribute_method_args + \"#{attribute[:name]} : #{attribute[:type]} | Avram::Nothing\" %}\n        {% if attribute[:nilable] %}{% attribute_method_args = attribute_method_args + \" | Nil\" %}{% end %}\n        {% attribute_method_args = attribute_method_args + \" = IGNORE,\\n\" %}\n\n        {% attribute_params = attribute_params + \"#{attribute[:name]}: #{attribute[:name]},\\n\" %}\n      {% end %}\n    {% end %}\n\n\n    \n{% for attribute in ATTRIBUTES %}\n      {% attribute_method_args = attribute_method_args + \"#{attribute.var} : #{attribute.type} | Avram::Nothing = IGNORE,\\n\" %}\n      {% attribute_params = attribute_params + \"#{attribute.var}: #{attribute.var},\\n\" %}\n    {% end %}\n\n\n    generate_initializer(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n    generate_delete_methods(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n  \n"}},{"html_id":"hash_is_not_allowed_helpful_error(method,additional_args=nil)-macro","name":"hash_is_not_allowed_helpful_error","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""},{"name":"additional_args","default_value":"nil","external_name":"additional_args","restriction":""}],"args_string":"(method, additional_args = nil)","args_html":"(method, additional_args = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":81,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_delete_methods.cr#L81"},"def":{"name":"hash_is_not_allowed_helpful_error","args":[{"name":"method","external_name":"method","restriction":""},{"name":"additional_args","default_value":"nil","external_name":"additional_args","restriction":""}],"visibility":"Public","body":"    \n{% raise(\"You can't pass a Hash directly to #{method.id}. Instead pass named arguments, or convert the hash to params.\\n\\nTry this...\\n\\n  * Use named arguments (recommended) - #{@type}.#{method.id}(#{if additional_args\n  additional_args.id\nend}title: \\\"My Title\\\")\\n  * Convert hash to params (not as safe) - Avram::Params.new({\\\"title\\\" => \\\"My Title\\\"})\\n\")\n%}\n\n  \n"}},{"html_id":"inherit_needs-macro","name":"inherit_needs","abstract":false,"location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_delete_methods.cr#L15"},"def":{"name":"inherit_needs","visibility":"Public","body":"    \n\\{% if\n !@type.constant(:OPERATION_NEEDS) %}\n      OPERATION_NEEDS = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n type_declaration in @type.ancestors.first.constant :OPERATION_NEEDS %}\n        \n\\{% \nOPERATION_NEEDS << type_declaration %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_needs\n    \nend\n\n    macro finished\n      \n# This is called at the end so @type will be of the subclass,\n\n      \n# and not the parent abstract class.\n\n      generate_initializer_and_delete_methods\n    \nend\n  \n"}},{"html_id":"needs(type_declaration)-macro","name":"needs","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","args_html":"(type_declaration)","location":{"filename":"src/avram/needy_initializer_and_delete_methods.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_delete_methods.cr#L10"},"def":{"name":"needs","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"visibility":"Public","body":"    \n{% OPERATION_NEEDS << type_declaration %}\n\n    property \n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n\n  \n"}}]},{"html_id":"avram/Avram/NeedyInitializerAndSaveMethods","path":"Avram/NeedyInitializerAndSaveMethods.html","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods","abstract":false,"locations":[{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_save_methods.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"generate_create(attribute_method_args,attribute_params,with_params,with_bang)-macro","name":"generate_create","abstract":false,"args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""},{"name":"with_params","external_name":"with_params","restriction":""},{"name":"with_bang","external_name":"with_bang","restriction":""}],"args_string":"(attribute_method_args, attribute_params, with_params, with_bang)","args_html":"(attribute_method_args, attribute_params, with_params, with_bang)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":96,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_save_methods.cr#L96"},"def":{"name":"generate_create","args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""},{"name":"with_params","external_name":"with_params","restriction":""},{"name":"with_bang","external_name":"with_bang","restriction":""}],"visibility":"Public","body":"    def self.create\n{% if with_bang %}!{% end %}\n(\n      params : Hash, **named_args\n    )\n      \n{% if with_bang %}\n      {% else %}\n        yield nil, nil\n      {% end %}\n\n      hash_is_not_allowed_helpful_error(:create\n{% if with_bang %}!{% end %}\n)\n    \nend\n\n    def self.create\n{% if with_bang %}!{% end %}\n(\n      \n{% if with_params %}params,{% end %}\n\n      \n{% for type_declaration in OPERATION_NEEDS %}\n        {{ type_declaration }},\n      {% end %}\n\n      \n{{ attribute_method_args.id }}\n\n    )\n      operation = new(\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration.var }},\n        {% end %}\n\n        \n{{ attribute_params.id }}\n\n      )\n\n      \n{% if with_bang %}\n        operation.save!\n      {% else %}\n        if operation.save\n          yield operation, operation.record\n        else\n          yield operation, nil\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"html_id":"generate_initializer(attribute_method_args,attribute_params)-macro","name":"generate_initializer","abstract":false,"args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","args_html":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":185,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_save_methods.cr#L185"},"def":{"name":"generate_initializer","args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"visibility":"Public","body":"    \n{% needs_method_args = \"\" %}\n\n    \n{% for type_declaration in OPERATION_NEEDS %}\n      {% needs_method_args = needs_method_args + \"@#{type_declaration},\\n\" %}\n    {% end %}\n\n\n    def initialize(\n        @record : T,\n        @params : Avram::Paramable,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n      )\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        @params : Avram::Paramable,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @record = nil\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        @record : T,\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @params = Avram::Params.new\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def initialize(\n        \n{{ needs_method_args.id }}\n\n        \n{{ attribute_method_args.id }}\n\n    )\n      @record = nil\n      @params = Avram::Params.new\n      set_attributes(\n{{ attribute_params.id }}\n)\n    \nend\n\n    def set_attributes(\n{{ attribute_method_args.id }}\n)\n      \nextract_changes_from_params\n      \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n        {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n          unless {{ attribute[:name] }}.is_a? Avram::Nothing\n            self.{{ attribute[:name] }}.value = {{ attribute[:name] }}\n          end\n        {% end %}\n      {% end %}\n\n\n      \n{% for attribute in ATTRIBUTES %}\n        unless {{ attribute.var }}.is_a? Avram::Nothing\n          self.{{ attribute.var }}.value = {{ attribute.var }}\n        end\n      {% end %}\n\n    \nend\n  \n"}},{"html_id":"generate_initializer_and_save_methods-macro","name":"generate_initializer_and_save_methods","abstract":false,"location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_save_methods.cr#L39"},"def":{"name":"generate_initializer_and_save_methods","visibility":"Public","body":"    \n# Build up a list of method arguments\n\n    \n#\n\n    \n# These method arguments can be used in macros fro generating create/update/new\n\n    \n#\n\n    \n# This way everything has a name and type and we don't have to rely on\n\n    \n# **named_args. **named_args** are easy but you get horrible type errors.\n\n    \n#\n\n    \n# attribute_method_args would look something like:\n\n    \n#\n\n    \n#   name : String | Avram::Nothing = IGNORE,\n\n    \n#   email : String | Nil | Avram::Nothing = IGNORE\n\n    \n#\n\n    \n# This can be passed to macros as a string, and then the macro can call .id\n\n    \n# on it to output the string as code!\n\n    \n{% attribute_method_args = \"\" %}\n\n\n    \n# Build up a list of params so you can use the method args\n\n    \n#\n\n    \n# This looks something like:\n\n    \n#\n\n    \n#   name: name,\n\n    \n#   email: email\n\n    \n{% attribute_params = \"\" %}\n\n\n    \n{% if @type.constant(:COLUMN_ATTRIBUTES) %}\n      {% for attribute in COLUMN_ATTRIBUTES.uniq %}\n        {% attribute_method_args = attribute_method_args + \"#{attribute[:name]} : #{attribute[:type]} | Avram::Nothing\" %}\n        {% if attribute[:nilable] %}{% attribute_method_args = attribute_method_args + \" | Nil\" %}{% end %}\n        {% attribute_method_args = attribute_method_args + \" = IGNORE,\\n\" %}\n\n        {% attribute_params = attribute_params + \"#{attribute[:name]}: #{attribute[:name]},\\n\" %}\n      {% end %}\n    {% end %}\n\n\n    \n{% for attribute in ATTRIBUTES.uniq %}\n      {% attribute_method_args = attribute_method_args + \"#{attribute.var} : #{attribute.type} | Avram::Nothing = IGNORE,\\n\" %}\n      {% attribute_params = attribute_params + \"#{attribute.var}: #{attribute.var},\\n\" %}\n    {% end %}\n\n\n    generate_initializer(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n    generate_save_methods(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n)\n  \n"}},{"html_id":"generate_save_methods(attribute_method_args,attribute_params)-macro","name":"generate_save_methods","abstract":false,"args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"args_string":"(attribute_method_args, attribute_params)","args_html":"(attribute_method_args, attribute_params)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":173,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_save_methods.cr#L173"},"def":{"name":"generate_save_methods","args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""}],"visibility":"Public","body":"    generate_create(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: false)\n    generate_create(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: true)\n    generate_create(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: true)\n    generate_create(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: false)\n\n    generate_update(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: false)\n    generate_update(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: true, with_bang: true)\n    generate_update(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: true)\n    generate_update(\n{{ attribute_method_args }}\n, \n{{ attribute_params }}\n, with_params: false, with_bang: false)\n  \n"}},{"html_id":"generate_update(attribute_method_args,attribute_params,with_params,with_bang)-macro","name":"generate_update","abstract":false,"args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""},{"name":"with_params","external_name":"with_params","restriction":""},{"name":"with_bang","external_name":"with_bang","restriction":""}],"args_string":"(attribute_method_args, attribute_params, with_params, with_bang)","args_html":"(attribute_method_args, attribute_params, with_params, with_bang)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":134,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_save_methods.cr#L134"},"def":{"name":"generate_update","args":[{"name":"attribute_method_args","external_name":"attribute_method_args","restriction":""},{"name":"attribute_params","external_name":"attribute_params","restriction":""},{"name":"with_params","external_name":"with_params","restriction":""},{"name":"with_bang","external_name":"with_bang","restriction":""}],"visibility":"Public","body":"    def self.update\n{% if with_bang %}!{% end %}\n(\n      record : T,\n      params : Hash,\n      **named_args\n    )\n      \n{% if with_bang %}\n      {% else %}\n        yield nil, nil\n      {% end %}\n\n      hash_is_not_allowed_helpful_error(:update\n{% if with_bang %}!{% end %}\n, additional_args: \"record, \")\n    \nend\n\n    def self.update\n{% if with_bang %}!{% end %}\n(\n        record : T,\n        \n{% if with_params %}with params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration }},\n        {% end %}\n\n        \n{{ attribute_method_args.id }}\n\n      )\n      operation = new(\n        record,\n        \n{% if with_params %}params,{% end %}\n\n        \n{% for type_declaration in OPERATION_NEEDS %}\n          {{ type_declaration.var }},\n        {% end %}\n\n        \n{{ attribute_params.id }}\n\n      )\n\n      \n{% if with_bang %}\n        operation.update!\n      {% else %}\n        operation.save\n        yield operation, operation.record.not_nil!\n      {% end %}\n\n    \nend\n  \n"}},{"html_id":"hash_is_not_allowed_helpful_error(method,additional_args=nil)-macro","name":"hash_is_not_allowed_helpful_error","abstract":false,"args":[{"name":"method","external_name":"method","restriction":""},{"name":"additional_args","default_value":"nil","external_name":"additional_args","restriction":""}],"args_string":"(method, additional_args = nil)","args_html":"(method, additional_args = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":83,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_save_methods.cr#L83"},"def":{"name":"hash_is_not_allowed_helpful_error","args":[{"name":"method","external_name":"method","restriction":""},{"name":"additional_args","default_value":"nil","external_name":"additional_args","restriction":""}],"visibility":"Public","body":"    \n{% raise(\"You can't pass a Hash directly to #{method.id}. Instead pass named arguments, or convert the hash to params.\\n\\nTry this...\\n\\n  * Use named arguments (recommended) - #{@type}.#{method.id}(#{if additional_args\n  additional_args.id\nend}title: \\\"My Title\\\")\\n  * Convert hash to params (not as safe) - Avram::Params.new({\\\"title\\\" => [\\\"My Title\\\"]})\\n\")\n%}\n\n  \n"}},{"html_id":"inherit_needs-macro","name":"inherit_needs","abstract":false,"location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_save_methods.cr#L16"},"def":{"name":"inherit_needs","visibility":"Public","body":"    \n\\{% if\n !@type.constant(:OPERATION_NEEDS) %}\n      OPERATION_NEEDS = [] of Nil\n    \n\\{% end\n %}\n\n    \n\\{% if\n !@type.ancestors.first.abstract? %}\n      \n\\{% for\n type_declaration in @type.ancestors.first.constant :OPERATION_NEEDS %}\n        \n\\{% \nOPERATION_NEEDS << type_declaration %}\n      \n\\{% end\n %}\n    \n\\{% end\n %}\n\n    macro inherited\n      inherit_needs\n    \nend\n\n    macro finished\n      \n# @type is not correct in this method, but is in the macro we call below\n\n      \n# That is why this extrac macro was extracted. We need @type to get the\n\n      \n# attributes for this SaveOperation\n\n      generate_initializer_and_save_methods\n    \nend\n  \n"}},{"html_id":"needs(type_declaration)-macro","name":"needs","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","args_html":"(type_declaration)","location":{"filename":"src/avram/needy_initializer_and_save_methods.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/needy_initializer_and_save_methods.cr#L10"},"def":{"name":"needs","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"visibility":"Public","body":"    \n{% OPERATION_NEEDS << type_declaration %}\n\n    @\n{{ type_declaration.var }}\n : \n{{ type_declaration.type }}\n\n    property \n{{ type_declaration.var }}\n\n  \n"}}]},{"html_id":"avram/Avram/NestedSaveOperation","path":"Avram/NestedSaveOperation.html","kind":"module","full_name":"Avram::NestedSaveOperation","name":"NestedSaveOperation","abstract":false,"locations":[{"filename":"src/avram/nested_save_operation.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/nested_save_operation.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"mark_nested_save_operations_as_failed-instance-method","name":"mark_nested_save_operations_as_failed","abstract":false,"location":{"filename":"src/avram/nested_save_operation.cr","line_number":49,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/nested_save_operation.cr#L49"},"def":{"name":"mark_nested_save_operations_as_failed","visibility":"Public","body":"nested_save_operations.each do |operation|\n  (operation.as(Avram::MarkAsFailed)).mark_as_failed\nend"},"external_var":false},{"html_id":"nested_save_operations-instance-method","name":"nested_save_operations","abstract":false,"location":{"filename":"src/avram/nested_save_operation.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/nested_save_operation.cr#L55"},"def":{"name":"nested_save_operations","visibility":"Public","body":"[] of Avram::MarkAsFailed"},"external_var":false}],"macros":[{"html_id":"has_one(type_declaration)-macro","name":"has_one","abstract":false,"args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"args_string":"(type_declaration)","args_html":"(type_declaration)","location":{"filename":"src/avram/nested_save_operation.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/nested_save_operation.cr#L2"},"def":{"name":"has_one","args":[{"name":"type_declaration","external_name":"type_declaration","restriction":""}],"visibility":"Public","body":"    \n{% name = type_declaration.var %}\n\n    \n{% type = type_declaration.type.resolve %}\n\n\n    \n{% model_type = type.ancestors.find do |t|\n  t.stringify.starts_with?(\"Avram::SaveOperation(\")\nend.type_vars.first %}\n\n\n    \n{% assoc = (T.constant(:ASSOCIATIONS)).find do |assoc|\n  (assoc[:relationship_type] == (:has_one)) && (assoc[:type].resolve.name == model_type.name)\nend %}\n\n\n    \n{% if assoc %}{% else %}\n      {% raise(\"#{T} must have a has_one association with #{model_type}\") %}\n    {% end %}\n\n\n    @_\n{{ name }}\n : \n{{ type }}\n | Nil\n\n    after_save save_\n{{ name }}\n\n\n    def save_\n{{ name }}\n(saved_record)\n      \n{{ name }}\n.\n{{ (@type.constant(:FOREIGN_KEY)).id }}\n.value = saved_record.id\n\n      unless \n{{ name }}\n.save\n        add_error(:\n{{ name }}\n, \"failed\")\n        mark_nested_save_operations_as_failed\n        write_database.rollback\n      \nend\n    \nend\n\n    def \n{{ name }}\n\n      @_\n{{ name }}\n ||= if new_record?\n        \n{{ type }}\n.new(params)\n      \nelse\n        \n{{ type }}\n.new(record.not_nil!.\n{{ assoc[:assoc_name].id }}\n!, params)\n      \nend\n    \nend\n\n    def nested_save_operations\n      \n{% if @type.methods.map(&.name).includes?((:nested_save_operations).id) %}\n        previous_def +\n      {% end %}\n\n      [\n{{ name }}\n]\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/Nothing","path":"Avram/Nothing.html","kind":"class","full_name":"Avram::Nothing","name":"Nothing","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/nothing.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/nothing.cr#L5"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"This class is used in various places\nwhere the question of \"Did I not pass in anything or did I pass in nil?\"\nneeds to be answered.\n:nodoc:","summary":"<p>This class is used in various places where the question of &quot;Did I not pass in anything or did I pass in nil?&quot; needs to be answered.</p>"},{"html_id":"avram/Avram/Operation","path":"Avram/Operation.html","kind":"class","full_name":"Avram::Operation","name":"Operation","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/NeedyInitializer","kind":"module","full_name":"Avram::NeedyInitializer","name":"NeedyInitializer"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/operation.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L8"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ATTRIBUTES","name":"ATTRIBUTES","value":"[] of Nil"},{"id":"OPERATION_NEEDS","name":"OPERATION_NEEDS","value":"[] of Nil"}],"included_modules":[{"html_id":"avram/Avram/Callbacks","kind":"module","full_name":"Avram::Callbacks","name":"Callbacks"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/NeedyInitializer","kind":"module","full_name":"Avram::NeedyInitializer","name":"NeedyInitializer"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"param_key:String-class-method","name":"param_key","abstract":false,"location":{"filename":"src/avram/operation.cr","line_number":104,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L104"},"def":{"name":"param_key","return_type":"String","visibility":"Public","body":"name.underscore"},"external_var":false},{"html_id":"run(params:Avram::Paramable,*args,**named_args,&)-class-method","name":"run","doc":"Yields the instance of the operation, and the return value from\nthe `run` instance method.\n\n```\nMyOperation.run(params) do |operation, value|\n  # operation is complete\nend\n```","summary":"<p>Yields the instance of the operation, and the return value from the <code><a href=\"../Avram/Operation.html#run-instance-method\">#run</a></code> instance method.</p>","abstract":false,"args":[{"name":"params","external_name":"params","restriction":"Avram::Paramable"},{"name":"args","external_name":"args","restriction":""}],"args_string":"(params : Avram::Paramable, *args, **named_args, &)","args_html":"(params : <a href=\"../Avram/Paramable.html\">Avram::Paramable</a>, *args, **named_args, &)","location":{"filename":"src/avram/operation.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L52"},"def":{"name":"run","args":[{"name":"params","external_name":"params","restriction":"Avram::Paramable"},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"yields":2,"block_arity":2,"visibility":"Public","body":"operation = self.new(params, *args, **named_args)\nvalue = nil\n\noperation.before_run\n\nif operation.valid?\n  value = operation.run\n  operation.after_run(value)\nend\n\nyield operation, value\n"},"external_var":false},{"html_id":"run(*args,**named_args,&)-class-method","name":"run","doc":"Yields the instance of the operation, and the return value from\nthe `run` instance method.\n\n```\nMyOperation.run do |operation, value|\n  # operation is complete\nend\n```","summary":"<p>Yields the instance of the operation, and the return value from the <code><a href=\"../Avram/Operation.html#run-instance-method\">#run</a></code> instance method.</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args, &)","args_html":"(*args, **named_args, &)","location":{"filename":"src/avram/operation.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L26"},"def":{"name":"run","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"yields":2,"block_arity":2,"visibility":"Public","body":"params = Avram::Params.new\nrun(params, *args, **named_args) do |operation, value|\n  yield operation, value\nend\n"},"external_var":false},{"html_id":"run!(params:Avram::Paramable,*args,**named_args)-class-method","name":"run!","doc":"Returns the value from the `run` instance method.\nor raise `Avram::FailedOperation` if the operation fails.\n\n```\nvalue = MyOperation.run!(params)\n```","summary":"<p>Returns the value from the <code><a href=\"../Avram/Operation.html#run-instance-method\">#run</a></code> instance method.</p>","abstract":false,"args":[{"name":"params","external_name":"params","restriction":"Avram::Paramable"},{"name":"args","external_name":"args","restriction":""}],"args_string":"(params : Avram::Paramable, *args, **named_args)","args_html":"(params : <a href=\"../Avram/Paramable.html\">Avram::Paramable</a>, *args, **named_args)","location":{"filename":"src/avram/operation.cr","line_number":72,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L72"},"def":{"name":"run!","args":[{"name":"params","external_name":"params","restriction":"Avram::Paramable"},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"run(params, *args, **named_args) do |_operation, value|\n  if value\n  else\n    raise(Avram::FailedOperation.new(\"The operation failed to return a value\"))\n  end\n  value\nend"},"external_var":false},{"html_id":"run!(*args,**named_args)-class-method","name":"run!","doc":"Returns the value from the `run` instance method.\nor raise `Avram::FailedOperation` if the operation fails.\n\n```\nvalue = MyOperation.run!\n```","summary":"<p>Returns the value from the <code><a href=\"../Avram/Operation.html#run-instance-method\">#run</a></code> instance method.</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/avram/operation.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L39"},"def":{"name":"run!","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"params = Avram::Params.new\nrun!(params, *args, **named_args)\n"},"external_var":false}],"constructors":[{"html_id":"new(params:Avram::Paramable)-class-method","name":"new","abstract":false,"args":[{"name":"params","external_name":"params","restriction":"::Avram::Paramable"}],"args_string":"(params : Avram::Paramable)","args_html":"(params : <a href=\"../Avram/Paramable.html\">Avram::Paramable</a>)","location":{"filename":"src/avram/operation.cr","line_number":87,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L87"},"def":{"name":"new","args":[{"name":"params","external_name":"params","restriction":"::Avram::Paramable"}],"visibility":"Public","body":"_ = allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/avram/operation.cr","line_number":90,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L90"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"after_run(_value)-instance-method","name":"after_run","abstract":false,"args":[{"name":"_value","external_name":"_value","restriction":""}],"args_string":"(_value)","args_html":"(_value)","location":{"filename":"src/avram/operation.cr","line_number":84,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L84"},"def":{"name":"after_run","args":[{"name":"_value","external_name":"_value","restriction":""}],"visibility":"Public","body":""},"external_var":false},{"html_id":"before_run-instance-method","name":"before_run","abstract":false,"location":{"filename":"src/avram/operation.cr","line_number":79,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L79"},"def":{"name":"before_run","visibility":"Public","body":""},"external_var":false},{"html_id":"custom_errors:Hash(Symbol,Array(String))-instance-method","name":"custom_errors","abstract":false,"def":{"name":"custom_errors","return_type":"Hash(Symbol, Array(String))","visibility":"Public","body":"@custom_errors"},"external_var":false},{"html_id":"params:Avram::Paramable-instance-method","name":"params","abstract":false,"location":{"filename":"src/avram/operation.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L16"},"def":{"name":"params","return_type":"Avram::Paramable","visibility":"Public","body":"@params"},"external_var":false},{"html_id":"run-instance-method","name":"run","abstract":true,"location":{"filename":"src/avram/operation.cr","line_number":82,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L82"},"def":{"name":"run","visibility":"Public","body":""},"external_var":false},{"html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Returns `true` if all attributes are valid,\nand there's no custom errors","summary":"<p>Returns <code>true</code> if all attributes are valid, and there's no custom errors</p>","abstract":false,"location":{"filename":"src/avram/operation.cr","line_number":99,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation.cr#L99"},"def":{"name":"valid?","return_type":"Bool","visibility":"Public","body":"default_validations\ncustom_errors.empty? && attributes.all?(&.valid?)\n"},"external_var":false}],"macros":[{"html_id":"param_key(key)-macro","name":"param_key","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","def":{"name":"param_key","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"      def self.param_key : String\n        \n{{ key.id.stringify }}\n\n      \nend\n    \n"}}]},{"html_id":"avram/Avram/OperationErrors","path":"Avram/OperationErrors.html","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors","abstract":false,"locations":[{"filename":"src/avram/operation_errors.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation_errors.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"add_error(key:Symbol,message:String):Nil-instance-method","name":"add_error","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"Symbol"},{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(key : Symbol, message : String) : Nil","args_html":"(key : Symbol, message : <a href=\"../String.html\">String</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/avram/operation_errors.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation_errors.cr#L19"},"def":{"name":"add_error","args":[{"name":"key","external_name":"key","restriction":"Symbol"},{"name":"message","external_name":"message","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"__temp_189 = key\n@custom_errors[__temp_189]? || (@custom_errors[__temp_189] = [] of String)\n@custom_errors[key].push(message)\n"},"external_var":false},{"html_id":"errors:Hash(Symbol,Array(String))-instance-method","name":"errors","abstract":false,"location":{"filename":"src/avram/operation_errors.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/operation_errors.cr#L6"},"def":{"name":"errors","return_type":"Hash(Symbol, Array(String))","visibility":"Public","body":"attr_errors = attributes.reduce({} of Symbol => Array(String)) do |errors_hash, attribute|\n  if attribute.errors.empty?\n    errors_hash\n  else\n    errors_hash[attribute.name] = attribute.errors\n    errors_hash\n  end\nend\n\nattr_errors.merge(@custom_errors)\n"},"external_var":false}]},{"html_id":"avram/Avram/OrderBy","path":"Avram/OrderBy.html","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy","abstract":false,"superclass":{"html_id":"avram/Avram/OrderByClause","kind":"class","full_name":"Avram::OrderByClause","name":"OrderByClause"},"ancestors":[{"html_id":"avram/Avram/OrderByClause","kind":"class","full_name":"Avram::OrderByClause","name":"OrderByClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/order_by_clause/order_by.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(column:String|Symbol,direction:Direction,nulls:NullSorting=:default)-class-method","name":"new","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"String | Symbol"},{"name":"direction","external_name":"direction","restriction":"Direction"},{"name":"nulls","default_value":":default","external_name":"nulls","restriction":"NullSorting"}],"args_string":"(column : String | Symbol, direction : Direction, nulls : NullSorting = :default)","args_html":"(column : <a href=\"../String.html\">String</a> | Symbol, direction : <a href=\"../Avram/OrderBy/Direction.html\">Direction</a>, nulls : <a href=\"../Avram/OrderBy/NullSorting.html\">NullSorting</a> = <span class=\"n\">:default</span>)","location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L24"},"def":{"name":"new","args":[{"name":"column","external_name":"column","restriction":"String | Symbol"},{"name":"direction","external_name":"direction","restriction":"Direction"},{"name":"nulls","default_value":":default","external_name":"nulls","restriction":"NullSorting"}],"visibility":"Public","body":"_ = allocate\n_.initialize(column, direction, nulls)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L18"},"def":{"name":"clone","visibility":"Public","body":"{% if @type < ::Reference && !@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          ::GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        ::GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"},"external_var":false},{"html_id":"column:String|Symbol-instance-method","name":"column","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L20"},"def":{"name":"column","return_type":"String | Symbol","visibility":"Public","body":"@column"},"external_var":false},{"html_id":"direction:Avram::OrderBy::Direction-instance-method","name":"direction","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L21"},"def":{"name":"direction","visibility":"Public","body":"@direction"},"external_var":false},{"html_id":"nulls:Avram::OrderBy::NullSorting-instance-method","name":"nulls","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L22"},"def":{"name":"nulls","visibility":"Public","body":"@nulls"},"external_var":false},{"html_id":"prepare:String-instance-method","name":"prepare","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L31"},"def":{"name":"prepare","return_type":"String","visibility":"Public","body":"String.build do |str|\n  ((str << column) << ' ') << direction\n  if nulls.default?\n  else\n    (str << ' ') << nulls\n  end\nend"},"external_var":false},{"html_id":"reversed:self-instance-method","name":"reversed","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L38"},"def":{"name":"reversed","return_type":"self","visibility":"Public","body":"@direction = @direction.asc? ? Direction::DESC : Direction::ASC\nself\n"},"external_var":false}],"types":[{"html_id":"avram/Avram/OrderBy/Direction","path":"Avram/OrderBy/Direction.html","kind":"enum","full_name":"Avram::OrderBy::Direction","name":"Direction","abstract":false,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/order_by_clause/order_by.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L13"}],"repository_name":"avram","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"ASC","name":"ASC","value":"0"},{"id":"DESC","name":"DESC","value":"1"}],"namespace":{"html_id":"avram/Avram/OrderBy","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy"},"instance_methods":[{"html_id":"asc?-instance-method","name":"asc?","doc":"Returns `true` if this enum value equals `ASC`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/OrderBy/Direction.html#ASC\">ASC</a></code></p>","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L14"},"def":{"name":"asc?","visibility":"Public","body":"self == ASC"},"external_var":false},{"html_id":"desc?-instance-method","name":"desc?","doc":"Returns `true` if this enum value equals `DESC`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/OrderBy/Direction.html#DESC\">DESC</a></code></p>","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L15"},"def":{"name":"desc?","visibility":"Public","body":"self == DESC"},"external_var":false}]},{"html_id":"avram/Avram/OrderBy/NullSorting","path":"Avram/OrderBy/NullSorting.html","kind":"enum","full_name":"Avram::OrderBy::NullSorting","name":"NullSorting","abstract":false,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/order_by_clause/order_by.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L3"}],"repository_name":"avram","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"DEFAULT","name":"DEFAULT","value":"0"},{"id":"NULLS_FIRST","name":"NULLS_FIRST","value":"1"},{"id":"NULLS_LAST","name":"NULLS_LAST","value":"2"}],"namespace":{"html_id":"avram/Avram/OrderBy","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy"},"instance_methods":[{"html_id":"default?-instance-method","name":"default?","doc":"Returns `true` if this enum value equals `DEFAULT`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/OrderBy/NullSorting.html#DEFAULT\">DEFAULT</a></code></p>","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L4"},"def":{"name":"default?","visibility":"Public","body":"self == DEFAULT"},"external_var":false},{"html_id":"nulls_first?-instance-method","name":"nulls_first?","doc":"Returns `true` if this enum value equals `NULLS_FIRST`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/OrderBy/NullSorting.html#NULLS_FIRST\">NULLS_FIRST</a></code></p>","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L5"},"def":{"name":"nulls_first?","visibility":"Public","body":"self == NULLS_FIRST"},"external_var":false},{"html_id":"nulls_last?-instance-method","name":"nulls_last?","doc":"Returns `true` if this enum value equals `NULLS_LAST`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/OrderBy/NullSorting.html#NULLS_LAST\">NULLS_LAST</a></code></p>","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L6"},"def":{"name":"nulls_last?","visibility":"Public","body":"self == NULLS_LAST"},"external_var":false},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a `String` representation of this enum member.\nIn the case of regular enums, this is just the name of the member.\nIn the case of flag enums, it's the names joined by vertical bars, or \"None\",\nif the value is zero.\n\nIf an enum's value doesn't match a member's value, the raw value\nis returned as a string.\n\n```\nColor::Red.to_s                     # => \"Red\"\nIOMode::None.to_s                   # => \"None\"\n(IOMode::Read | IOMode::Write).to_s # => \"Read | Write\"\n\nColor.new(10).to_s # => \"10\"\n```","summary":"<p>Returns a <code><a href=\"../../String.html\">String</a></code> representation of this enum member.</p>","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by.cr#L8"},"def":{"name":"to_s","visibility":"Public","body":"super().gsub(\"_\", \" \")"},"external_var":false}]}]},{"html_id":"avram/Avram/OrderByClause","path":"Avram/OrderByClause.html","kind":"class","full_name":"Avram::OrderByClause","name":"OrderByClause","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/order_by_clause.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/OrderBy","kind":"class","full_name":"Avram::OrderBy","name":"OrderBy"},{"html_id":"avram/Avram/OrderByRandom","kind":"class","full_name":"Avram::OrderByRandom","name":"OrderByRandom"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"column:String|Symbol-instance-method","name":"column","abstract":true,"location":{"filename":"src/avram/order_by_clause.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause.cr#L3"},"def":{"name":"column","return_type":"String | Symbol","visibility":"Public","body":""},"external_var":false},{"html_id":"prepare:String-instance-method","name":"prepare","abstract":true,"location":{"filename":"src/avram/order_by_clause.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause.cr#L4"},"def":{"name":"prepare","return_type":"String","visibility":"Public","body":""},"external_var":false},{"html_id":"reversed:self-instance-method","name":"reversed","abstract":true,"location":{"filename":"src/avram/order_by_clause.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause.cr#L5"},"def":{"name":"reversed","return_type":"self","visibility":"Public","body":""},"external_var":false}]},{"html_id":"avram/Avram/OrderByRandom","path":"Avram/OrderByRandom.html","kind":"class","full_name":"Avram::OrderByRandom","name":"OrderByRandom","abstract":false,"superclass":{"html_id":"avram/Avram/OrderByClause","kind":"class","full_name":"Avram::OrderByClause","name":"OrderByClause"},"ancestors":[{"html_id":"avram/Avram/OrderByClause","kind":"class","full_name":"Avram::OrderByClause","name":"OrderByClause"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/order_by_clause/order_by_random.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by_random.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by_random.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by_random.cr#L3"},"def":{"name":"clone","visibility":"Public","body":"{% if @type < ::Reference && !@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          ::GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        ::GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"},"external_var":false},{"html_id":"column:String|Symbol-instance-method","name":"column","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by_random.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by_random.cr#L5"},"def":{"name":"column","return_type":"String | Symbol","visibility":"Public","body":"@column"},"external_var":false},{"html_id":"prepare:String-instance-method","name":"prepare","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by_random.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by_random.cr#L7"},"def":{"name":"prepare","return_type":"String","visibility":"Public","body":"\"RANDOM ()\""},"external_var":false},{"html_id":"reversed:self-instance-method","name":"reversed","abstract":false,"location":{"filename":"src/avram/order_by_clause/order_by_random.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/order_by_clause/order_by_random.cr#L11"},"def":{"name":"reversed","return_type":"self","visibility":"Public","body":"self"},"external_var":false}]},{"html_id":"avram/Avram/Paramable","path":"Avram/Paramable.html","kind":"module","full_name":"Avram::Paramable","name":"Paramable","abstract":false,"locations":[{"filename":"src/avram/paramable.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Params","kind":"class","full_name":"Avram::Params","name":"Params"},{"html_id":"avram/Lucky/Params","kind":"class","full_name":"Lucky::Params","name":"Params"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"get(key:String)-instance-method","name":"get","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L9"},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":""},"external_var":false},{"html_id":"get?(key:String)-instance-method","name":"get?","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L8"},"def":{"name":"get?","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":""},"external_var":false},{"html_id":"get_all(key:String)-instance-method","name":"get_all","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L11"},"def":{"name":"get_all","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":""},"external_var":false},{"html_id":"get_all?(key:String)-instance-method","name":"get_all?","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L10"},"def":{"name":"get_all?","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":""},"external_var":false},{"html_id":"has_key_for?(operation:Avram::Operation.class|Avram::SaveOperation.class):Bool-instance-method","name":"has_key_for?","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":"Avram::Operation.class | Avram::SaveOperation.class"}],"args_string":"(operation : Avram::Operation.class | Avram::SaveOperation.class) : Bool","args_html":"(operation : <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Operation</span>.<span class=\"k\">class</span> | <span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">SaveOperation</span>.<span class=\"k\">class</span>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/paramable.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L13"},"def":{"name":"has_key_for?","args":[{"name":"operation","external_name":"operation","restriction":"Avram::Operation.class | Avram::SaveOperation.class"}],"return_type":"Bool","visibility":"Public","body":"!(nested?(operation.param_key)).empty?"},"external_var":false},{"html_id":"many_nested(key:String):Array(Hash(String,String))-instance-method","name":"many_nested","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Array(Hash(String, String))","args_html":"(key : <a href=\"../String.html\">String</a>) : <a href=\"../Array.html\">Array</a>(Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/paramable.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L7"},"def":{"name":"many_nested","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Array(Hash(String, String))","visibility":"Public","body":""},"external_var":false},{"html_id":"many_nested?(key:String):Array(Hash(String,String))-instance-method","name":"many_nested?","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Array(Hash(String, String))","args_html":"(key : <a href=\"../String.html\">String</a>) : <a href=\"../Array.html\">Array</a>(Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/paramable.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L6"},"def":{"name":"many_nested?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Array(Hash(String, String))","visibility":"Public","body":""},"external_var":false},{"html_id":"nested(key:String):Hash(String,String)-instance-method","name":"nested","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L3"},"def":{"name":"nested","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, String)","visibility":"Public","body":""},"external_var":false},{"html_id":"nested?(key:String):Hash(String,String)-instance-method","name":"nested?","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/paramable.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L2"},"def":{"name":"nested?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, String)","visibility":"Public","body":""},"external_var":false},{"html_id":"nested_arrays(key:String):Hash(String,Array(String))-instance-method","name":"nested_arrays","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, Array(String))","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/paramable.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L5"},"def":{"name":"nested_arrays","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, Array(String))","visibility":"Public","body":""},"external_var":false},{"html_id":"nested_arrays?(key:String):Hash(String,Array(String))-instance-method","name":"nested_arrays?","abstract":true,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, Array(String))","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/paramable.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/paramable.cr#L4"},"def":{"name":"nested_arrays?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, Array(String))","visibility":"Public","body":""},"external_var":false}]},{"html_id":"avram/Avram/ParamKeyOverride","path":"Avram/ParamKeyOverride.html","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride","abstract":false,"locations":[{"filename":"src/avram/param_key_override.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/param_key_override.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"define_param_key_override-macro","name":"define_param_key_override","abstract":false,"location":{"filename":"src/avram/param_key_override.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/param_key_override.cr#L10"},"def":{"name":"define_param_key_override","visibility":"Public","body":"    macro param_key(key)\n      def self.param_key : String\n        \n\\{\n{ key.id.stringify }}\n      \nend\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/Params","path":"Avram/Params.html","kind":"class","full_name":"Avram::Params","name":"Params","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/Paramable","kind":"module","full_name":"Avram::Paramable","name":"Paramable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/params.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Paramable","kind":"module","full_name":"Avram::Paramable","name":"Paramable"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(hash:Hash(String,Array(String)|String)|Hash(String,Array(String))|Hash(String,String))-class-method","name":"new","abstract":false,"args":[{"name":"hash","external_name":"hash","restriction":"::Hash(::String, ::Array(::String) | ::String) | ::Hash(::String, ::Array(::String)) | ::Hash(::String, ::String)"}],"args_string":"(hash : Hash(String, Array(String) | String) | Hash(String, Array(String)) | Hash(String, String))","args_html":"(hash : Hash(<a href=\"../String.html\">String</a>, <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>) | <a href=\"../String.html\">String</a>) | Hash(<a href=\"../String.html\">String</a>, <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>)) | Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/params.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L12"},"def":{"name":"new","args":[{"name":"hash","external_name":"hash","restriction":"::Hash(::String, ::Array(::String) | ::String) | ::Hash(::String, ::Array(::String)) | ::Hash(::String, ::String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(hash)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/avram/params.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L8"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"get(key:String)-instance-method","name":"get","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":51,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L51"},"def":{"name":"get","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"(get?(key)).not_nil!"},"external_var":false},{"html_id":"get?(key:String)-instance-method","name":"get?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":47,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L47"},"def":{"name":"get?","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"@hash[key]?.try do |value|\n  if value.is_a?(String)\n    value\n  end\nend"},"external_var":false},{"html_id":"get_all(key:String)-instance-method","name":"get_all","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":59,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L59"},"def":{"name":"get_all","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"(get_all?(key)).not_nil!"},"external_var":false},{"html_id":"get_all?(key:String)-instance-method","name":"get_all?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L55"},"def":{"name":"get_all?","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"@hash[key]?.try do |value|\n  if value.is_a?(Array)\n    value\n  end\nend"},"external_var":false},{"html_id":"get_all_files(key:String)-instance-method","name":"get_all_files","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String)","args_html":"(key : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":71,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L71"},"def":{"name":"get_all_files","args":[{"name":"key","external_name":"key","restriction":"String"}],"visibility":"Public","body":"get_all(key)"},"external_var":false},{"html_id":"many_nested(key:String):Array(Hash(String,String))-instance-method","name":"many_nested","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Array(Hash(String, String))","args_html":"(key : <a href=\"../String.html\">String</a>) : <a href=\"../Array.html\">Array</a>(Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/params.cr","line_number":43,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L43"},"def":{"name":"many_nested","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Array(Hash(String, String))","visibility":"Public","body":"[nested(key)]"},"external_var":false},{"html_id":"many_nested?(key:String):Array(Hash(String,String))-instance-method","name":"many_nested?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Array(Hash(String, String))","args_html":"(key : <a href=\"../String.html\">String</a>) : <a href=\"../Array.html\">Array</a>(Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/params.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L39"},"def":{"name":"many_nested?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Array(Hash(String, String))","visibility":"Public","body":"many_nested(key)"},"external_var":false},{"html_id":"nested(key:String):Hash(String,String)-instance-method","name":"nested","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L19"},"def":{"name":"nested","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, String)","visibility":"Public","body":"Hash(String, String).new.tap do |params|\n  @hash.each do |_key, _value|\n    if _value.is_a?(String)\n      params[_key] = _value\n    end\n  end\nend"},"external_var":false},{"html_id":"nested?(key:String):Hash(String,String)-instance-method","name":"nested?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L15"},"def":{"name":"nested?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, String)","visibility":"Public","body":"nested(key)"},"external_var":false},{"html_id":"nested_arrays(key:String):Hash(String,Array(String))-instance-method","name":"nested_arrays","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, Array(String))","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/params.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L31"},"def":{"name":"nested_arrays","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, Array(String))","visibility":"Public","body":"Hash(String, Array(String)).new.tap do |params|\n  @hash.each do |_key, _value|\n    if _value.is_a?(Array)\n      params[_key] = _value\n    end\n  end\nend"},"external_var":false},{"html_id":"nested_arrays?(key:String):Hash(String,Array(String))-instance-method","name":"nested_arrays?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, Array(String))","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/params.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L27"},"def":{"name":"nested_arrays?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, Array(String))","visibility":"Public","body":"nested_arrays(key)"},"external_var":false},{"html_id":"nested_file(key:String):Hash(String,String)-instance-method","name":"nested_file","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":67,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L67"},"def":{"name":"nested_file","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, String)","visibility":"Public","body":"nested(key)"},"external_var":false},{"html_id":"nested_file?(key:String):Hash(String,String)-instance-method","name":"nested_file?","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Hash(String, String)","args_html":"(key : <a href=\"../String.html\">String</a>) : Hash(<a href=\"../String.html\">String</a>, <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/params.cr","line_number":63,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/params.cr#L63"},"def":{"name":"nested_file?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Hash(String, String)","visibility":"Public","body":"nested?(key)"},"external_var":false}]},{"html_id":"avram/Avram/PermittedAttribute","path":"Avram/PermittedAttribute.html","kind":"class","full_name":"Avram::PermittedAttribute(T)","name":"PermittedAttribute","abstract":false,"superclass":{"html_id":"avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute","name":"Attribute"},"ancestors":[{"html_id":"avram/Avram/Attribute","kind":"class","full_name":"Avram::Attribute","name":"Attribute"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/permitted_attribute.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/permitted_attribute.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(name,value:T|Nil,param_key,param=nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""},{"name":"value","external_name":"value","restriction":"T | ::Nil"},{"name":"param_key","external_name":"param_key","restriction":""},{"name":"param","default_value":"nil","external_name":"param","restriction":""}],"args_string":"(name, value : T | Nil, param_key, param = nil)","args_html":"(name, value : T | <a href=\"../Nil.html\">Nil</a>, param_key, param = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/attribute.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/attribute.cr#L13"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":""},{"name":"value","external_name":"value","restriction":"T | ::Nil"},{"name":"param_key","external_name":"param_key","restriction":""},{"name":"param","default_value":"nil","external_name":"param","restriction":""}],"visibility":"Public","body":"_ = PermittedAttribute(T).allocate\n_.initialize(name, value, param_key, param)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"avram/Avram/PGClientNotInstalledError","path":"Avram/PGClientNotInstalledError.html","kind":"class","full_name":"Avram::PGClientNotInstalledError","name":"PGClientNotInstalledError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":115,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L115"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(original_message:String)-class-method","name":"new","abstract":false,"args":[{"name":"original_message","external_name":"original_message","restriction":"String"}],"args_string":"(original_message : String)","args_html":"(original_message : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":116,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L116"},"def":{"name":"new","args":[{"name":"original_message","external_name":"original_message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(original_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"avram/Avram/PGNotRunningError","path":"Avram/PGNotRunningError.html","kind":"class","full_name":"Avram::PGNotRunningError","name":"PGNotRunningError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":141,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L141"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(original_message:String)-class-method","name":"new","abstract":false,"args":[{"name":"original_message","external_name":"original_message","restriction":"String"}],"args_string":"(original_message : String)","args_html":"(original_message : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":142,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L142"},"def":{"name":"new","args":[{"name":"original_message","external_name":"original_message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(original_message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"avram/Avram/Polymorphic","path":"Avram/Polymorphic.html","kind":"module","full_name":"Avram::Polymorphic","name":"Polymorphic","abstract":false,"locations":[{"filename":"src/avram/polymorphic.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/polymorphic.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Helpers for defining polymorphic associations","summary":"<p>Helpers for defining polymorphic associations</p>","macros":[{"html_id":"polymorphic(polymorphic_name,associations,optional=false)-macro","name":"polymorphic","doc":"# Save a comment for this video\nvideo = VideoQuery.first\nComment::SaveOperation.create!(video_id: video.id)\n```","summary":"<h1><a id=\"save-a-comment-for-this-video-video-video-query.first-commentsave-operation.createvideo-id-video.id\" class=\"anchor\" href=\"#save-a-comment-for-this-video-video-video-query.first-commentsave-operation.createvideo-id-video.id\">  <svg class=\"octicon-link\" aria-hidden=\"true\">\n    <use href=\"#octicon-link\"/>\n  </svg>\n</a>Save a comment for this video video = VideoQuery.first Comment::SaveOperation.create!(video_id: video.id) ```</h1>","abstract":false,"args":[{"name":"polymorphic_name","external_name":"polymorphic_name","restriction":""},{"name":"associations","external_name":"associations","restriction":""},{"name":"optional","default_value":"false","external_name":"optional","restriction":""}],"args_string":"(polymorphic_name, associations, optional = false)","args_html":"(polymorphic_name, associations, optional = <span class=\"n\">false</span>)","location":{"filename":"src/avram/polymorphic.cr","line_number":104,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/polymorphic.cr#L104"},"def":{"name":"polymorphic","args":[{"name":"polymorphic_name","external_name":"polymorphic_name","restriction":""},{"name":"associations","external_name":"associations","restriction":""},{"name":"optional","default_value":"false","external_name":"optional","restriction":""}],"visibility":"Public","body":"    \n{% polymorphic_name = polymorphic_name.id %}\n\n    def \n{{ polymorphic_name }}\n\n      \nensure_\n{{ polymorphic_name }}\n_belongs_to_are_nilable!\n\n      \n# Generates something like: post || video\n\n      \n{{ (associations.map(&.id).join(\" || \")).id }}\n{% if !optional %} || Avram::Polymorphic.raise_missing_polymorphic(:{{ polymorphic_name }}, self){% end %}\n\n    \nend\n\n    def \n{{ polymorphic_name }}\n!\n      \nensure_\n{{ polymorphic_name }}\n_belongs_to_are_nilable!\n\n      \n# Generates something like: post! || video!\n\n      \n{% associations_with_a_bang = associations.map(&.id).map do |assoc|\n  \"#{assoc}!\"\nend %}\n\n      \n{{ (associations_with_a_bang.join(\" || \")).id }}\n{% if !optional %} || Avram::Polymorphic.raise_missing_polymorphic(:{{ polymorphic_name }}, self){% end %}\n\n    \nend\n\n    private def \nensure_\n{{ polymorphic_name }}\n_belongs_to_are_nilable! : Nil\n      if should_check_polymorphism_at_runtime?\n        \n{% associations_to_check = associations.map(&.id).map do |assoc|\n  \"#{assoc}.as(Nil)\"\nend %}\n\n        \n{{ (associations_to_check.join(\" || \")).id }}\n \n# Ensure polymorphic associations are nilable\n\n      \nend\n    \nend\n\n    \n# This is a bit of a hack to get around Crystal's smart compiler :)\n\n    \n# In the ensure_\n{assoc}_belongs_to_are_nilable! we need to check that the\n\n    \n# compiler *can* cast to nil, but we don't want to *actually* check it at\n\n    \n# runtime. The problem is that we can't do `if false` because Crystal realizes\n\n    \n# That will never match and so doesn't even check the `as(Nil)`\n\n    \n# We have to trick it by extracting the false to a method. That way\n\n    \n# Crystal doesn't realize it is always 'false' and will still check\n\n    \n# That the types can be cast to Nil at compile, without actually casting it\n\n    \n# at runtime.\n\n    private def should_check_polymorphism_at_runtime? : Bool\n      false\n    \nend\n\n    macro finished\n      class SaveOperation\n        \n# These validations must be run after all of the `before_save`\n\n        \n# in case anyone sets their polymorphic association in a callback.\n\n        \n# These are ran in the SaveOperation#valid? method\n\n        default_validations do\n          \n{% list_of_foreign_keys = associations.map(&.id).map do |assoc|\n  \"#{assoc.id}_id\".id\nend %}\n\n\n          \n# TODO: Needs to actually get the foreign key from the ASSOCIATIONS constant\n\n          \n{% if optional %}\n            validate_at_most_one_filled {{ (list_of_foreign_keys.map(&.id).join(\", \")).id }}\n          {% else %}\n            validate_exactly_one_filled {{ (list_of_foreign_keys.map(&.id).join(\", \")).id }},\n              message: \"at least one '{{ polymorphic_name.id }}' must be filled\"\n          {% end %}\n\n        \nend\n      \nend\n\n      class BaseQuery\n        def preload_\n{{ polymorphic_name.id }}\n\n          \n{% for association in associations %}\n             preload_{{ association.id }}\n          {% end %}\n\n        \nend\n      \nend\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/PrimaryKeyMethods","path":"Avram/PrimaryKeyMethods.html","kind":"module","full_name":"Avram::PrimaryKeyMethods","name":"PrimaryKeyMethods","abstract":false,"locations":[{"filename":"src/avram/primary_key_methods.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_methods.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"==(other:self)-instance-method","name":"==","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self"}],"args_string":"(other : self)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/avram/primary_key_methods.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_methods.cr#L2"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"self"}],"visibility":"Public","body":"if id == other.id\nelse\n  return false\nend\n\nif model_name == other.model_name\nelse\n  return false\nend\n\ntrue\n"},"external_var":false},{"html_id":"delete-instance-method","name":"delete","abstract":false,"location":{"filename":"src/avram/primary_key_methods.cr","line_number":75,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_methods.cr#L75"},"def":{"name":"delete","visibility":"Public","body":"self.class.write_database.exec(\"DELETE FROM #{@@table_name} WHERE #{primary_key_name} = #{escape_primary_key(id)}\")"},"external_var":false},{"html_id":"primary_key_name:Symbol|Nil-instance-method","name":"primary_key_name","abstract":false,"location":{"filename":"src/avram/primary_key_methods.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_methods.cr#L4"},"def":{"name":"primary_key_name","return_type":"Symbol | ::Nil","visibility":"Public","body":"self.class.primary_key_name"},"external_var":false},{"html_id":"reload:self-instance-method","name":"reload","doc":"Reload the model with the latest information from the database\n\nThis method will return a new model instance with the\nlatest data from the database. Note that this does\n**not** change the original instance, so you may need to\nassign the result to a variable or work directly with the return value.\n\nExample:\n\n```\nuser = SaveUser.create!(name: \"Original\")\nSaveUser.update!(user, name: \"Updated\")\n\n# Will be \"Original\"\nuser.name\n# Will return \"Updated\"\nuser.reload.name # Will be \"Updated\"\n# Will still be \"Original\" since the 'user' is the same model instance.\nuser.name\n\nInstead re-assign the variable. Now 'name' will return \"Updated\" since\n'user' references the reloaded model.\nuser = user.reload\nuser.name\n```","summary":"<p>Reload the model with the latest information from the database</p>","abstract":false,"location":{"filename":"src/avram/primary_key_methods.cr","line_number":33,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_methods.cr#L33"},"def":{"name":"reload","return_type":"self","visibility":"Public","body":"base_query_class.find(id)"},"external_var":false},{"html_id":"reload(&):self-instance-method","name":"reload","doc":"Same as `reload` but allows passing a block to customize the query.\n\nThis is almost always used to preload additional relationships.\n\nExample:\n\n```\nuser = SaveUser.create(params)\n\n# We want to display the list of articles the user has commented on, so let's #\n# preload them to avoid N+1 performance issues\nuser = user.reload(&.preload_comments(CommentQuery.new.preload_article))\n\n# Now we can safely get all the comment authors\nuser.comments.map(&.article)\n```\n\nNote that the yielded query is the `BaseQuery` so it will not have any\nmethods defined on your customized query. This is usually fine since\ntypically reload only uses preloads.\n\nIf you do need to do something more custom you can manually reload:\n\n```\nuser = SaveUser.create!(name: \"Helen\")\nUserQuery.new.some_custom_preload_method.find(user.id)\n```","summary":"<p>Same as <code><a href=\"../Avram/PrimaryKeyMethods.html#reload%3Aself-instance-method\">#reload</a></code> but allows passing a block to customize the query.</p>","abstract":false,"location":{"filename":"src/avram/primary_key_methods.cr","line_number":64,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_methods.cr#L64"},"def":{"name":"reload","yields":1,"block_arity":1,"return_type":"self","visibility":"Public","body":"query = yield base_query_class.new\nquery.find(id)\n"},"external_var":false},{"html_id":"to_param:String-instance-method","name":"to_param","doc":"For integration with Lucky\nThis allows an `Avram::Model` to be passed into a Lucky::Action to create a url/path","summary":"<p>For integration with Lucky This allows an <code><a href=\"../Avram/Model.html\">Avram::Model</a></code> to be passed into a Lucky::Action to create a url/path</p>","abstract":false,"location":{"filename":"src/avram/primary_key_methods.cr","line_number":71,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_methods.cr#L71"},"def":{"name":"to_param","return_type":"String","visibility":"Public","body":"id.to_s"},"external_var":false}]},{"html_id":"avram/Avram/PrimaryKeyQueryable","path":"Avram/PrimaryKeyQueryable.html","kind":"module","full_name":"Avram::PrimaryKeyQueryable(T)","name":"PrimaryKeyQueryable","abstract":false,"locations":[{"filename":"src/avram/primary_key_queryable.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_queryable.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"}},{"html_id":"avram/Avram/PrimaryKeyType","path":"Avram/PrimaryKeyType.html","kind":"enum","full_name":"Avram::PrimaryKeyType","name":"PrimaryKeyType","abstract":false,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/primary_key_type.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_type.cr#L1"}],"repository_name":"avram","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Serial","name":"Serial","value":"0"},{"id":"UUID","name":"UUID","value":"1"},{"id":"String","name":"String","value":"2"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"serial?-instance-method","name":"serial?","doc":"Returns `true` if this enum value equals `Serial`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/PrimaryKeyType.html#Serial\">Serial</a></code></p>","abstract":false,"location":{"filename":"src/avram/primary_key_type.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_type.cr#L2"},"def":{"name":"serial?","visibility":"Public","body":"self == Serial"},"external_var":false},{"html_id":"string?-instance-method","name":"string?","doc":"Returns `true` if this enum value equals `String`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/PrimaryKeyType.html#String\">String</a></code></p>","abstract":false,"location":{"filename":"src/avram/primary_key_type.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_type.cr#L4"},"def":{"name":"string?","visibility":"Public","body":"self == String"},"external_var":false},{"html_id":"uuid?-instance-method","name":"uuid?","doc":"Returns `true` if this enum value equals `UUID`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/PrimaryKeyType.html#UUID\">UUID</a></code></p>","abstract":false,"location":{"filename":"src/avram/primary_key_type.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/primary_key_type.cr#L3"},"def":{"name":"uuid?","visibility":"Public","body":"self == UUID"},"external_var":false}]},{"html_id":"avram/Avram/Queryable","path":"Avram/Queryable.html","kind":"module","full_name":"Avram::Queryable(T)","name":"Queryable","abstract":false,"ancestors":[{"html_id":"avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"src/avram/queryable.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"add_preload(&block:Array(T)->Nil)-instance-method","name":"add_preload","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":277,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L277"},"def":{"name":"add_preload","yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Array(T) -> Nil)"},"visibility":"Public","body":"@preloads << block"},"external_var":false},{"html_id":"any?:Bool-instance-method","name":"any?","doc":"Returns `true` if at least one of the collection's members is truthy.\n\n```\n[nil, true, 99].any? # => true\n[nil, false].any?    # => false\n([] of Int32).any?   # => false\n```\n\n* `#present?` does not consider truthiness of elements.\n* `#any?(&)` and `#any(pattern)` allow custom conditions.\n\nNOTE: `#any?` usually has the same semantics as `#present?`. They only\ndiffer if the element type can be falsey (i.e. `T <= Nil || T <= Pointer || T <= Bool`).\nIt's typically advised to prefer `#present?` unless these specific truthiness\nsemantics are required.","summary":"<p>Returns <code>true</code> if at least one of the collection's members is truthy.</p>","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":227,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L227"},"def":{"name":"any?","return_type":"Bool","visibility":"Public","body":"cache_store.fetch(cache_key(:\"any?\"), as: Bool) do\n  queryable = clone\n  new_query = (queryable.query.limit(1)).select(\"1 AS one\")\n  results = read_database.query_one?(new_query.statement, args: new_query.args, queryable: schema_class.name, as: (Int32 | Int64))\n  !results.nil?\nend"},"external_var":false},{"html_id":"cache_key(operation:Symbol):String-instance-method","name":"cache_key","abstract":false,"args":[{"name":"operation","external_name":"operation","restriction":"Symbol"}],"args_string":"(operation : Symbol) : String","args_html":"(operation : Symbol) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/queryable.cr","line_number":289,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L289"},"def":{"name":"cache_key","args":[{"name":"operation","external_name":"operation","restriction":"Symbol"}],"return_type":"String","visibility":"Public","body":"[cache_key, operation].join(':')"},"external_var":false},{"html_id":"cache_key:String-instance-method","name":"cache_key","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":285,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L285"},"def":{"name":"cache_key","return_type":"String","visibility":"Public","body":"[query.statement, query.args].join(':')"},"external_var":false},{"html_id":"cache_store-instance-method","name":"cache_store","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":281,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L281"},"def":{"name":"cache_store","visibility":"Public","body":"Fiber.current.query_cache"},"external_var":false},{"html_id":"delete:Int64-instance-method","name":"delete","doc":"Delete the records using the query's where clauses, or all records if no wheres are added.\n\nReturns the number of deleted records as `Int64`.\n\n```\n# DELETE FROM users WHERE age < 21\nUserQuery.new.age.lt(21).delete\n```","summary":"<p>Delete the records using the query's where clauses, or all records if no wheres are added.</p>","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":104,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L104"},"def":{"name":"delete","return_type":"Int64","visibility":"Public","body":"clone.delete!"},"external_var":false},{"html_id":"distinct:self-instance-method","name":"distinct","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":70,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L70"},"def":{"name":"distinct","return_type":"self","visibility":"Public","body":"clone.tap do |__arg0|\n  __arg0.query.distinct\nend"},"external_var":false},{"html_id":"distinct_on(&):self-instance-method","name":"distinct_on","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":86,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L86"},"def":{"name":"distinct_on","yields":1,"block_arity":1,"return_type":"self","visibility":"Public","body":"criteria = yield clone\ncriteria.private_distinct_on\n"},"external_var":false},{"html_id":"each(&)-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":269,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L269"},"def":{"name":"each","yields":1,"block_arity":1,"visibility":"Public","body":"results.each do |result|\n  yield result\nend"},"external_var":false},{"html_id":"exec_scalar(&)-instance-method","name":"exec_scalar","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":307,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L307"},"def":{"name":"exec_scalar","yields":1,"block_arity":1,"visibility":"Public","body":"new_query = yield query.clone\nread_database.scalar(new_query.statement, args: new_query.args, queryable: schema_class.name)\n"},"external_var":false},{"html_id":"first:T-instance-method","name":"first","doc":"Returns the first element in the collection. Raises `Enumerable::EmptyError`\nif the collection is empty.\n\n```\n([1, 2, 3]).first   # => 1\n([] of Int32).first # raises Enumerable::EmptyError\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":210,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L210"},"def":{"name":"first","return_type":"T","visibility":"Public","body":"first? || (raise(RecordNotFoundError.new(model: table_name, query: :first)))"},"external_var":false},{"html_id":"first?:T|Nil-instance-method","name":"first?","doc":"Returns the first element in the collection.\nWhen the collection is empty, returns `nil`.\n\n```\n([1, 2, 3]).first?   # => 1\n([] of Int32).first? # => nil\n```","summary":"<p>Returns the first element in the collection.</p>","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":203,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L203"},"def":{"name":"first?","return_type":"T | ::Nil","visibility":"Public","body":"(with_ordered_query.limit(1)).results.first?"},"external_var":false},{"html_id":"for_update:self-instance-method","name":"for_update","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":199,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L199"},"def":{"name":"for_update","return_type":"self","visibility":"Public","body":"clone.tap do |__arg19|\n  __arg19.query.for_update\nend"},"external_var":false},{"html_id":"group(&):self-instance-method","name":"group","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":182,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L182"},"def":{"name":"group","yields":1,"block_arity":1,"return_type":"self","visibility":"Public","body":"criteria = yield clone\ncriteria.private_group\n"},"external_var":false},{"html_id":"group_count:Hash(Array(PGValue),Int64)-instance-method","name":"group_count","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":256,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L256"},"def":{"name":"group_count","return_type":"Hash(Array(PGValue), Int64)","visibility":"Public","body":"(read_database.query_all((query.select_direct(query.groups + [\"COUNT(*)\"])).statement, args: query.args, queryable: schema_class.name) do |rs|\n  {query.groups.map do\n    rs.read(PGValue)\n  end, rs.read(Int64)}\nend).to_h"},"external_var":false},{"html_id":"join(join_clause:Avram::Join::SqlClause):self-instance-method","name":"join","abstract":false,"args":[{"name":"join_clause","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"args_string":"(join_clause : Avram::Join::SqlClause) : self","args_html":"(join_clause : <a href=\"../Avram/Join/SqlClause.html\">Avram::Join::SqlClause</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":123,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L123"},"def":{"name":"join","args":[{"name":"join_clause","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"return_type":"self","visibility":"Public","body":"clone.tap do |__arg4|\n  __arg4.query.join(join_clause)\nend"},"external_var":false},{"html_id":"last:T-instance-method","name":"last","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":223,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L223"},"def":{"name":"last","return_type":"T","visibility":"Public","body":"last? || (raise(RecordNotFoundError.new(model: table_name, query: :last)))"},"external_var":false},{"html_id":"last?:T|Nil-instance-method","name":"last?","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":214,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L214"},"def":{"name":"last?","return_type":"T | ::Nil","visibility":"Public","body":"(with_ordered_query.clone.tap() do |__arg20|\n  __arg20.query.reverse_order\nend.limit(1)).results.first?"},"external_var":false},{"html_id":"limit(amount):self-instance-method","name":"limit","abstract":false,"args":[{"name":"amount","external_name":"amount","restriction":""}],"args_string":"(amount) : self","args_html":"(amount) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":191,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L191"},"def":{"name":"limit","args":[{"name":"amount","external_name":"amount","restriction":""}],"return_type":"self","visibility":"Public","body":"clone.tap do |__arg17|\n  __arg17.query.limit(amount)\nend"},"external_var":false},{"html_id":"merge_query(query_to_merge:Avram::QueryBuilder):self-instance-method","name":"merge_query","abstract":false,"args":[{"name":"query_to_merge","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"args_string":"(query_to_merge : Avram::QueryBuilder) : self","args_html":"(query_to_merge : <a href=\"../Avram/QueryBuilder.html\">Avram::QueryBuilder</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":156,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L156"},"def":{"name":"merge_query","args":[{"name":"query_to_merge","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"return_type":"self","visibility":"Public","body":"clone.tap do |__arg12|\n  __arg12.query.merge(query_to_merge)\nend"},"external_var":false},{"html_id":"none:self-instance-method","name":"none","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":187,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L187"},"def":{"name":"none","return_type":"self","visibility":"Public","body":"clone.tap do |__arg16|\n  __arg16.query.where(Avram::Where::Equal.new(\"1\", \"0\"))\nend"},"external_var":false},{"html_id":"none?:Bool-instance-method","name":"none?","doc":"Returns `true` if all of the elements of the collection are falsey.\n\n```\n[nil, false].none?       # => true\n[nil, false, true].none? # => false\n```\n\nIt's the opposite of `all?`.","summary":"<p>Returns <code>true</code> if all of the elements of the collection are falsey.</p>","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":236,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L236"},"def":{"name":"none?","return_type":"Bool","visibility":"Public","body":"!any?"},"external_var":false},{"html_id":"offset(amount):self-instance-method","name":"offset","abstract":false,"args":[{"name":"amount","external_name":"amount","restriction":""}],"args_string":"(amount) : self","args_html":"(amount) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":195,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L195"},"def":{"name":"offset","args":[{"name":"amount","external_name":"amount","restriction":""}],"return_type":"self","visibility":"Public","body":"clone.tap do |__arg18|\n  __arg18.query.offset(amount)\nend"},"external_var":false},{"html_id":"or(&):self-instance-method","name":"or","doc":"Run the `or` block first to grab the last WHERE clause and set its\nconjunction to OR. Then call yield to set the next set of ORs","summary":"<p>Run the <code><a href=\"../Avram/Queryable.html#or%28%26%29%3Aself-instance-method\">#or</a></code> block first to grab the last WHERE clause and set its conjunction to OR.</p>","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":162,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L162"},"def":{"name":"or","yields":1,"block_arity":1,"return_type":"self","visibility":"Public","body":"query.or(&.itself)\nyield self\n"},"external_var":false},{"html_id":"order_by(column,direction,null_sorting:Avram::OrderBy::NullSorting=:default):self-instance-method","name":"order_by","abstract":false,"args":[{"name":"column","external_name":"column","restriction":""},{"name":"direction","external_name":"direction","restriction":""},{"name":"null_sorting","default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"args_string":"(column, direction, null_sorting : Avram::OrderBy::NullSorting = :default) : self","args_html":"(column, direction, null_sorting : <a href=\"../Avram/OrderBy/NullSorting.html\">Avram::OrderBy::NullSorting</a> = <span class=\"n\">:default</span>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":167,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L167"},"def":{"name":"order_by","args":[{"name":"column","external_name":"column","restriction":""},{"name":"direction","external_name":"direction","restriction":""},{"name":"null_sorting","default_value":":default","external_name":"null_sorting","restriction":"Avram::OrderBy::NullSorting"}],"return_type":"self","visibility":"Public","body":"begin\n  direction = Avram::OrderBy::Direction.parse(direction.to_s)\n  order_by(Avram::OrderBy.new(column, direction, null_sorting))\nrescue e : ArgumentError\n  raise(\"#{e.message}. Accepted values are: :asc, :desc\")\nend"},"external_var":false},{"html_id":"order_by(order:Avram::OrderByClause):self-instance-method","name":"order_by","abstract":false,"args":[{"name":"order","external_name":"order","restriction":"Avram::OrderByClause"}],"args_string":"(order : Avram::OrderByClause) : self","args_html":"(order : <a href=\"../Avram/OrderByClause.html\">Avram::OrderByClause</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":174,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L174"},"def":{"name":"order_by","args":[{"name":"order","external_name":"order","restriction":"Avram::OrderByClause"}],"return_type":"self","visibility":"Public","body":"clone.tap do |__arg14|\n  __arg14.query.order_by(order)\nend"},"external_var":false},{"html_id":"preloads-instance-method","name":"preloads","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":275,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L275"},"def":{"name":"preloads","visibility":"Public","body":"@preloads"},"external_var":false},{"html_id":"primary_key_name(*args,**options)-instance-method","name":"primary_key_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/queryable.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L10"},"def":{"name":"primary_key_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.primary_key_name(*args, **options)"},"external_var":false},{"html_id":"primary_key_name(*args,**options,&)-instance-method","name":"primary_key_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/queryable.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L10"},"def":{"name":"primary_key_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.primary_key_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"query:Avram::QueryBuilder-instance-method","name":"query","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L4"},"def":{"name":"query","return_type":"Avram::QueryBuilder","visibility":"Public","body":"if (__temp_195 = @query).nil?\n  @query = (Avram::QueryBuilder.new(table: table_name).select(schema_class.column_names))\nelse\n  __temp_195\nend"},"external_var":false},{"html_id":"query=(query:Avram::QueryBuilder)-instance-method","name":"query=","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"Avram::QueryBuilder"}],"args_string":"(query : Avram::QueryBuilder)","args_html":"(query : <a href=\"../Avram/QueryBuilder.html\">Avram::QueryBuilder</a>)","location":{"filename":"src/avram/queryable.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L4"},"def":{"name":"query=","args":[{"name":"query","external_name":"query","restriction":"Avram::QueryBuilder"}],"visibility":"Public","body":"@query = query"},"external_var":false},{"html_id":"random_order:self-instance-method","name":"random_order","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":178,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L178"},"def":{"name":"random_order","return_type":"self","visibility":"Public","body":"clone.tap do |__arg15|\n  __arg15.query.random_order\nend"},"external_var":false},{"html_id":"read_database(*args,**options)-instance-method","name":"read_database","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/queryable.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L10"},"def":{"name":"read_database","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.read_database(*args, **options)"},"external_var":false},{"html_id":"read_database(*args,**options,&)-instance-method","name":"read_database","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/queryable.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L10"},"def":{"name":"read_database","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.read_database(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"reset_limit:self-instance-method","name":"reset_limit","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":78,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L78"},"def":{"name":"reset_limit","return_type":"self","visibility":"Public","body":"clone.tap do |__arg2|\n  __arg2.query.limit(nil)\nend"},"external_var":false},{"html_id":"reset_offset:self-instance-method","name":"reset_offset","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":82,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L82"},"def":{"name":"reset_offset","return_type":"self","visibility":"Public","body":"clone.tap do |__arg3|\n  __arg3.query.offset(nil)\nend"},"external_var":false},{"html_id":"reset_order:self-instance-method","name":"reset_order","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":74,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L74"},"def":{"name":"reset_order","return_type":"self","visibility":"Public","body":"clone.tap do |__arg1|\n  __arg1.query.reset_order\nend"},"external_var":false},{"html_id":"reset_where(&):self-instance-method","name":"reset_where","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":91,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L91"},"def":{"name":"reset_where","yields":1,"block_arity":1,"return_type":"self","visibility":"Public","body":"criteria = yield clone\ncriteria.private_reset_where\n"},"external_var":false},{"html_id":"results:Array(T)-instance-method","name":"results","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":293,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L293"},"def":{"name":"results","return_type":"Array(T)","visibility":"Public","body":"cache_store.fetch(cache_key, as: Array(T)) do\n  exec_query.tap do |records|\n    preloads.each(&.call(records))\n  end\nend"},"external_var":false},{"html_id":"schema_class:T.class-instance-method","name":"schema_class","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":66,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L66"},"def":{"name":"schema_class","return_type":"T.class","visibility":"Public","body":"T"},"external_var":false},{"html_id":"select_count:Int64-instance-method","name":"select_count","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":240,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L240"},"def":{"name":"select_count","return_type":"Int64","visibility":"Public","body":"cache_store.fetch(cache_key(:select_count), as: Int64) do\n  begin\n    table = \"(#{query.statement}) AS temp\"\n    new_query = (Avram::QueryBuilder.new(table)).select_count\n    result = read_database.scalar(new_query.statement, args: query.args, queryable: schema_class.name)\n    result.as(Int64)\n  rescue e : DB::NoResultsError\n    0_i64\n  end\nend"},"external_var":false},{"html_id":"table_name(*args,**options)-instance-method","name":"table_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/queryable.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L10"},"def":{"name":"table_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.table_name(*args, **options)"},"external_var":false},{"html_id":"table_name(*args,**options,&)-instance-method","name":"table_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/queryable.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L10"},"def":{"name":"table_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.table_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"to_prepared_sql-instance-method","name":"to_prepared_sql","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":344,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L344"},"def":{"name":"to_prepared_sql","visibility":"Public","body":"query.to_prepared_sql"},"external_var":false},{"html_id":"to_sql-instance-method","name":"to_sql","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":340,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L340"},"def":{"name":"to_sql","visibility":"Public","body":"query.to_sql"},"external_var":false},{"html_id":"update:Int64-instance-method","name":"update","doc":"Update the records using the query's where clauses, or all records if no wheres are added.\n\nReturns the number of records updated as `Int64`.\n\n```\n# Update all comments with the word \"spam\" as spam\nCommentQuery.new.body.ilike(\"spam\").update(spam: true)\n```","summary":"<p>Update the records using the query's where clauses, or all records if no wheres are added.</p>","abstract":true,"location":{"filename":"src/avram/queryable.cr","line_number":121,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L121"},"def":{"name":"update","return_type":"Int64","visibility":"Public","body":""},"external_var":false},{"html_id":"where(column:Symbol,value):self-instance-method","name":"where","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"Symbol"},{"name":"value","external_name":"value","restriction":""}],"args_string":"(column : Symbol, value) : self","args_html":"(column : Symbol, value) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":127,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L127"},"def":{"name":"where","args":[{"name":"column","external_name":"column","restriction":"Symbol"},{"name":"value","external_name":"value","restriction":""}],"return_type":"self","visibility":"Public","body":"clone.tap do |__arg5|\n  __arg5.query.where(Avram::Where::Equal.new(column, value.to_s))\nend"},"external_var":false},{"html_id":"where(sql_clause:Avram::Where::SqlClause):self-instance-method","name":"where","abstract":false,"args":[{"name":"sql_clause","external_name":"sql_clause","restriction":"Avram::Where::SqlClause"}],"args_string":"(sql_clause : Avram::Where::SqlClause) : self","args_html":"(sql_clause : <a href=\"../Avram/Where/SqlClause.html\">Avram::Where::SqlClause</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":139,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L139"},"def":{"name":"where","args":[{"name":"sql_clause","external_name":"sql_clause","restriction":"Avram::Where::SqlClause"}],"return_type":"self","visibility":"Public","body":"clone.tap do |__arg7|\n  __arg7.query.where(sql_clause)\nend"},"external_var":false},{"html_id":"where(statement:String,*bind_vars):self-instance-method","name":"where","abstract":false,"args":[{"name":"statement","external_name":"statement","restriction":"String"},{"name":"bind_vars","external_name":"bind_vars","restriction":""}],"args_string":"(statement : String, *bind_vars) : self","args_html":"(statement : <a href=\"../String.html\">String</a>, *bind_vars) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":131,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L131"},"def":{"name":"where","args":[{"name":"statement","external_name":"statement","restriction":"String"},{"name":"bind_vars","external_name":"bind_vars","restriction":""}],"splat_index":1,"return_type":"self","visibility":"Public","body":"where(statement, args: bind_vars.to_a)"},"external_var":false},{"html_id":"where(statement:String,*,argsbind_vars:Array):self-instance-method","name":"where","abstract":false,"args":[{"name":"statement","external_name":"statement","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"bind_vars","external_name":"args","restriction":"Array"}],"args_string":"(statement : String, *, args bind_vars : Array) : self","args_html":"(statement : <a href=\"../String.html\">String</a>, *, args bind_vars : <a href=\"../Array.html\">Array</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/queryable.cr","line_number":135,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L135"},"def":{"name":"where","args":[{"name":"statement","external_name":"statement","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"bind_vars","external_name":"args","restriction":"Array"}],"splat_index":1,"return_type":"self","visibility":"Public","body":"clone.tap do |__arg6|\n  __arg6.query.where(Avram::Where::Raw.new(statement, args: bind_vars))\nend"},"external_var":false},{"html_id":"where(&):self-instance-method","name":"where","abstract":false,"location":{"filename":"src/avram/queryable.cr","line_number":143,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L143"},"def":{"name":"where","yields":1,"block_arity":1,"return_type":"self","visibility":"Public","body":"cloned = clone.tap do |__arg8|\n  __arg8.query.where(Avram::Where::PrecedenceStart.new)\nend\nresult = yield cloned\n\n\nif result.query.wheres.last.is_a?(Avram::Where::PrecedenceStart)\n  result.clone.tap do |__arg9|\n    __arg9.query.remove_last_where\n  end\nelse\n  cloned = result.clone.tap do |__arg10|\n    __arg10.query.clear_conjunction\n  end\n  cloned.clone.tap do |__arg11|\n    __arg11.query.where(Avram::Where::PrecedenceEnd.new)\n  end\nend\n"},"external_var":false},{"html_id":"write_database(*args,**options)-instance-method","name":"write_database","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/queryable.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L10"},"def":{"name":"write_database","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.write_database(*args, **options)"},"external_var":false},{"html_id":"write_database(*args,**options,&)-instance-method","name":"write_database","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/queryable.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L10"},"def":{"name":"write_database","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.write_database(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false}],"types":[{"html_id":"avram/Avram/Queryable/PGValue","path":"Avram/Queryable/PGValue.html","kind":"alias","full_name":"Avram::Queryable::PGValue","name":"PGValue","abstract":false,"locations":[{"filename":"src/avram/queryable.cr","line_number":254,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/queryable.cr#L254"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Bool | Float32 | Float64 | Int16 | Int32 | Int64 | PG::Numeric | String | Time | UUID | Nil)","aliased_html":"<a href=\"../../Bool.html\">Bool</a> | Float32 | <a href=\"../../Float64.html\">Float64</a> | <a href=\"../../Int16.html\">Int16</a> | <a href=\"../../Int32.html\">Int32</a> | <a href=\"../../Int64.html\">Int64</a> | PG::Numeric | <a href=\"../../String.html\">String</a> | <a href=\"../../Time.html\">Time</a> | <a href=\"../../UUID.html\">UUID</a> | <a href=\"../../Nil.html\">Nil</a>","const":false,"namespace":{"html_id":"avram/Avram/Queryable","kind":"module","full_name":"Avram::Queryable(T)","name":"Queryable"},"doc":"Remove when PG::PGValue matches rs.read possibilities","summary":"<p>Remove when PG::PGValue matches rs.read possibilities</p>"}]},{"html_id":"avram/Avram/QueryBuilder","path":"Avram/QueryBuilder.html","kind":"class","full_name":"Avram::QueryBuilder","name":"QueryBuilder","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/query_builder.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"constructors":[{"html_id":"new(table:String|Symbol)-class-method","name":"new","abstract":false,"args":[{"name":"table","external_name":"table","restriction":"::String | ::Symbol"}],"args_string":"(table : String | Symbol)","args_html":"(table : <a href=\"../String.html\">String</a> | Symbol)","location":{"filename":"src/avram/query_builder.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L19"},"def":{"name":"new","args":[{"name":"table","external_name":"table","restriction":"::String | ::Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(table)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"args:Array(String|Array(String)|Array(Int32))-instance-method","name":"args","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":115,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L115"},"def":{"name":"args","return_type":"Array(String | Array(String) | Array(Int32))","visibility":"Public","body":"prepared_statement_values"},"external_var":false},{"html_id":"args_for_update(params)-instance-method","name":"args_for_update","abstract":false,"args":[{"name":"params","external_name":"params","restriction":""}],"args_string":"(params)","args_html":"(params)","location":{"filename":"src/avram/query_builder.cr","line_number":86,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L86"},"def":{"name":"args_for_update","args":[{"name":"params","external_name":"params","restriction":""}],"visibility":"Public","body":"(param_values(params)) + prepared_statement_values"},"external_var":false},{"html_id":"clear_conjunction-instance-method","name":"clear_conjunction","doc":"Clears the last conjunction\ne.g. users.age = $1 AND -> users.age = $1","summary":"<p>Clears the last conjunction e.g.</p>","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":348,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L348"},"def":{"name":"clear_conjunction","visibility":"Public","body":"if @wheres.empty?\nelse\n  @wheres.last.conjunction = Avram::Where::Conjunction::None\nend"},"external_var":false},{"html_id":"clone-instance-method","name":"clone","doc":"Returns a copy of `self` with all instance variables cloned.","summary":"<p>Returns a copy of <code>self</code> with all instance variables cloned.</p>","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L2"},"def":{"name":"clone","visibility":"Public","body":"{% if @type < ::Reference && !@type.instance_vars.map(&.type).all? do |t|\n  ((((t == ::Bool) || (t == ::Char)) || (t == ::Symbol)) || (t == ::String)) || t < ::Number::Primitive\nend %}\n        exec_recursive_clone do |hash|\n          clone = {{ @type }}.allocate\n          hash[object_id] = clone.object_id\n          clone.initialize_copy(self)\n          ::GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n          clone\n        end\n      {% else %}\n        clone = {{ @type }}.allocate\n        clone.initialize_copy(self)\n        ::GC.add_finalizer(clone) if clone.responds_to?(:finalize)\n        clone\n      {% end %}"},"external_var":false},{"html_id":"delete:self-instance-method","name":"delete","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":123,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L123"},"def":{"name":"delete","return_type":"self","visibility":"Public","body":"@delete = true\nself\n"},"external_var":false},{"html_id":"distinct:self-instance-method","name":"distinct","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":128,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L128"},"def":{"name":"distinct","return_type":"self","visibility":"Public","body":"@distinct = true\nself\n"},"external_var":false},{"html_id":"distinct?:Bool-instance-method","name":"distinct?","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":138,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L138"},"def":{"name":"distinct?","return_type":"Bool","visibility":"Public","body":"@distinct || has_distinct_on?"},"external_var":false},{"html_id":"distinct_on(column:ColumnName):self-instance-method","name":"distinct_on","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName) : self","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":133,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L133"},"def":{"name":"distinct_on","args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"return_type":"self","visibility":"Public","body":"@distinct_on = column\nself\n"},"external_var":false},{"html_id":"distinct_on:ColumnName|Nil-instance-method","name":"distinct_on","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L6"},"def":{"name":"distinct_on","return_type":"ColumnName | Nil","visibility":"Public","body":"@distinct_on"},"external_var":false},{"html_id":"for_update:self-instance-method","name":"for_update","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":162,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L162"},"def":{"name":"for_update","return_type":"self","visibility":"Public","body":"@for_update = true\nself\n"},"external_var":false},{"html_id":"group_by(column:ColumnName):self-instance-method","name":"group_by","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName) : self","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":203,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L203"},"def":{"name":"group_by","args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"return_type":"self","visibility":"Public","body":"@groups << column\nself\n"},"external_var":false},{"html_id":"group_sql:String|Nil-instance-method","name":"group_sql","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":208,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L208"},"def":{"name":"group_sql","return_type":"String | ::Nil","visibility":"Public","body":"if grouped?\n  \"GROUP BY \" + (groups.join(\", \"))\nend"},"external_var":false},{"html_id":"grouped?:Bool-instance-method","name":"grouped?","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":218,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L218"},"def":{"name":"grouped?","return_type":"Bool","visibility":"Public","body":"!@groups.empty?"},"external_var":false},{"html_id":"groups:Array(ColumnName)-instance-method","name":"groups","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":214,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L214"},"def":{"name":"groups","return_type":"Array(ColumnName)","visibility":"Public","body":"@groups"},"external_var":false},{"html_id":"has_distinct_on?:Bool-instance-method","name":"has_distinct_on?","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":142,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L142"},"def":{"name":"has_distinct_on?","return_type":"Bool","visibility":"Public","body":"!!@distinct_on"},"external_var":false},{"html_id":"join(join_clause:Avram::Join::SqlClause):self-instance-method","name":"join","abstract":false,"args":[{"name":"join_clause","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"args_string":"(join_clause : Avram::Join::SqlClause) : self","args_html":"(join_clause : <a href=\"../Avram/Join/SqlClause.html\">Avram::Join::SqlClause</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":316,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L316"},"def":{"name":"join","args":[{"name":"join_clause","external_name":"join_clause","restriction":"Avram::Join::SqlClause"}],"return_type":"self","visibility":"Public","body":"if (join_clause.to != table) && @joins.none? do |join|\n  join.to == join_clause.to\nend\n  @joins << join_clause\nend\nself\n"},"external_var":false},{"html_id":"joins:Array(Avram::Join::SqlClause)-instance-method","name":"joins","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":323,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L323"},"def":{"name":"joins","return_type":"Array(Avram::Join::SqlClause)","visibility":"Public","body":"@joins.uniq(&.to_sql)"},"external_var":false},{"html_id":"limit(limit:Int32|Nil):self-instance-method","name":"limit","abstract":false,"args":[{"name":"limit","external_name":"limit","restriction":"Int32 | ::Nil"}],"args_string":"(limit : Int32 | Nil) : self","args_html":"(limit : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":150,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L150"},"def":{"name":"limit","args":[{"name":"limit","external_name":"limit","restriction":"Int32 | ::Nil"}],"return_type":"self","visibility":"Public","body":"@limit = limit\nself\n"},"external_var":false},{"html_id":"limit:Int32|Nil-instance-method","name":"limit","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":146,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L146"},"def":{"name":"limit","return_type":"Int32 | ::Nil","visibility":"Public","body":"@limit"},"external_var":false},{"html_id":"merge(query_to_merge:Avram::QueryBuilder)-instance-method","name":"merge","doc":"Merges the wheres, joins, and orders from the passed in query","summary":"<p>Merges the wheres, joins, and orders from the passed in query</p>","abstract":false,"args":[{"name":"query_to_merge","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"args_string":"(query_to_merge : Avram::QueryBuilder)","args_html":"(query_to_merge : <a href=\"../Avram/QueryBuilder.html\">Avram::QueryBuilder</a>)","location":{"filename":"src/avram/query_builder.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L40"},"def":{"name":"merge","args":[{"name":"query_to_merge","external_name":"query_to_merge","restriction":"Avram::QueryBuilder"}],"visibility":"Public","body":"query_to_merge.wheres.each do |where|\n  where(where)\nend\n\nquery_to_merge.joins.each do |join|\n  join(join)\nend\n\nquery_to_merge.orders.each do |order|\n  order_by(order)\nend\n\nquery_to_merge.groups.each do |group|\n  group_by(group)\nend\n"},"external_var":false},{"html_id":"offset(offset:Int32|Nil):self-instance-method","name":"offset","abstract":false,"args":[{"name":"offset","external_name":"offset","restriction":"Int32 | ::Nil"}],"args_string":"(offset : Int32 | Nil) : self","args_html":"(offset : <a href=\"../Int32.html\">Int32</a> | <a href=\"../Nil.html\">Nil</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":158,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L158"},"def":{"name":"offset","args":[{"name":"offset","external_name":"offset","restriction":"Int32 | ::Nil"}],"return_type":"self","visibility":"Public","body":"@offset = offset\nself\n"},"external_var":false},{"html_id":"offset:Int32|Nil-instance-method","name":"offset","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":154,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L154"},"def":{"name":"offset","return_type":"Int32 | ::Nil","visibility":"Public","body":"@offset"},"external_var":false},{"html_id":"or(&block:Avram::QueryBuilder->Avram::QueryBuilder):self-instance-method","name":"or","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":336,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L336"},"def":{"name":"or","yields":1,"block_arity":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Avram::QueryBuilder -> Avram::QueryBuilder)"},"return_type":"self","visibility":"Public","body":"if @wheres.empty?\n  raise(Avram::InvalidQueryError.new(\"Cannot call `or` before calling a `where`\"))\nend\n\n@wheres.last.conjunction = Avram::Where::Conjunction::Or\n\nblock.call(self)\n"},"external_var":false},{"html_id":"order_by(order:OrderByClause):self-instance-method","name":"order_by","abstract":false,"args":[{"name":"order","external_name":"order","restriction":"OrderByClause"}],"args_string":"(order : OrderByClause) : self","args_html":"(order : <a href=\"../Avram/OrderByClause.html\">OrderByClause</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":167,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L167"},"def":{"name":"order_by","args":[{"name":"order","external_name":"order","restriction":"OrderByClause"}],"return_type":"self","visibility":"Public","body":"if ordered_randomly?\n  reset_order\nend\n@orders << order\nself\n"},"external_var":false},{"html_id":"order_sql:String|Nil-instance-method","name":"order_sql","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":193,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L193"},"def":{"name":"order_sql","return_type":"String | ::Nil","visibility":"Public","body":"if ordered?\n  \"ORDER BY \" + (orders.join(\", \", &.prepare))\nend"},"external_var":false},{"html_id":"ordered?:Bool-instance-method","name":"ordered?","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":285,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L285"},"def":{"name":"ordered?","return_type":"Bool","visibility":"Public","body":"!@orders.empty?"},"external_var":false},{"html_id":"ordered_randomly?:Bool-instance-method","name":"ordered_randomly?","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":289,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L289"},"def":{"name":"ordered_randomly?","return_type":"Bool","visibility":"Public","body":"ordered? && @orders.first.is_a?(Avram::OrderByRandom)"},"external_var":false},{"html_id":"orders:Array(Avram::OrderByClause)-instance-method","name":"orders","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":199,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L199"},"def":{"name":"orders","return_type":"Array(Avram::OrderByClause)","visibility":"Public","body":"@orders.uniq!(&.column)"},"external_var":false},{"html_id":"random_order:self-instance-method","name":"random_order","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":173,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L173"},"def":{"name":"random_order","return_type":"self","visibility":"Public","body":"reset_order\n@orders << Avram::OrderByRandom.new\nself\n"},"external_var":false},{"html_id":"remove_last_where-instance-method","name":"remove_last_where","doc":"Removes the last `Avram::Where` to be added","summary":"<p>Removes the last <code><a href=\"../Avram/Where.html\">Avram::Where</a></code> to be added</p>","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":353,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L353"},"def":{"name":"remove_last_where","visibility":"Public","body":"@wheres.pop"},"external_var":false},{"html_id":"reset_order:Array(Avram::OrderByClause)-instance-method","name":"reset_order","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":184,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L184"},"def":{"name":"reset_order","return_type":"Array(Avram::OrderByClause)","visibility":"Public","body":"@orders.clear"},"external_var":false},{"html_id":"reset_where(column:ColumnName):self-instance-method","name":"reset_where","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName) : self","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":179,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L179"},"def":{"name":"reset_where","args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"return_type":"self","visibility":"Public","body":"@wheres.reject! do |clause|\n  clause.is_a?(Avram::Where::SqlClause) && (clause.column.to_s == column.to_s)\nend\nself\n"},"external_var":false},{"html_id":"reverse_order:self-instance-method","name":"reverse_order","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":188,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L188"},"def":{"name":"reverse_order","return_type":"self","visibility":"Public","body":"if ordered_randomly?\nelse\n  @orders = @orders.map(&.reversed).reverse!\nend\nself\n"},"external_var":false},{"html_id":"select(selection:Array(ColumnName)):self-instance-method","name":"select","abstract":false,"args":[{"name":"selection","external_name":"selection","restriction":"Array(ColumnName)"}],"args_string":"(selection : Array(ColumnName)) : self","args_html":"(selection : <a href=\"../Array.html\">Array</a>(<a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>)) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":276,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L276"},"def":{"name":"select","args":[{"name":"selection","external_name":"selection","restriction":"Array(ColumnName)"}],"return_type":"self","visibility":"Public","body":"@selections = selection.join(\", \") do |column|\n  \"\\\"#{@table}\\\".\\\"#{column}\\\"\"\nend\nself\n"},"external_var":false},{"html_id":"select(selections:String):self-instance-method","name":"select","abstract":false,"args":[{"name":"selections","external_name":"selections","restriction":"String"}],"args_string":"(selections : String) : self","args_html":"(selections : <a href=\"../String.html\">String</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":281,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L281"},"def":{"name":"select","args":[{"name":"selections","external_name":"selections","restriction":"String"}],"return_type":"self","visibility":"Public","body":"@selections = selections\nself\n"},"external_var":false},{"html_id":"select_average(column:ColumnName):self-instance-method","name":"select_average","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName) : self","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":234,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L234"},"def":{"name":"select_average","args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"return_type":"self","visibility":"Public","body":"add_aggregate(\"AVG(#{column})\")"},"external_var":false},{"html_id":"select_count:self-instance-method","name":"select_count","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":222,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L222"},"def":{"name":"select_count","return_type":"self","visibility":"Public","body":"add_aggregate(\"COUNT(*)\")"},"external_var":false},{"html_id":"select_direct(selection:Array(ColumnName)):self-instance-method","name":"select_direct","abstract":false,"args":[{"name":"selection","external_name":"selection","restriction":"Array(ColumnName)"}],"args_string":"(selection : Array(ColumnName)) : self","args_html":"(selection : <a href=\"../Array.html\">Array</a>(<a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>)) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":271,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L271"},"def":{"name":"select_direct","args":[{"name":"selection","external_name":"selection","restriction":"Array(ColumnName)"}],"return_type":"self","visibility":"Public","body":"@selections = selection.join(\", \")\nself\n"},"external_var":false},{"html_id":"select_max(column:ColumnName):self-instance-method","name":"select_max","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName) : self","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":230,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L230"},"def":{"name":"select_max","args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"return_type":"self","visibility":"Public","body":"add_aggregate(\"MAX(#{column})\")"},"external_var":false},{"html_id":"select_min(column:ColumnName):self-instance-method","name":"select_min","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName) : self","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":226,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L226"},"def":{"name":"select_min","args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"return_type":"self","visibility":"Public","body":"add_aggregate(\"MIN(#{column})\")"},"external_var":false},{"html_id":"select_sum(column:ColumnName):self-instance-method","name":"select_sum","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"args_string":"(column : ColumnName) : self","args_html":"(column : <a href=\"../Avram/QueryBuilder/ColumnName.html\">ColumnName</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":238,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L238"},"def":{"name":"select_sum","args":[{"name":"column","external_name":"column","restriction":"ColumnName"}],"return_type":"self","visibility":"Public","body":"add_aggregate(\"SUM(#{column})\")"},"external_var":false},{"html_id":"selects:Array(String)-instance-method","name":"selects","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":265,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L265"},"def":{"name":"selects","return_type":"Array(String)","visibility":"Public","body":"(@selections.split(\", \")).map() do |__arg3|\n  (__arg3.split('.')).last\nend"},"external_var":false},{"html_id":"statement:String-instance-method","name":"statement","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":58,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L58"},"def":{"name":"statement","return_type":"String","visibility":"Public","body":"clone.statement!"},"external_var":false},{"html_id":"statement!:String-instance-method","name":"statement!","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":62,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L62"},"def":{"name":"statement!","return_type":"String","visibility":"Public","body":"join_sql([@delete ? delete_sql : select_sql] + sql_condition_clauses)"},"external_var":false},{"html_id":"statement_for_update(params,return_columnsreturning:Bool=true)-instance-method","name":"statement_for_update","abstract":false,"args":[{"name":"params","external_name":"params","restriction":""},{"name":"returning","default_value":"true","external_name":"return_columns","restriction":"Bool"}],"args_string":"(params, return_columns returning : Bool = true)","args_html":"(params, return_columns returning : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>)","location":{"filename":"src/avram/query_builder.cr","line_number":66,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L66"},"def":{"name":"statement_for_update","args":[{"name":"params","external_name":"params","restriction":""},{"name":"returning","default_value":"true","external_name":"return_columns","restriction":"Bool"}],"visibility":"Public","body":"clone.statement_for_update!(params, returning)"},"external_var":false},{"html_id":"statement_for_update!(params,return_columnsreturning:Bool=true)-instance-method","name":"statement_for_update!","doc":"Creates the SQL for updating. If any joins are present, it\nmoves the WHERE clause to a subquery allowing for joins","summary":"<p>Creates the SQL for updating.</p>","abstract":false,"args":[{"name":"params","external_name":"params","restriction":""},{"name":"returning","default_value":"true","external_name":"return_columns","restriction":"Bool"}],"args_string":"(params, return_columns returning : Bool = true)","args_html":"(params, return_columns returning : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>)","location":{"filename":"src/avram/query_builder.cr","line_number":72,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L72"},"def":{"name":"statement_for_update!","args":[{"name":"params","external_name":"params","restriction":""},{"name":"returning","default_value":"true","external_name":"return_columns","restriction":"Bool"}],"visibility":"Public","body":"sql = [\"UPDATE #{table}\", set_sql_clause(params)]\nif joins_sql.presence\n  sql = sql + [\"WHERE EXISTS\", \"(\", select_sql]\n  sql = sql + sql_condition_clauses\n  sql = sql + [\")\"]\nelse\n  sql = sql + sql_condition_clauses\nend\nif returning\n  sql = sql + [\"RETURNING #{@selections}\"]\nend\n\njoin_sql(sql)\n"},"external_var":false},{"html_id":"table:TableName-instance-method","name":"table","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L5"},"def":{"name":"table","return_type":"TableName","visibility":"Public","body":"@table"},"external_var":false},{"html_id":"to_prepared_sql:String-instance-method","name":"to_prepared_sql","doc":"Prepares the SQL statement by combining the `args` and `statement`\nin to a single `String`","summary":"<p>Prepares the SQL statement by combining the <code><a href=\"../Avram/QueryBuilder.html#args%3AArray%28String%7CArray%28String%29%7CArray%28Int32%29%29-instance-method\">#args</a></code> and <code><a href=\"../Avram/QueryBuilder.html#statement%3AString-instance-method\">#statement</a></code> in to a single <code><a href=\"../String.html\">String</a></code></p>","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L28"},"def":{"name":"to_prepared_sql","return_type":"String","visibility":"Public","body":"params = args.map do |arg|\n  \"'#{String.new((PQ::Param.encode(arg)).slice)}'\"\nend\ni = 0\nsql = statement\nsql.scan(/\\$\\d+/) do |match|\n  sql = sql.sub(match[0], params[i])\n  i = i + 1\nend\nsql\n"},"external_var":false},{"html_id":"to_sql:Array(Array(Int32)|Array(String)|String)-instance-method","name":"to_sql","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L22"},"def":{"name":"to_sql","return_type":"Array(Array(Int32) | Array(String) | String)","visibility":"Public","body":"[statement] + args"},"external_var":false},{"html_id":"where(where_clause:Avram::Where::Condition):self-instance-method","name":"where","abstract":false,"args":[{"name":"where_clause","external_name":"where_clause","restriction":"Avram::Where::Condition"}],"args_string":"(where_clause : Avram::Where::Condition) : self","args_html":"(where_clause : <a href=\"../Avram/Where/Condition.html\">Avram::Where::Condition</a>) : <span class=\"k\">self</span>","location":{"filename":"src/avram/query_builder.cr","line_number":331,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L331"},"def":{"name":"where","args":[{"name":"where_clause","external_name":"where_clause","restriction":"Avram::Where::Condition"}],"return_type":"self","visibility":"Public","body":"@wheres << where_clause\nself\n"},"external_var":false},{"html_id":"wheres:Array(Avram::Where::Condition)-instance-method","name":"wheres","abstract":false,"location":{"filename":"src/avram/query_builder.cr","line_number":375,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L375"},"def":{"name":"wheres","return_type":"Array(Avram::Where::Condition)","visibility":"Public","body":"@wheres"},"external_var":false}],"types":[{"html_id":"avram/Avram/QueryBuilder/ColumnName","path":"Avram/QueryBuilder/ColumnName.html","kind":"alias","full_name":"Avram::QueryBuilder::ColumnName","name":"ColumnName","abstract":false,"locations":[{"filename":"src/avram/query_builder.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/query_builder.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","aliased_html":"<a href=\"../../String.html\">String</a> | Symbol","const":false,"namespace":{"html_id":"avram/Avram/QueryBuilder","kind":"class","full_name":"Avram::QueryBuilder","name":"QueryBuilder"}}]},{"html_id":"avram/Avram/RecordNotFoundError","path":"Avram/RecordNotFoundError.html","kind":"class","full_name":"Avram::RecordNotFoundError","name":"RecordNotFoundError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L26"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when Avram cannot find a record by given id","summary":"<p>Raised when Avram cannot find a record by given id</p>","constructors":[{"html_id":"new(model:TableName,id:String)-class-method","name":"new","abstract":false,"args":[{"name":"model","external_name":"model","restriction":"TableName"},{"name":"id","external_name":"id","restriction":"String"}],"args_string":"(model : TableName, id : String)","args_html":"(model : <a href=\"../Avram/TableName.html\">TableName</a>, id : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L31"},"def":{"name":"new","args":[{"name":"model","external_name":"model","restriction":"TableName"},{"name":"id","external_name":"id","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model, id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(model:TableName,query:Symbol)-class-method","name":"new","abstract":false,"args":[{"name":"model","external_name":"model","restriction":"TableName"},{"name":"query","external_name":"query","restriction":"Symbol"}],"args_string":"(model : TableName, query : Symbol)","args_html":"(model : <a href=\"../Avram/TableName.html\">TableName</a>, query : Symbol)","location":{"filename":"src/avram/errors.cr","line_number":35,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L35"},"def":{"name":"new","args":[{"name":"model","external_name":"model","restriction":"TableName"},{"name":"query","external_name":"query","restriction":"Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model, query)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"id:String|Nil-instance-method","name":"id","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L28"},"def":{"name":"id","return_type":"String | ::Nil","visibility":"Public","body":"@id"},"external_var":false},{"html_id":"model:TableName-instance-method","name":"model","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L27"},"def":{"name":"model","return_type":"TableName","visibility":"Public","body":"@model"},"external_var":false},{"html_id":"query:Symbol|Nil-instance-method","name":"query","abstract":false,"location":{"filename":"src/avram/errors.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L29"},"def":{"name":"query","return_type":"Symbol | ::Nil","visibility":"Public","body":"@query"},"external_var":false}]},{"html_id":"avram/Avram/Rollback","path":"Avram/Rollback.html","kind":"class","full_name":"Avram::Rollback","name":"Rollback","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raise to rollback a transaction.","summary":"<p>Raise to rollback a transaction.</p>"},{"html_id":"avram/Avram/SaveCallbacks","path":"Avram/SaveCallbacks.html","kind":"module","full_name":"Avram::SaveCallbacks","name":"SaveCallbacks","abstract":false,"ancestors":[{"html_id":"avram/Avram/AfterCommitCallback","kind":"module","full_name":"Avram::AfterCommitCallback","name":"AfterCommitCallback"},{"html_id":"avram/Avram/CallbackHelpers","kind":"module","full_name":"Avram::CallbackHelpers","name":"CallbackHelpers"}],"locations":[{"filename":"src/avram/callbacks/save_callbacks.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/save_callbacks.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/AfterCommitCallback","kind":"module","full_name":"Avram::AfterCommitCallback","name":"AfterCommitCallback"}],"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"after_save(method_name,if_if=nil,unless_unless=nil)-macro","name":"after_save","doc":"Run the given method after save, but before transaction is committed\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\nThis is a great place to do other database saves because if something goes\nwrong the whole transaction would be rolled back.\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_save touch_post\n\n  private def touch_post(comment : Comment)\n    SavePost.update!(comment.post!, updated_at: Time.utc)\n  end\nend\n```\n\n> This is *not* a good place to do things like send messages, enqueue\n> background jobs, or charge payments. Since the transaction could be rolled\n> back the record may not be persisted to the database.\n> Instead use `after_commit`","summary":"<p>Run the given method after save, but before transaction is committed</p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = nil, unless _unless = nil)","args_html":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks/save_callbacks.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/save_callbacks.cr#L120"},"def":{"name":"after_save","args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_save, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:after_save, {{ method_name }}, :unless)\n    {% end %}\n\n    after_save(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do |object|\n      \n{{ method_name.id }}\n(object)\n    \nend\n  \n"}},{"html_id":"after_save(if_if=nil,unless_unless=nil,&block)-macro","name":"after_save","doc":"Run the given block after save, but before transaction is committed\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\nThis is a great place to do other database saves because if something goes\nwrong the whole transaction would be rolled back.\n\nThe newly saved record will be passed to the method.\n\n```\nclass SaveComment < Comment::SaveOperation\n  after_save do |comment|\n    SavePost.update!(comment.post!, updated_at: Time.utc)\n  end\nend\n```\n\n> This is *not* a good place to do things like send messages, enqueue\n> background jobs, or charge payments. Since the transaction could be rolled\n> back the record may not be persisted to the database.\n> Instead use `after_commit`","summary":"<p>Run the given block after save, but before transaction is committed</p>","abstract":false,"args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = nil, unless _unless = nil, &block)","args_html":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>, &block)","location":{"filename":"src/avram/callbacks/save_callbacks.cr","line_number":155,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/save_callbacks.cr#L155"},"def":{"name":"after_save","args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"block_arg":{"name":"block","external_name":"block","restriction":""},"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your after_save callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_save, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:after_save, :unless)\n    {% end %}\n\n    \n{%\n  if block.args.size != 1\n    raise(\"The 'after_save' callback requires exactly 1 block arg to be passed.\\nExample:\\n  after_save do |saved_user|\\n    some_method(saved_user)\\n  end\")\n  end\n%}\n\n    def after_save(\n%object\n : T) : Nil\n      \n{% if @type.methods.map(&.name).includes?((:after_save).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      end\n      {% else %}\n        {{ block.args.first }} = %object\n        {{ block.body }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}},{"html_id":"before_save(method_name,if_if=nil,unless_unless=nil)-macro","name":"before_save","doc":"Run the given method before saving or creating for `SaveOperation`\n\nThis runs before saving and before the database transaction is started.\nYou can set defaults, validate, or perform any other setup necessary for\nsaving.\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\n```\nbefore_save :run_validations\nbefore_save :validate_can_internet, unless: :too_cool_for_school?\n\nprivate def run_validations\n  validate_required name, age\nend\n\nprivate def validate_can_internet\n  validate_size_of age, min: 13\nend\n\nprivate def too_cool_for_school?\n  [true, false].sample\nend\n```","summary":"<p>Run the given method before saving or creating for <code><a href=\"../Avram/SaveOperation.html\">SaveOperation</a></code></p>","abstract":false,"args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(method_name, if _if = nil, unless _unless = nil)","args_html":"(method_name, if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks/save_callbacks.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/save_callbacks.cr#L32"},"def":{"name":"before_save","args":[{"name":"method_name","external_name":"method_name","restriction":""},{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"visibility":"Public","body":"    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:before_save, {{ method_name }}, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_inline_callbacks(:before_save, {{ method_name }}, :unless)\n    {% end %}\n\n    before_save(if: \n{{ _if }}\n, unless: \n{{ _unless }}\n) do\n      \n{{ method_name.id }}\n\n    \nend\n  \n"}},{"html_id":"before_save(if_if=nil,unless_unless=nil)-macro","name":"before_save","doc":"Run the given block before saving or creating for `SaveOperation`\n\nThis runs before saving and before the database transaction is started.\nYou can set defaults, validate, or perform any other setup necessary for\nsaving.\n\nOptionally you can pass an `if` or `unless` argument which allows you to\nrun this conditionally. The symbol should reference a method you've defined\nthat returns a truthy/falsey value\n\n```\nbefore_save(unless: :skip_callback?) do\n  validate_required name, age\nend\n\nprivate def skip_callback?\n  false\nend\n```","summary":"<p>Run the given block before saving or creating for <code><a href=\"../Avram/SaveOperation.html\">SaveOperation</a></code></p>","abstract":false,"args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"args_string":"(if _if = nil, unless _unless = nil)","args_html":"(if _if = <span class=\"n\">nil</span>, unless _unless = <span class=\"n\">nil</span>)","location":{"filename":"src/avram/callbacks/save_callbacks.cr","line_number":63,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/callbacks/save_callbacks.cr#L63"},"def":{"name":"before_save","args":[{"name":"_if","default_value":"nil","external_name":"if","restriction":""},{"name":"_unless","default_value":"nil","external_name":"unless","restriction":""}],"visibility":"Public","body":"    \n{% if (_if != nil) && (_unless != nil) %}\n      {% raise(\"Your before_save callbacks should only specify `if` or `unless`, but not both.\") %}\n    {% end %}\n\n    \n{% if _if.is_a?(SymbolLiteral) || _if.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:before_save, :if)\n    {% end %}\n\n    \n{% if _unless.is_a?(SymbolLiteral) || _unless.is_a?(NilLiteral) %}{% else %}\n      conditional_error_for_block_callbacks(:before_save, :unless)\n    {% end %}\n\n\n    def before_save : Nil\n      \n{% if @type.methods.map(&.name).includes?((:before_save).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{% if _if %}\n      if {{ _if.id }}\n        {{ yield }}\n      end\n      {% else %}{% if _unless %}\n      unless {{ _unless.id }}\n        {{ yield }}\n      end\n      {% else %}\n        {{ yield }}\n      {% end %}{% end %}\n\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/SaveOperation","path":"Avram/SaveOperation.html","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Avram/AddColumnAttributes","kind":"module","full_name":"Avram::AddColumnAttributes","name":"AddColumnAttributes"},{"html_id":"avram/Avram/Upsert","kind":"module","full_name":"Avram::Upsert","name":"Upsert"},{"html_id":"avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"avram/Avram/MarkAsFailed","kind":"module","full_name":"Avram::MarkAsFailed","name":"MarkAsFailed"},{"html_id":"avram/Avram/NestedSaveOperation","kind":"module","full_name":"Avram::NestedSaveOperation","name":"NestedSaveOperation"},{"html_id":"avram/Avram/DatabaseValidations","kind":"module","full_name":"Avram::DatabaseValidations","name":"DatabaseValidations"},{"html_id":"avram/Avram/SaveCallbacks","kind":"module","full_name":"Avram::SaveCallbacks","name":"SaveCallbacks"},{"html_id":"avram/Avram/AfterCommitCallback","kind":"module","full_name":"Avram::AfterCommitCallback","name":"AfterCommitCallback"},{"html_id":"avram/Avram/CallbackHelpers","kind":"module","full_name":"Avram::CallbackHelpers","name":"CallbackHelpers"},{"html_id":"avram/Avram/NeedyInitializerAndSaveMethods","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/save_operation.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L13"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ATTRIBUTES","name":"ATTRIBUTES","value":"[] of Nil"},{"id":"OPERATION_NEEDS","name":"OPERATION_NEEDS","value":"[] of Nil"}],"included_modules":[{"html_id":"avram/Avram/AddColumnAttributes","kind":"module","full_name":"Avram::AddColumnAttributes","name":"AddColumnAttributes"},{"html_id":"avram/Avram/DatabaseValidations","kind":"module","full_name":"Avram::DatabaseValidations","name":"DatabaseValidations"},{"html_id":"avram/Avram/DefineAttribute","kind":"module","full_name":"Avram::DefineAttribute","name":"DefineAttribute"},{"html_id":"avram/Avram/InheritColumnAttributes","kind":"module","full_name":"Avram::InheritColumnAttributes","name":"InheritColumnAttributes"},{"html_id":"avram/Avram/MarkAsFailed","kind":"module","full_name":"Avram::MarkAsFailed","name":"MarkAsFailed"},{"html_id":"avram/Avram/NeedyInitializerAndSaveMethods","kind":"module","full_name":"Avram::NeedyInitializerAndSaveMethods","name":"NeedyInitializerAndSaveMethods"},{"html_id":"avram/Avram/NestedSaveOperation","kind":"module","full_name":"Avram::NestedSaveOperation","name":"NestedSaveOperation"},{"html_id":"avram/Avram/OperationErrors","kind":"module","full_name":"Avram::OperationErrors","name":"OperationErrors"},{"html_id":"avram/Avram/ParamKeyOverride","kind":"module","full_name":"Avram::ParamKeyOverride","name":"ParamKeyOverride"},{"html_id":"avram/Avram/SaveCallbacks","kind":"module","full_name":"Avram::SaveCallbacks","name":"SaveCallbacks"},{"html_id":"avram/Avram/Upsert","kind":"module","full_name":"Avram::Upsert","name":"Upsert"},{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"param_key:String-class-method","name":"param_key","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L44"},"def":{"name":"param_key","return_type":"String","visibility":"Public","body":"T.name.underscore"},"external_var":false},{"html_id":"upsert(*args,**named_args)-class-method","name":"upsert","doc":"Performs a create or update depending on if there is a conflicting row in the database.\n\nSee `Avram::Upsert.upsert_lookup_columns` for full documentation and examples.","summary":"<p>Performs a create or update depending on if there is a conflicting row in the database.</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/avram/save_operation.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L24"},"def":{"name":"upsert","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"{% raise(\"Please use the 'upsert_lookup_columns' macro in #{@type} before using 'upsert'\") %}"},"external_var":false},{"html_id":"upsert!(*args,**named_args)-class-method","name":"upsert!","doc":"Performs a create or update depending on if there is a conflicting row in the database.\n\nSee `Avram::Upsert.upsert_lookup_columns` for full documentation and examples.","summary":"<p>Performs a create or update depending on if there is a conflicting row in the database.</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **named_args)","args_html":"(*args, **named_args)","location":{"filename":"src/avram/save_operation.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L24"},"def":{"name":"upsert!","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":0,"visibility":"Public","body":"{% raise(\"Please use the 'upsert_lookup_columns' macro in #{@type} before using 'upsert!'\") %}"},"external_var":false}],"constructors":[{"html_id":"new(params:Avram::Paramable)-class-method","name":"new","abstract":false,"args":[{"name":"params","external_name":"params","restriction":"::Avram::Paramable"}],"args_string":"(params : Avram::Paramable)","args_html":"(params : <a href=\"../Avram/Paramable.html\">Avram::Paramable</a>)","location":{"filename":"src/avram/save_operation.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L48"},"def":{"name":"new","args":[{"name":"params","external_name":"params","restriction":"::Avram::Paramable"}],"visibility":"Public","body":"_ = SaveOperation(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":51,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L51"},"def":{"name":"new","visibility":"Public","body":"_ = SaveOperation(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"after_commit(_record:T)-instance-method","name":"after_commit","abstract":false,"args":[{"name":"_record","external_name":"_record","restriction":"T"}],"args_string":"(_record : T)","args_html":"(_record : T)","location":{"filename":"src/avram/save_operation.cr","line_number":283,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L283"},"def":{"name":"after_commit","args":[{"name":"_record","external_name":"_record","restriction":"T"}],"visibility":"Public","body":""},"external_var":false},{"html_id":"after_save(_record:T)-instance-method","name":"after_save","abstract":false,"args":[{"name":"_record","external_name":"_record","restriction":"T"}],"args_string":"(_record : T)","args_html":"(_record : T)","location":{"filename":"src/avram/save_operation.cr","line_number":281,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L281"},"def":{"name":"after_save","args":[{"name":"_record","external_name":"_record","restriction":"T"}],"visibility":"Public","body":""},"external_var":false},{"html_id":"attributes-instance-method","name":"attributes","abstract":true,"location":{"filename":"src/avram/save_operation.cr","line_number":42,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L42"},"def":{"name":"attributes","visibility":"Public","body":""},"external_var":false},{"html_id":"before_save-instance-method","name":"before_save","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":279,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L279"},"def":{"name":"before_save","visibility":"Public","body":""},"external_var":false},{"html_id":"changes:Hash(Symbol,String|Nil)-instance-method","name":"changes","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":193,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L193"},"def":{"name":"changes","return_type":"Hash(Symbol, String | ::Nil)","visibility":"Public","body":"attributes_to_hash(column_attributes.select(&.changed?))"},"external_var":false},{"html_id":"created?:Bool-instance-method","name":"created?","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":133,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L133"},"def":{"name":"created?","return_type":"Bool","visibility":"Public","body":"saved? && new_record?"},"external_var":false},{"html_id":"custom_errors:Hash(Symbol,Array(String))-instance-method","name":"custom_errors","abstract":false,"def":{"name":"custom_errors","return_type":"Hash(Symbol, Array(String))","visibility":"Public","body":"@custom_errors"},"external_var":false},{"html_id":"generic_attributes:Array(Avram::GenericAttribute)-instance-method","name":"generic_attributes","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":64,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L64"},"def":{"name":"generic_attributes","return_type":"Array(Avram::GenericAttribute)","visibility":"Public","body":"attributes.map do |attr|\n  Avram::GenericAttribute.new(name: attr.name, param: attr.param.try(&.to_s), value: attr.value.try(&.to_s), original_value: attr.original_value.try(&.to_s), param_key: attr.param_key, errors: attr.errors)\nend"},"external_var":false},{"html_id":"new_record?:Bool-instance-method","name":"new_record?","doc":"`#persisted?` always returns `true` in `after_*` hooks, whether\na new record was created, or an existing one was updated.\n\nThis method should always return `true` for a create or `false`\nfor an update, independent of the stage we are at in the operation.","summary":"<p><code><a href=\"../Avram/SaveOperation.html#persisted%3F%3ABool-instance-method\">#persisted?</a></code> always returns <code>true</code> in <code>after_*</code> hooks, whether a new record was created, or an existing one was updated.</p>","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":263,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L263"},"def":{"name":"new_record?","return_type":"Bool","visibility":"Public","body":"({{ (T.constant(:PRIMARY_KEY_NAME)).id }}).value.nil?"},"external_var":false},{"html_id":"params:Avram::Paramable-instance-method","name":"params","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L39"},"def":{"name":"params","return_type":"Avram::Paramable","visibility":"Public","body":"@params"},"external_var":false},{"html_id":"persisted?:Bool-instance-method","name":"persisted?","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":254,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L254"},"def":{"name":"persisted?","return_type":"Bool","visibility":"Public","body":"!!record_id"},"external_var":false},{"html_id":"primary_key_name(*args,**options)-instance-method","name":"primary_key_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/save_operation.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L55"},"def":{"name":"primary_key_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.primary_key_name(*args, **options)"},"external_var":false},{"html_id":"primary_key_name(*args,**options,&)-instance-method","name":"primary_key_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/save_operation.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L55"},"def":{"name":"primary_key_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.primary_key_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"run_default_validations:Nil-instance-method","name":"run_default_validations","doc":"Runs all required validations for required types\nas well as any additional valitaions the type needs to run\ne.g. polymorphic validations","summary":"<p>Runs all required validations for required types as well as any additional valitaions the type needs to run e.g.</p>","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":100,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L100"},"def":{"name":"run_default_validations","return_type":"Nil","visibility":"Public","body":"validate_required(*required_attributes)\ndefault_validations\n"},"external_var":false},{"html_id":"save:Bool-instance-method","name":"save","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":212,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L212"},"def":{"name":"save","return_type":"Bool","visibility":"Public","body":"before_save\n\nif valid?\n  transaction_committed = write_database.transaction do\n    if !changes.empty? || !persisted?\n      insert_or_update\n    end\n    after_save(record.as(T))\n    true\n  end\n\n  if transaction_committed\n    self.save_status = OperationStatus::Saved\n    after_commit(record.as(T))\n    Avram::Events::SaveSuccessEvent.publish(operation_class: self.class.name, attributes: generic_attributes)\n    true\n  else\n    mark_as_failed\n    publish_save_failed_event\n    false\n  end\nelse\n  mark_as_failed\n  publish_save_failed_event\n  false\nend\n"},"external_var":false},{"html_id":"save!:T-instance-method","name":"save!","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":242,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L242"},"def":{"name":"save!","return_type":"T","visibility":"Public","body":"if save\n  record.as(T)\nelse\n  raise(Avram::InvalidOperationError.new(operation: self))\nend"},"external_var":false},{"html_id":"save_failed?:Bool-instance-method","name":"save_failed?","doc":"Return true if the operation has run and the record failed to save","summary":"<p>Return true if the operation has run and the record failed to save</p>","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":142,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L142"},"def":{"name":"save_failed?","return_type":"Bool","visibility":"Public","body":"save_status == OperationStatus::SaveFailed"},"external_var":false},{"html_id":"save_status:OperationStatus-instance-method","name":"save_status","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L40"},"def":{"name":"save_status","return_type":"OperationStatus","visibility":"Public","body":"@save_status"},"external_var":false},{"html_id":"save_status=(save_status:OperationStatus)-instance-method","name":"save_status=","abstract":false,"args":[{"name":"save_status","external_name":"save_status","restriction":"OperationStatus"}],"args_string":"(save_status : OperationStatus)","args_html":"(save_status : <a href=\"../Avram/SaveOperation/OperationStatus.html\">OperationStatus</a>)","location":{"filename":"src/avram/save_operation.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L40"},"def":{"name":"save_status=","args":[{"name":"save_status","external_name":"save_status","restriction":"OperationStatus"}],"visibility":"Public","body":"@save_status = save_status"},"external_var":false},{"html_id":"saved?:Bool-instance-method","name":"saved?","doc":"Returns true if the operation has run and saved the record successfully","summary":"<p>Returns true if the operation has run and saved the record successfully</p>","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":129,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L129"},"def":{"name":"saved?","return_type":"Bool","visibility":"Public","body":"save_status == OperationStatus::Saved"},"external_var":false},{"html_id":"table_name(*args,**options)-instance-method","name":"table_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/save_operation.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L55"},"def":{"name":"table_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.table_name(*args, **options)"},"external_var":false},{"html_id":"table_name(*args,**options,&)-instance-method","name":"table_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/save_operation.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L55"},"def":{"name":"table_name","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.table_name(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false},{"html_id":"update!:T-instance-method","name":"update!","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":250,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L250"},"def":{"name":"update!","return_type":"T","visibility":"Public","body":"save!"},"external_var":false},{"html_id":"updated?:Bool-instance-method","name":"updated?","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":137,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L137"},"def":{"name":"updated?","return_type":"Bool","visibility":"Public","body":"saved? && !new_record?"},"external_var":false},{"html_id":"valid?:Bool-instance-method","name":"valid?","doc":"Runs required validation,\nthen returns `true` if all attributes are valid,\nand there's no custom errors","summary":"<p>Runs required validation, then returns <code>true</code> if all attributes are valid, and there's no custom errors</p>","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":120,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L120"},"def":{"name":"valid?","return_type":"Bool","visibility":"Public","body":"run_default_validations\ncustom_errors.empty? && attributes.all?(&.valid?)\n"},"external_var":false},{"html_id":"write_database(*args,**options)-instance-method","name":"write_database","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/avram/save_operation.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L55"},"def":{"name":"write_database","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"T.write_database(*args, **options)"},"external_var":false},{"html_id":"write_database(*args,**options,&)-instance-method","name":"write_database","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/avram/save_operation.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L55"},"def":{"name":"write_database","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"T.write_database(*args, **options) do |*yield_args|\n  yield *yield_args\nend"},"external_var":false}],"macros":[{"html_id":"add_cast_value_methods(columns)-macro","name":"add_cast_value_methods","abstract":false,"args":[{"name":"columns","external_name":"columns","restriction":""}],"args_string":"(columns)","args_html":"(columns)","location":{"filename":"src/avram/save_operation.cr","line_number":197,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L197"},"def":{"name":"add_cast_value_methods","args":[{"name":"columns","external_name":"columns","restriction":""}],"visibility":"Public","body":"    private def cast_value(value : Nil)\n      nil\n    \nend\n\n    \n{% for column in columns %}\n    # pass `value` to it's `Lucky.to_db` for parsing.\n    # In most cases, that's just calling `to_s`, but in the case of an Array,\n    # `value` is passed to `PQ::Param` to properly encode `[true]` to `{t}`, etc...\n    private def cast_value(value : {{ column[:type] }})\n      value.class.adapter.to_db(value.as({{ column[:type] }}))\n    end\n    {% end %}\n\n  \n"}},{"html_id":"param_key(key)-macro","name":"param_key","abstract":false,"args":[{"name":"key","external_name":"key","restriction":""}],"args_string":"(key)","args_html":"(key)","def":{"name":"param_key","args":[{"name":"key","external_name":"key","restriction":""}],"visibility":"Public","body":"      def self.param_key : String\n        \n{{ key.id.stringify }}\n\n      \nend\n    \n"}},{"html_id":"permit_columns(*attribute_names)-macro","name":"permit_columns","abstract":false,"args":[{"name":"attribute_names","external_name":"attribute_names","restriction":""}],"args_string":"(*attribute_names)","args_html":"(*attribute_names)","location":{"filename":"src/avram/save_operation.cr","line_number":146,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L146"},"def":{"name":"permit_columns","args":[{"name":"attribute_names","external_name":"attribute_names","restriction":""}],"splat_index":0,"visibility":"Public","body":"    \n{% for attribute_name in attribute_names %}\n      {% if attribute_name.is_a?(TypeDeclaration) %}\n        {% raise(\"Must use a Symbol or a bare word in 'permit_columns'. Instead, got: #{attribute_name}\\n\\nTry this...\\n\\n  ▸ permit_columns #{attribute_name.var}\\n\")\n%}\n      {% end %}\n      {% if attribute_name.is_a?(SymbolLiteral) || attribute_name.is_a?(Call) %}{% else %}\n        {% raise(\"Must use a Symbol or a bare word in 'permit_columns'. Instead, got: #{attribute_name}\\n\\nTry this...\\n\\n  ▸ Use a bare word (recommended): 'permit_columns name'\\n  ▸ Use a Symbol: 'permit_columns :name'\\n\")\n%}\n      {% end %}\n      {% if COLUMN_ATTRIBUTES.any? do |attribute|\n  attribute[:name].id == attribute_name.id\nend %}\n        def {{ attribute_name.id }}\n          _{{ attribute_name.id }}.permitted\n        end\n\n        @@permitted_param_keys << \"{{ attribute_name.id }}\"\n      {% else %}\n        {% raise(\"Can't permit '#{attribute_name}' because the column has not been defined on the model for #{@type}.\\n\\nTry this...\\n\\n  ▸ Make sure you spelled the column correctly.\\n  ▸ Add the column to the model if it doesn't exist.\\n  ▸ Use 'attribute' if you want an attribute that is not saved to the database.\\n\")\n%}\n      {% end %}\n    {% end %}\n\n  \n"}},{"html_id":"skip_default_validations-macro","name":"skip_default_validations","doc":"This allows you to skip the default validations\nwhich may be used as an escape hatch when you want\nto allow storing an empty string value.","summary":"<p>This allows you to skip the default validations which may be used as an escape hatch when you want to allow storing an empty string value.</p>","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":112,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L112"},"def":{"name":"skip_default_validations","visibility":"Public","body":"    def run_default_validations\n    \nend\n  \n"}}],"types":[{"html_id":"avram/Avram/SaveOperation/OperationStatus","path":"Avram/SaveOperation/OperationStatus.html","kind":"enum","full_name":"Avram::SaveOperation::OperationStatus","name":"OperationStatus","abstract":false,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/save_operation.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L27"}],"repository_name":"avram","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Saved","name":"Saved","value":"0"},{"id":"SaveFailed","name":"SaveFailed","value":"1"},{"id":"Unperformed","name":"Unperformed","value":"2"}],"namespace":{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"},"instance_methods":[{"html_id":"save_failed?-instance-method","name":"save_failed?","doc":"Returns `true` if this enum value equals `SaveFailed`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/SaveOperation/OperationStatus.html#SaveFailed\">SaveFailed</a></code></p>","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L29"},"def":{"name":"save_failed?","visibility":"Public","body":"self == SaveFailed"},"external_var":false},{"html_id":"saved?-instance-method","name":"saved?","doc":"Returns `true` if this enum value equals `Saved`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/SaveOperation/OperationStatus.html#Saved\">Saved</a></code></p>","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L28"},"def":{"name":"saved?","visibility":"Public","body":"self == Saved"},"external_var":false},{"html_id":"unperformed?-instance-method","name":"unperformed?","doc":"Returns `true` if this enum value equals `Unperformed`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/SaveOperation/OperationStatus.html#Unperformed\">Unperformed</a></code></p>","abstract":false,"location":{"filename":"src/avram/save_operation.cr","line_number":30,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation.cr#L30"},"def":{"name":"unperformed?","visibility":"Public","body":"self == Unperformed"},"external_var":false}]}]},{"html_id":"avram/Avram/SaveOperationTemplate","path":"Avram/SaveOperationTemplate.html","kind":"class","full_name":"Avram::SaveOperationTemplate","name":"SaveOperationTemplate","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/save_operation_template.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation_template.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"setup(type,columns,*args,**named_args)-macro","name":"setup","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(type, columns, *args, **named_args)","args_html":"(type, columns, *args, **named_args)","location":{"filename":"src/avram/save_operation_template.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/save_operation_template.cr#L2"},"def":{"name":"setup","args":[{"name":"type","external_name":"type","restriction":""},{"name":"columns","external_name":"columns","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":2,"visibility":"Public","body":"    \n# This makes it easy for plugins and extensions to use the base SaveOperation\n\n    def base_query_class : ::\n{{ type }}\n::BaseQuery.class\n      ::\n{{ type }}\n::BaseQuery\n    \nend\n\n    def save_operation_class : ::\n{{ type }}\n::SaveOperation.class\n      ::\n{{ type }}\n::SaveOperation\n    \nend\n\n    class ::\n{{ type }}\n::SaveOperation < Avram::SaveOperation(\n{{ type }}\n)\n      \n{% primary_key_type = type.resolve.constant(\"PRIMARY_KEY_TYPE\") %}\n\n\n      macro inherited\n        FOREIGN_KEY = \"\n{{ type.stringify.underscore.id }}\n_id\"\n      \nend\n\n      add_column_attributes(\n{{ columns }}\n)\n      add_cast_value_methods(\n{{ columns }}\n)\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/SchemaEnforcer","path":"Avram/SchemaEnforcer.html","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer","abstract":false,"locations":[{"filename":"src/avram/schema_enforcer.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer.cr#L4"},{"filename":"src/avram/schema_enforcer/validation.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/validation.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ALL_MODELS","name":"ALL_MODELS","value":"[] of Avram::Model.class"},{"id":"MODELS_TO_SKIP","name":"MODELS_TO_SKIP","value":"[] of String"}],"including_types":[{"html_id":"avram/Avram/Model","kind":"class","full_name":"Avram::Model","name":"Model"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"ensure_correct_column_mappings!-class-method","name":"ensure_correct_column_mappings!","abstract":false,"location":{"filename":"src/avram/schema_enforcer.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer.cr#L22"},"def":{"name":"ensure_correct_column_mappings!","visibility":"Public","body":"{% if !ALL_MODELS.empty? %}\n      ALL_MODELS.each do |model|\n        model.ensure_correct_column_mappings!\n      end\n    {% end %}"},"external_var":false}],"macros":[{"html_id":"setup(type,*args,**named_args)-macro","name":"setup","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"args","external_name":"args","restriction":""}],"args_string":"(type, *args, **named_args)","args_html":"(type, *args, **named_args)","location":{"filename":"src/avram/schema_enforcer.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer.cr#L8"},"def":{"name":"setup","args":[{"name":"type","external_name":"type","restriction":""},{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","external_name":"named_args","restriction":""},"splat_index":1,"visibility":"Public","body":"    class_getter schema_enforcer_validations = [] of Avram::SchemaEnforcer::Validation\n\n    def self.ensure_correct_column_mappings!\n      return if Avram::SchemaEnforcer::MODELS_TO_SKIP.includes?(self.name)\n\n      schema_enforcer_validations.each(&.validate!)\n    \nend\n\n    \n{% if !type.resolve.abstract? %}\n      {% Avram::SchemaEnforcer::ALL_MODELS << type %}\n    {% end %}\n\n  \n"}},{"html_id":"skip_schema_enforcer-macro","name":"skip_schema_enforcer","abstract":false,"location":{"filename":"src/avram/schema_enforcer.cr","line_number":30,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer.cr#L30"},"def":{"name":"skip_schema_enforcer","visibility":"Public","body":"    \n{% Avram::SchemaEnforcer::MODELS_TO_SKIP << @type.stringify %}\n\n  \n"}}],"types":[{"html_id":"avram/Avram/SchemaEnforcer/EnsureExistingTable","path":"Avram/SchemaEnforcer/EnsureExistingTable.html","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureExistingTable","name":"EnsureExistingTable","abstract":false,"superclass":{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},"ancestors":[{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/schema_enforcer/ensure_existing_table.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_existing_table.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"instance_methods":[{"html_id":"validate!-instance-method","name":"validate!","abstract":false,"location":{"filename":"src/avram/schema_enforcer/ensure_existing_table.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_existing_table.cr#L2"},"def":{"name":"validate!","visibility":"Public","body":"if table_missing?\n  best_match = Levenshtein::Finder.find(table_name, database_info.table_names, tolerance: 2)\n  message = String.build do |string|\n    (string << model_class.name.colorize.bold) << \" wants to use the '\"\n    (string << table_name.colorize.bold) << \"' table but it is missing.\\n\"\n\n    if best_match\n      string << \"\\nIf you meant for #{model_class.name.colorize.bold} to use the '#{best_match.colorize.yellow.bold}' table, try this...\\n\\n  ▸ Change the table name in #{model_class.name.colorize.bold}:\\n\\n      table :#{best_match.colorize.bold} do\\n        # ..columns\\n      end\\n\"\n    end\n\n    string << \"\\nIf you need to create the '#{table_name}' table...\\n\\n  ▸ Generate a migration:\\n\\n      lucky gen.migration Create#{Wordsmith::Inflector.pluralize(model_class.name)}\\n\\n  ▸ Create the table in the migration:\\n\\n      create table_for(#{model_class.name}) do/end\\n\"\n\n    string << \"\\nOr, you can skip schema checks for this model:\\n\\n    class #{model_class.name} < BaseModel\\n      # Great for models used in migrations, or for legacy schemas\\n      skip_schema_enforcer\\n    end\\n\\n\"\n  end\n\n  raise(Avram::SchemaMismatchError.new(message))\nend"},"external_var":false}]},{"html_id":"avram/Avram/SchemaEnforcer/EnsureMatchingColumns","path":"Avram/SchemaEnforcer/EnsureMatchingColumns.html","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureMatchingColumns","name":"EnsureMatchingColumns","abstract":false,"superclass":{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},"ancestors":[{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/schema_enforcer/ensure_matching_columns.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_matching_columns.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"constructors":[{"html_id":"new(model_class,check_required:Bool)-class-method","name":"new","abstract":false,"args":[{"name":"model_class","external_name":"model_class","restriction":""},{"name":"check_required","external_name":"check_required","restriction":"::Bool"}],"args_string":"(model_class, check_required : Bool)","args_html":"(model_class, check_required : <a href=\"../../Bool.html\">Bool</a>)","location":{"filename":"src/avram/schema_enforcer/ensure_matching_columns.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_matching_columns.cr#L11"},"def":{"name":"new","args":[{"name":"model_class","external_name":"model_class","restriction":""},{"name":"check_required","external_name":"check_required","restriction":"::Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_class, check_required)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(model_class)-class-method","name":"new","abstract":false,"args":[{"name":"model_class","external_name":"model_class","restriction":""}],"args_string":"(model_class)","args_html":"(model_class)","location":{"filename":"src/avram/schema_enforcer/ensure_matching_columns.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_matching_columns.cr#L7"},"def":{"name":"new","args":[{"name":"model_class","external_name":"model_class","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"validate!-instance-method","name":"validate!","abstract":false,"location":{"filename":"src/avram/schema_enforcer/ensure_matching_columns.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_matching_columns.cr#L14"},"def":{"name":"validate!","visibility":"Public","body":"model_class.columns.each do |attribute|\n  check_column_matches(attribute)\nend\n\nif matching_error?\n  message = (@missing_columns + @optional_attribute_errors) + @required_attribute_errors\n\n  raise(Avram::SchemaMismatchError.new(message.join(\"\\n\\n\")))\nend\n"},"external_var":false}]},{"html_id":"avram/Avram/SchemaEnforcer/EnsureUUIDPrimaryKeyHasDefault","path":"Avram/SchemaEnforcer/EnsureUUIDPrimaryKeyHasDefault.html","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureUUIDPrimaryKeyHasDefault","name":"EnsureUUIDPrimaryKeyHasDefault","abstract":false,"superclass":{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},"ancestors":[{"html_id":"avram/Avram/SchemaEnforcer/Validation","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"instance_methods":[{"html_id":"has_primary_key?:Bool-instance-method","name":"has_primary_key?","abstract":false,"location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":25,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr#L25"},"def":{"name":"has_primary_key?","return_type":"Bool","visibility":"Public","body":"!model_class.primary_key_name.nil?"},"external_var":false},{"html_id":"missing_column_default?:Bool-instance-method","name":"missing_column_default?","abstract":false,"location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":33,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr#L33"},"def":{"name":"missing_column_default?","return_type":"Bool","visibility":"Public","body":"primary_key_info.column_default.nil?"},"external_var":false},{"html_id":"primary_key_info:Avram::Database::ColumnInfo-instance-method","name":"primary_key_info","abstract":false,"location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr#L37"},"def":{"name":"primary_key_info","return_type":"Avram::Database::ColumnInfo","visibility":"Public","body":"pkey_name = model_class.primary_key_name.to_s\n(table_info.column(pkey_name)).as(Avram::Database::ColumnInfo)\n"},"external_var":false},{"html_id":"uuid_primary_key?:Bool-instance-method","name":"uuid_primary_key?","abstract":false,"location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr#L29"},"def":{"name":"uuid_primary_key?","return_type":"Bool","visibility":"Public","body":"primary_key_info.data_type == \"uuid\""},"external_var":false},{"html_id":"validate!-instance-method","name":"validate!","abstract":false,"location":{"filename":"src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/ensure_uuid_primary_key_has_default.cr#L2"},"def":{"name":"validate!","visibility":"Public","body":"if (has_primary_key? && uuid_primary_key?) && missing_column_default?\nelse\n  return\nend\n\nmessage = \"Primary key on the '#{table_name.colorize.bold}' table has the type set as uuid but does not have a default value.\\n\\nTo add a default value...\\n\\n  ▸ Generate a migration:\\n\\n      lucky gen.migration AddDefaultTo#{Wordsmith::Inflector.pluralize(model_class.name)}PrimaryKey\\n\\n  ▸ Enable a Postgres extension to generate uuids if one is not already available in the migration:\\n\\n      enable_extension \\\"pgcrypto\\\" # https://www.postgresql.org/docs/current/pgcrypto.html\\n\\n  ▸ Update the primary key column to have a default value in the migration:\\n\\n      execute(\\\"ALTER TABLE #{table_name.colorize.bold} ALTER COLUMN #{primary_key_info.column_name.colorize.bold} SET DEFAULT gen_random_uuid();\\\")\"\nraise(Avram::SchemaMismatchError.new(message))\n"},"external_var":false}]},{"html_id":"avram/Avram/SchemaEnforcer/Validation","path":"Avram/SchemaEnforcer/Validation.html","kind":"class","full_name":"Avram::SchemaEnforcer::Validation","name":"Validation","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/schema_enforcer/validation.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/validation.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/SchemaEnforcer/EnsureExistingTable","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureExistingTable","name":"EnsureExistingTable"},{"html_id":"avram/Avram/SchemaEnforcer/EnsureMatchingColumns","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureMatchingColumns","name":"EnsureMatchingColumns"},{"html_id":"avram/Avram/SchemaEnforcer/EnsureUUIDPrimaryKeyHasDefault","kind":"class","full_name":"Avram::SchemaEnforcer::EnsureUUIDPrimaryKeyHasDefault","name":"EnsureUUIDPrimaryKeyHasDefault"}],"namespace":{"html_id":"avram/Avram/SchemaEnforcer","kind":"module","full_name":"Avram::SchemaEnforcer","name":"SchemaEnforcer"},"constructors":[{"html_id":"new(model_class:::Avram::Model.class)-class-method","name":"new","abstract":false,"args":[{"name":"model_class","external_name":"model_class","restriction":"::Avram::Model.class"}],"args_string":"(model_class : ::Avram::Model.class)","args_html":"(model_class : <span class=\"t\">::</span><span class=\"t\">Avram</span><span class=\"t\">::</span><span class=\"t\">Model</span>.<span class=\"k\">class</span>)","location":{"filename":"src/avram/schema_enforcer/validation.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/validation.cr#L4"},"def":{"name":"new","args":[{"name":"model_class","external_name":"model_class","restriction":"::Avram::Model.class"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model_class)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"validate!-instance-method","name":"validate!","abstract":true,"location":{"filename":"src/avram/schema_enforcer/validation.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/schema_enforcer/validation.cr#L7"},"def":{"name":"validate!","visibility":"Public","body":""},"external_var":false}]}]},{"html_id":"avram/Avram/SchemaMismatchError","path":"Avram/SchemaMismatchError.html","kind":"class","full_name":"Avram::SchemaMismatchError","name":"SchemaMismatchError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L11"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised by Avram::SchemaEnforcer when columns or tables don't match the database.","summary":"<p>Raised by Avram::SchemaEnforcer when columns or tables don't match the database.</p>"},{"html_id":"avram/Avram/Slugify","path":"Avram/Slugify.html","kind":"module","full_name":"Avram::Slugify","name":"Slugify","abstract":false,"locations":[{"filename":"src/avram/slugify.cr","line_number":45,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/slugify.cr#L45"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"avram/Avram/Slugify","kind":"module","full_name":"Avram::Slugify","name":"Slugify"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Converts a column value to a URL safe String that\ncan be used as a parameter for finding records. A\n`slug` is a `String` column you define on your model\nthat will be passed through the URL instead of an `id`.\n\ne.g. /articles/1 -> /articles/how-to-slugify\n\nUse this module in your `SaveOperation#before_save`.\n\n```\nclass Article < BaseModel\n  table do\n    column title : String\n    column slug : String\n  end\nend\n\nclass SaveArticle < Article::SaveOperation\n  before_save do\n    Avram::Slugify.set slug,\n      using: title,\n      query: ArticleQuery.new\n  end\nend\n```\n\nThe `set` method will use `query` to determine if that `slug` has already\nbeen used, and fall back to appending a random UUID to the end. If the `slug`\nvalue has already been set, then no new slug will be generated. If you just need\nthe value to set on your own, you can use the `generate` method as an escape hatch.\nThis method returns the String value used in the `set` method.\n\n```\nclass SaveArticle < Article::SaveOperation\n  before_save do\n    if title.changed?\n      slug_value = Avram::Slugify.generate(slug,\n        using: title,\n        query: ArticleQuery.new)\n      slug.value = slug_value\n    end\n  end\nend\n```","summary":"<p>Converts a column value to a URL safe String that can be used as a parameter for finding records.</p>","instance_methods":[{"html_id":"generate(slug:Avram::Attribute(String),usingslug_candidate:Avram::Attribute(String)|String,query:Avram::Queryable):String|Nil-instance-method","name":"generate","abstract":false,"args":[{"name":"slug","external_name":"slug","restriction":"Avram::Attribute(String)"},{"name":"slug_candidate","external_name":"using","restriction":"Avram::Attribute(String) | String"},{"name":"query","external_name":"query","restriction":"Avram::Queryable"}],"args_string":"(slug : Avram::Attribute(String), using slug_candidate : Avram::Attribute(String) | String, query : Avram::Queryable) : String | Nil","args_html":"(slug : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>), using slug_candidate : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>) | <a href=\"../String.html\">String</a>, query : <a href=\"../Avram/Queryable.html\">Avram::Queryable</a>) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/avram/slugify.cr","line_number":62,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/slugify.cr#L62"},"def":{"name":"generate","args":[{"name":"slug","external_name":"slug","restriction":"Avram::Attribute(String)"},{"name":"slug_candidate","external_name":"using","restriction":"Avram::Attribute(String) | String"},{"name":"query","external_name":"query","restriction":"Avram::Queryable"}],"return_type":"String | ::Nil","visibility":"Public","body":"generate(slug, [slug_candidate], query)"},"external_var":false},{"html_id":"generate(slug:Avram::Attribute(String),usingslug_candidates:Array(String|Avram::Attribute(String)|Array(Avram::Attribute(String))),query:Avram::Queryable):String|Nil-instance-method","name":"generate","abstract":false,"args":[{"name":"slug","external_name":"slug","restriction":"Avram::Attribute(String)"},{"name":"slug_candidates","external_name":"using","restriction":"Array(String | Avram::Attribute(String) | Array(Avram::Attribute(String)))"},{"name":"query","external_name":"query","restriction":"Avram::Queryable"}],"args_string":"(slug : Avram::Attribute(String), using slug_candidates : Array(String | Avram::Attribute(String) | Array(Avram::Attribute(String))), query : Avram::Queryable) : String | Nil","args_html":"(slug : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>), using slug_candidates : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a> | <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>) | <a href=\"../Array.html\">Array</a>(<a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>))), query : <a href=\"../Avram/Queryable.html\">Avram::Queryable</a>) : <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/avram/slugify.cr","line_number":68,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/slugify.cr#L68"},"def":{"name":"generate","args":[{"name":"slug","external_name":"slug","restriction":"Avram::Attribute(String)"},{"name":"slug_candidates","external_name":"using","restriction":"Array(String | Avram::Attribute(String) | Array(Avram::Attribute(String)))"},{"name":"query","external_name":"query","restriction":"Avram::Queryable"}],"return_type":"String | ::Nil","visibility":"Public","body":"slug_candidates = format_candidates(slug_candidates)\n\nresult = slug_candidates.find do |candidate|\n  (query.where(slug.name, candidate)).none?\nend\n\nif result\n  result\nelse\n  if candidate = slug_candidates.first?\n    \"#{candidate}-#{UUID.random}\"\n  end\nend\n"},"external_var":false},{"html_id":"set(slug:Avram::Attribute(String),usingslug_candidate:Avram::Attribute(String)|String,query:Avram::Queryable):Nil-instance-method","name":"set","abstract":false,"args":[{"name":"slug","external_name":"slug","restriction":"Avram::Attribute(String)"},{"name":"slug_candidate","external_name":"using","restriction":"Avram::Attribute(String) | String"},{"name":"query","external_name":"query","restriction":"Avram::Queryable"}],"args_string":"(slug : Avram::Attribute(String), using slug_candidate : Avram::Attribute(String) | String, query : Avram::Queryable) : Nil","args_html":"(slug : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>), using slug_candidate : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>) | <a href=\"../String.html\">String</a>, query : <a href=\"../Avram/Queryable.html\">Avram::Queryable</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/avram/slugify.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/slugify.cr#L48"},"def":{"name":"set","args":[{"name":"slug","external_name":"slug","restriction":"Avram::Attribute(String)"},{"name":"slug_candidate","external_name":"using","restriction":"Avram::Attribute(String) | String"},{"name":"query","external_name":"query","restriction":"Avram::Queryable"}],"return_type":"Nil","visibility":"Public","body":"set(slug, [slug_candidate], query)"},"external_var":false},{"html_id":"set(slug:Avram::Attribute(String),usingslug_candidates:Array(String|Avram::Attribute(String)|Array(Avram::Attribute(String))),query:Avram::Queryable):Nil-instance-method","name":"set","abstract":false,"args":[{"name":"slug","external_name":"slug","restriction":"Avram::Attribute(String)"},{"name":"slug_candidates","external_name":"using","restriction":"Array(String | Avram::Attribute(String) | Array(Avram::Attribute(String)))"},{"name":"query","external_name":"query","restriction":"Avram::Queryable"}],"args_string":"(slug : Avram::Attribute(String), using slug_candidates : Array(String | Avram::Attribute(String) | Array(Avram::Attribute(String))), query : Avram::Queryable) : Nil","args_html":"(slug : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>), using slug_candidates : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a> | <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>) | <a href=\"../Array.html\">Array</a>(<a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>))), query : <a href=\"../Avram/Queryable.html\">Avram::Queryable</a>) : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/avram/slugify.cr","line_number":54,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/slugify.cr#L54"},"def":{"name":"set","args":[{"name":"slug","external_name":"slug","restriction":"Avram::Attribute(String)"},{"name":"slug_candidates","external_name":"using","restriction":"Array(String | Avram::Attribute(String) | Array(Avram::Attribute(String)))"},{"name":"query","external_name":"query","restriction":"Avram::Queryable"}],"return_type":"Nil","visibility":"Public","body":"if slug.value.blank?\n  slug.value = generate(slug, slug_candidates, query)\nend"},"external_var":false}]},{"html_id":"avram/Avram/SoftDelete","path":"Avram/SoftDelete.html","kind":"module","full_name":"Avram::SoftDelete","name":"SoftDelete","abstract":false,"locations":[{"filename":"src/avram/soft_delete/model.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/model.cr#L27"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"types":[{"html_id":"avram/Avram/SoftDelete/Model","path":"Avram/SoftDelete/Model.html","kind":"module","full_name":"Avram::SoftDelete::Model","name":"Model","abstract":false,"locations":[{"filename":"src/avram/soft_delete/model.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/model.cr#L27"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/SoftDelete","kind":"module","full_name":"Avram::SoftDelete","name":"SoftDelete"},"doc":"  table do\n    column soft_deleted_at : Time?\n  end\nend\n```\n\nYou should also add the `Avram::SoftDeleteQuery` to your query\n\n```\nclass ArticleQuery < Article::BaseQuery\n  include Avram::SoftDelete::Query\nend\n```","summary":"<p>table do     column soft_deleted_at : Time?   end end ```</p>","instance_methods":[{"html_id":"restore:self-instance-method","name":"restore","doc":"Restore the record\n\nThis will set `soft_deleted_at` to `nil`","summary":"<p>Restore the record</p>","abstract":false,"location":{"filename":"src/avram/soft_delete/model.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/model.cr#L38"},"def":{"name":"restore","return_type":"self","visibility":"Public","body":"save_operation_class.update!(self, soft_deleted_at: nil)"},"external_var":false},{"html_id":"save_operation_class-instance-method","name":"save_operation_class","abstract":true,"location":{"filename":"src/avram/soft_delete/model.cr","line_number":42,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/model.cr#L42"},"def":{"name":"save_operation_class","visibility":"Public","body":""},"external_var":false},{"html_id":"soft_delete:self-instance-method","name":"soft_delete","doc":"Soft delete the record\n\nThis will set `soft_deleted_at` to the current time (`Time.utc`)","summary":"<p>Soft delete the record</p>","abstract":false,"location":{"filename":"src/avram/soft_delete/model.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/model.cr#L31"},"def":{"name":"soft_delete","return_type":"self","visibility":"Public","body":"save_operation_class.update!(self, soft_deleted_at: Time.utc)"},"external_var":false},{"html_id":"soft_deleted?:Bool-instance-method","name":"soft_deleted?","doc":"Returns true if soft deleted, otherwise false\n\nIf the `soft_deleted_at` has a time value the record is \"soft deleted\".\nIf `soft_deleted_at` is `nil` the record has not been deleted yet.","summary":"<p>Returns true if soft deleted, otherwise false</p>","abstract":false,"location":{"filename":"src/avram/soft_delete/model.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/model.cr#L48"},"def":{"name":"soft_deleted?","return_type":"Bool","visibility":"Public","body":"soft_deleted_at.present?"},"external_var":false},{"html_id":"soft_deleted_at:Time|Nil-instance-method","name":"soft_deleted_at","abstract":true,"location":{"filename":"src/avram/soft_delete/model.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/model.cr#L52"},"def":{"name":"soft_deleted_at","return_type":"Time | ::Nil","visibility":"Public","body":""},"external_var":false}]},{"html_id":"avram/Avram/SoftDelete/Query","path":"Avram/SoftDelete/Query.html","kind":"module","full_name":"Avram::SoftDelete::Query","name":"Query","abstract":false,"locations":[{"filename":"src/avram/soft_delete/query.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/query.cr#L12"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/SoftDelete","kind":"module","full_name":"Avram::SoftDelete","name":"SoftDelete"},"doc":"Add methods for querying/updating soft deleted and kept records.\n\nFirst include the model module in your model: `Avram::SoftDelete::Model`\n\nThen add this module your query\n\n```\nclass ArticleQuery < Article::BaseQuery\n  include Avram::SoftDelete::Query\nend\n```","summary":"<p>Add methods for querying/updating soft deleted and kept records.</p>","instance_methods":[{"html_id":"only_kept-instance-method","name":"only_kept","doc":"Only return kept records\n\nKept records are considered \"kept/not soft deleted\" if the\n`soft_deleted_at` column is `nil`","summary":"<p>Only return kept records</p>","abstract":false,"location":{"filename":"src/avram/soft_delete/query.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/query.cr#L17"},"def":{"name":"only_kept","visibility":"Public","body":"reset_where(&.soft_deleted_at).soft_deleted_at.is_nil"},"external_var":false},{"html_id":"only_soft_deleted-instance-method","name":"only_soft_deleted","doc":"Only return soft deleted records\n\nSoft deleted records are considered \"soft deleted\" if the\n`soft_deleted_at` column has a non-nil value","summary":"<p>Only return soft deleted records</p>","abstract":false,"location":{"filename":"src/avram/soft_delete/query.cr","line_number":25,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/query.cr#L25"},"def":{"name":"only_soft_deleted","visibility":"Public","body":"reset_where(&.soft_deleted_at).soft_deleted_at.is_not_nil"},"external_var":false},{"html_id":"restore:Int64-instance-method","name":"restore","doc":"Bulk restore records\n\n## Example\n\nThis will restore `Article` records updated in the last week:\n\n```\nArticleQuery.new.updated_at.gt(1.week.ago).restore\n```","summary":"<p>Bulk restore records</p>","abstract":false,"location":{"filename":"src/avram/soft_delete/query.cr","line_number":60,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/query.cr#L60"},"def":{"name":"restore","return_type":"Int64","visibility":"Public","body":"only_soft_deleted.update(soft_deleted_at: nil)"},"external_var":false},{"html_id":"soft_delete-instance-method","name":"soft_delete","doc":"Bulk soft delete records\n\n## Example\n\nThis will soft delete all `Article` record older than 1 year:\n\n```\nArticleQuery.new.created_at.lt(1.year.ago).soft_delete\n```","summary":"<p>Bulk soft delete records</p>","abstract":false,"location":{"filename":"src/avram/soft_delete/query.cr","line_number":47,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/query.cr#L47"},"def":{"name":"soft_delete","visibility":"Public","body":"only_kept.update(soft_deleted_at: Time.utc)"},"external_var":false},{"html_id":"soft_deleted_at-instance-method","name":"soft_deleted_at","abstract":true,"location":{"filename":"src/avram/soft_delete/query.cr","line_number":64,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/query.cr#L64"},"def":{"name":"soft_deleted_at","visibility":"Public","body":""},"external_var":false},{"html_id":"with_soft_deleted-instance-method","name":"with_soft_deleted","doc":"Returns all records\n\nThis works be removing where clauses for the `soft_deleted_at` column.\nThat means you can do `MyQuery.new.only_kept.with_soft_deleted` and you\nwill get all records, not just the kept ones.","summary":"<p>Returns all records</p>","abstract":false,"location":{"filename":"src/avram/soft_delete/query.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/soft_delete/query.cr#L34"},"def":{"name":"with_soft_deleted","visibility":"Public","body":"reset_where(&.soft_deleted_at)"},"external_var":false}]}]},{"html_id":"avram/Avram/SpecHelper","path":"Avram/SpecHelper.html","kind":"module","full_name":"Avram::SpecHelper","name":"SpecHelper","abstract":false,"locations":[{"filename":"src/avram/spec_helper.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/spec_helper.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"NO_CASCADE","name":"NO_CASCADE","value":"\"no_cascade\""},{"id":"NO_RESTART_IDENTITY","name":"NO_RESTART_IDENTITY","value":"\"no_restart_identity\""},{"id":"TRUNCATE","name":"TRUNCATE","value":"\"truncate\""}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"wrap_spec_in_transaction(spec:Spec::Example::Procsy,*databases)-class-method","name":"wrap_spec_in_transaction","abstract":false,"args":[{"name":"spec","external_name":"spec","restriction":"Spec::Example::Procsy"},{"name":"databases","external_name":"databases","restriction":""}],"args_string":"(spec : Spec::Example::Procsy, *databases)","args_html":"(spec : Spec::Example::Procsy, *databases)","location":{"filename":"src/avram/spec_helper.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/spec_helper.cr#L12"},"def":{"name":"wrap_spec_in_transaction","args":[{"name":"spec","external_name":"spec","restriction":"Spec::Example::Procsy"},{"name":"databases","external_name":"databases","restriction":""}],"splat_index":1,"visibility":"Public","body":"if named_args = use_truncation?(spec)\n  spec.run\n  return databases.each(&.truncate(**named_args))\nend\n\ntracked_transactions = [] of DB::Transaction\n\ndatabases.each do |database|\n  database.lock_id = Fiber.current.object_id\n  database.connections.values.each do |conn|\n    tracked_transactions << conn.begin_transaction.tap(&._avram_joinable = false)\n  end\n\n  database.setup_connection do |conn|\n    tracked_transactions << conn.begin_transaction.tap(&._avram_joinable = false)\n  end\nend\n\nspec.run\n\ntracked_transactions.each do |transaction|\n  if transaction.closed? || transaction.connection.closed?\n    next\n  end\n\n  transaction.rollback\n  transaction.connection.release\nend\ntracked_transactions.clear\ndatabases.each do |database|\n  database.connections.clear\n  database.setup_connection do\n  end\nend\n"},"external_var":false}],"macros":[{"html_id":"use_transactional_specs(*databases)-macro","name":"use_transactional_specs","abstract":false,"args":[{"name":"databases","external_name":"databases","restriction":""}],"args_string":"(*databases)","args_html":"(*databases)","location":{"filename":"src/avram/spec_helper.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/spec_helper.cr#L6"},"def":{"name":"use_transactional_specs","args":[{"name":"databases","external_name":"databases","restriction":""}],"splat_index":0,"visibility":"Public","body":"    Spec.around_each do |spec|\n      Avram::SpecHelper.wrap_spec_in_transaction(spec, \n{{ databases.splat }}\n)\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/TableFor","path":"Avram/TableFor.html","kind":"module","full_name":"Avram::TableFor","name":"TableFor","abstract":false,"locations":[{"filename":"src/avram/table_for.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_for.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Migrator/StatementHelpers","kind":"module","full_name":"Avram::Migrator::StatementHelpers","name":"StatementHelpers"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"macros":[{"html_id":"table_for(model)-macro","name":"table_for","doc":"Returns a `Symbol` representing the table name\nof the `model` passed in.\ne.g. `User` => `:users`","summary":"<p>Returns a <code>Symbol</code> representing the table name of the <code>model</code> passed in.</p>","abstract":false,"args":[{"name":"model","external_name":"model","restriction":""}],"args_string":"(model)","args_html":"(model)","location":{"filename":"src/avram/table_for.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_for.cr#L5"},"def":{"name":"table_for","args":[{"name":"model","external_name":"model","restriction":""}],"visibility":"Public","body":"    Wordsmith::Inflector.pluralize(\n{{ model.stringify }}\n.gsub(\"::\", \"\").underscore)\n  \n"}}]},{"html_id":"avram/Avram/TableLockMode","path":"Avram/TableLockMode.html","kind":"enum","full_name":"Avram::TableLockMode","name":"TableLockMode","abstract":false,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/table_lock_mode.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L2"}],"repository_name":"avram","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"ACCESS_SHARE","name":"ACCESS_SHARE","value":"0"},{"id":"ROW_SHARE","name":"ROW_SHARE","value":"1"},{"id":"ROW_EXCLUSIVE","name":"ROW_EXCLUSIVE","value":"2"},{"id":"SHARE_UPDATE_EXCLUSIVE","name":"SHARE_UPDATE_EXCLUSIVE","value":"3"},{"id":"SHARE","name":"SHARE","value":"4"},{"id":"SHARE_ROW_EXCLUSIVE","name":"SHARE_ROW_EXCLUSIVE","value":"5"},{"id":"EXCLUSIVE","name":"EXCLUSIVE","value":"6"},{"id":"ACCESS_EXCLUSIVE","name":"ACCESS_EXCLUSIVE","value":"7"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"access_exclusive?-instance-method","name":"access_exclusive?","doc":"Returns `true` if this enum value equals `ACCESS_EXCLUSIVE`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/TableLockMode.html#ACCESS_EXCLUSIVE\">ACCESS_EXCLUSIVE</a></code></p>","abstract":false,"location":{"filename":"src/avram/table_lock_mode.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L10"},"def":{"name":"access_exclusive?","visibility":"Public","body":"self == ACCESS_EXCLUSIVE"},"external_var":false},{"html_id":"access_share?-instance-method","name":"access_share?","doc":"Returns `true` if this enum value equals `ACCESS_SHARE`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/TableLockMode.html#ACCESS_SHARE\">ACCESS_SHARE</a></code></p>","abstract":false,"location":{"filename":"src/avram/table_lock_mode.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L3"},"def":{"name":"access_share?","visibility":"Public","body":"self == ACCESS_SHARE"},"external_var":false},{"html_id":"exclusive?-instance-method","name":"exclusive?","doc":"Returns `true` if this enum value equals `EXCLUSIVE`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/TableLockMode.html#EXCLUSIVE\">EXCLUSIVE</a></code></p>","abstract":false,"location":{"filename":"src/avram/table_lock_mode.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L9"},"def":{"name":"exclusive?","visibility":"Public","body":"self == EXCLUSIVE"},"external_var":false},{"html_id":"row_exclusive?-instance-method","name":"row_exclusive?","doc":"Returns `true` if this enum value equals `ROW_EXCLUSIVE`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/TableLockMode.html#ROW_EXCLUSIVE\">ROW_EXCLUSIVE</a></code></p>","abstract":false,"location":{"filename":"src/avram/table_lock_mode.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L5"},"def":{"name":"row_exclusive?","visibility":"Public","body":"self == ROW_EXCLUSIVE"},"external_var":false},{"html_id":"row_share?-instance-method","name":"row_share?","doc":"Returns `true` if this enum value equals `ROW_SHARE`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/TableLockMode.html#ROW_SHARE\">ROW_SHARE</a></code></p>","abstract":false,"location":{"filename":"src/avram/table_lock_mode.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L4"},"def":{"name":"row_share?","visibility":"Public","body":"self == ROW_SHARE"},"external_var":false},{"html_id":"share?-instance-method","name":"share?","doc":"Returns `true` if this enum value equals `SHARE`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/TableLockMode.html#SHARE\">SHARE</a></code></p>","abstract":false,"location":{"filename":"src/avram/table_lock_mode.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L7"},"def":{"name":"share?","visibility":"Public","body":"self == SHARE"},"external_var":false},{"html_id":"share_row_exclusive?-instance-method","name":"share_row_exclusive?","doc":"Returns `true` if this enum value equals `SHARE_ROW_EXCLUSIVE`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/TableLockMode.html#SHARE_ROW_EXCLUSIVE\">SHARE_ROW_EXCLUSIVE</a></code></p>","abstract":false,"location":{"filename":"src/avram/table_lock_mode.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L8"},"def":{"name":"share_row_exclusive?","visibility":"Public","body":"self == SHARE_ROW_EXCLUSIVE"},"external_var":false},{"html_id":"share_update_exclusive?-instance-method","name":"share_update_exclusive?","doc":"Returns `true` if this enum value equals `SHARE_UPDATE_EXCLUSIVE`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Avram/TableLockMode.html#SHARE_UPDATE_EXCLUSIVE\">SHARE_UPDATE_EXCLUSIVE</a></code></p>","abstract":false,"location":{"filename":"src/avram/table_lock_mode.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L6"},"def":{"name":"share_update_exclusive?","visibility":"Public","body":"self == SHARE_UPDATE_EXCLUSIVE"},"external_var":false},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a `String` representation of this enum member.\nIn the case of regular enums, this is just the name of the member.\nIn the case of flag enums, it's the names joined by vertical bars, or \"None\",\nif the value is zero.\n\nIf an enum's value doesn't match a member's value, the raw value\nis returned as a string.\n\n```\nColor::Red.to_s                     # => \"Red\"\nIOMode::None.to_s                   # => \"None\"\n(IOMode::Read | IOMode::Write).to_s # => \"Read | Write\"\n\nColor.new(10).to_s # => \"10\"\n```","summary":"<p>Returns a <code><a href=\"../String.html\">String</a></code> representation of this enum member.</p>","abstract":false,"location":{"filename":"src/avram/table_lock_mode.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/table_lock_mode.cr#L12"},"def":{"name":"to_s","visibility":"Public","body":"member_name.to_s.gsub(\"_\", \" \")"},"external_var":false}]},{"html_id":"avram/Avram/TableName","path":"Avram/TableName.html","kind":"alias","full_name":"Avram::TableName","name":"TableName","abstract":false,"locations":[{"filename":"src/avram.cr","line_number":43,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram.cr#L43"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(String | Symbol)","aliased_html":"<a href=\"../String.html\">String</a> | Symbol","const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"}},{"html_id":"avram/Avram/Type","path":"Avram/Type.html","kind":"module","full_name":"Avram::Type","name":"Type","abstract":false,"locations":[{"filename":"src/avram/type.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/Uploadable/Lucky","kind":"module","full_name":"Avram::Uploadable::Lucky","name":"Lucky"},{"html_id":"avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"},{"html_id":"avram/Enum/Lucky","kind":"module","full_name":"Enum::Lucky(T)","name":"Lucky"},{"html_id":"avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"},{"html_id":"avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"},{"html_id":"avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"},{"html_id":"avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"},{"html_id":"avram/JSON/Any/Lucky","kind":"module","full_name":"JSON::Any::Lucky","name":"Lucky"},{"html_id":"avram/JSON/Serializable/Lucky","kind":"module","full_name":"JSON::Serializable::Lucky(T)","name":"Lucky"},{"html_id":"avram/Slice/Lucky","kind":"module","full_name":"Slice::Lucky","name":"Lucky"},{"html_id":"avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"},{"html_id":"avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"},{"html_id":"avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"instance_methods":[{"html_id":"from_db!(value)-instance-method","name":"from_db!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/type.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L6"},"def":{"name":"from_db!","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"parse!(value)"},"external_var":false},{"html_id":"parse(value:Nil)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Nil"}],"args_string":"(value : Nil)","args_html":"(value : <a href=\"../Nil.html\">Nil</a>)","location":{"filename":"src/avram/type.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L10"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Nil"}],"visibility":"Public","body":"SuccessfulCast(Nil).new(nil)"},"external_var":false},{"html_id":"parse(values:Array(String))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/type.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L14"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"visibility":"Public","body":"casts = values.map do |value|\n  parse(value)\nend\nif casts.all?(SuccessfulCast)\n  values = casts.map do |c|\n    (c.as(SuccessfulCast)).value\n  end\n  parse(values)\nelse\n  FailedCast.new\nend\n"},"external_var":false},{"html_id":"parse!(value)-instance-method","name":"parse!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/type.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L24"},"def":{"name":"parse!","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"((parse(value)).as(SuccessfulCast)).value"},"external_var":false},{"html_id":"to_db(value:Nil)-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Nil"}],"args_string":"(value : Nil)","args_html":"(value : <a href=\"../Nil.html\">Nil</a>)","location":{"filename":"src/avram/type.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L28"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"Nil"}],"visibility":"Public","body":"nil"},"external_var":false},{"html_id":"to_db!(value)-instance-method","name":"to_db!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/type.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L32"},"def":{"name":"to_db!","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"parsed_value = parse!(value)\nto_db(parsed_value)\n"},"external_var":false}],"types":[{"html_id":"avram/Avram/Type/FailedCast","path":"Avram/Type/FailedCast.html","kind":"class","full_name":"Avram::Type::FailedCast","name":"FailedCast","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/type.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L44"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"},"instance_methods":[{"html_id":"value-instance-method","name":"value","abstract":false,"location":{"filename":"src/avram/type.cr","line_number":45,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L45"},"def":{"name":"value","visibility":"Public","body":"nil"},"external_var":false}]},{"html_id":"avram/Avram/Type/SuccessfulCast","path":"Avram/Type/SuccessfulCast.html","kind":"class","full_name":"Avram::Type::SuccessfulCast(T)","name":"SuccessfulCast","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/type.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L37"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"},"constructors":[{"html_id":"new(value:T)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/avram/type.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L40"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"_ = SuccessfulCast(T).allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"value-instance-method","name":"value","abstract":false,"location":{"filename":"src/avram/type.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/type.cr#L38"},"def":{"name":"value","visibility":"Public","body":"@value"},"external_var":false}]}]},{"html_id":"avram/Avram/UnsupportedQueryError","path":"Avram/UnsupportedQueryError.html","kind":"class","full_name":"Avram::UnsupportedQueryError","name":"UnsupportedQueryError","abstract":false,"superclass":{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},"ancestors":[{"html_id":"avram/Avram/AvramError","kind":"class","full_name":"Avram::AvramError","name":"AvramError"},{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/errors.cr","line_number":79,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L79"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Raised when an unimplemented or deprecated query is made.","summary":"<p>Raised when an unimplemented or deprecated query is made.</p>","constructors":[{"html_id":"new(message:String)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/errors.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/errors.cr#L80"},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"avram/Avram/Uploadable","path":"Avram/Uploadable.html","kind":"module","full_name":"Avram::Uploadable","name":"Uploadable","abstract":false,"locations":[{"filename":"src/avram/uploadable.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Lucky/UploadedFile","kind":"class","full_name":"Lucky::UploadedFile","name":"UploadedFile"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/uploadable.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L9"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","doc":"This should test if the filename is a blank string.","summary":"<p>This should test if the filename is a blank string.</p>","abstract":true,"location":{"filename":"src/avram/uploadable.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L7"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":""},"external_var":false},{"html_id":"filename:String-instance-method","name":"filename","doc":"Typically, this should return the filename as found in the `metadata`.","summary":"<p>Typically, this should return the filename as found in the <code><a href=\"../Avram/Uploadable.html#metadata%3AHTTP%3A%3AFormData%3A%3AFileMetadata-instance-method\">#metadata</a></code>.</p>","abstract":true,"location":{"filename":"src/avram/uploadable.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L5"},"def":{"name":"filename","return_type":"String","visibility":"Public","body":""},"external_var":false},{"html_id":"metadata:HTTP::FormData::FileMetadata-instance-method","name":"metadata","abstract":true,"location":{"filename":"src/avram/uploadable.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L3"},"def":{"name":"metadata","return_type":"HTTP::FormData::FileMetadata","visibility":"Public","body":""},"external_var":false},{"html_id":"tempfile:File-instance-method","name":"tempfile","abstract":true,"location":{"filename":"src/avram/uploadable.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L2"},"def":{"name":"tempfile","return_type":"File","visibility":"Public","body":""},"external_var":false}],"types":[{"html_id":"avram/Avram/Uploadable/Lucky","path":"Avram/Uploadable/Lucky.html","kind":"module","full_name":"Avram::Uploadable::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/uploadable.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L13"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Avram/Uploadable/Lucky","kind":"module","full_name":"Avram::Uploadable::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Avram/Uploadable","kind":"module","full_name":"Avram::Uploadable","name":"Uploadable"},"instance_methods":[{"html_id":"parse(value:Avram::Uploadable)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Avram::Uploadable"}],"args_string":"(value : Avram::Uploadable)","args_html":"(value : <a href=\"../../Avram/Uploadable.html\">Avram::Uploadable</a>)","location":{"filename":"src/avram/uploadable.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L16"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Avram::Uploadable"}],"visibility":"Public","body":"SuccessfulCast(Avram::Uploadable).new(value)"},"external_var":false},{"html_id":"parse(values:Array(Avram::Uploadable))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Avram::Uploadable)"}],"args_string":"(values : Array(Avram::Uploadable))","args_html":"(values : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Avram/Uploadable.html\">Avram::Uploadable</a>))","location":{"filename":"src/avram/uploadable.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L20"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(Avram::Uploadable)"}],"visibility":"Public","body":"SuccessfulCast.new(values)"},"external_var":false},{"html_id":"parse(value:String|Nil)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"args_string":"(value : String | Nil)","args_html":"(value : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>)","location":{"filename":"src/avram/uploadable.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L24"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String | ::Nil"}],"visibility":"Public","body":"FailedCast.new"},"external_var":false},{"html_id":"parse(values:Array(String))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","args_html":"(values : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/uploadable.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/uploadable.cr#L28"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"visibility":"Public","body":"FailedCast.new"},"external_var":false}]}]},{"html_id":"avram/Avram/Upsert","path":"Avram/Upsert.html","kind":"module","full_name":"Avram::Upsert","name":"Upsert","abstract":false,"locations":[{"filename":"src/avram/upsert.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/upsert.cr#L4"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"Adds the ability to \"create or update\" (upsert) to `Avram::SaveOperation`\n\nThis is included in SaveOperations by default. See `upsert_lookup_columns` for usage details.","summary":"<p>Adds the ability to &quot;create or update&quot; (upsert) to <code><a href=\"../Avram/SaveOperation.html\">Avram::SaveOperation</a></code></p>","macros":[{"html_id":"upsert_lookup_columns(*attribute_names)-macro","name":"upsert_lookup_columns","doc":"Defines the columns Avram should use when performing an `upsert`\n\nAn \"upsert\" is short for \"update or insert\", or in Avram terminology a\n\"create or update\". If the values in an operation conflict with an existing\nrecord in the database, Avram updates that record. If there is no\nconflicting record, then Avram will create new one.\n\nIn Avram, you must define which columns Avram should look at when\ndetermining if a conflicting record exists. This is done using the macro\n`Avram::Upsert.upsert_lookup_columns`\n\n**Note:** In almost _every_ case the `upsert_lookup_columns` should have a **unique index** defined\nin the database to ensure no conflicting records are created, even from outside Avram.\n\n## Full Example\n\n```\nclass User < BaseModel\n  table do\n    column name : String\n    column email : String # This column has a unique index\n  end\nend\n\nclass SaveUser < User::SaveOperation\n  # Can be one or more columns. In this case we choose just :email\n  upsert_lookup_columns :email\nend\n\n# Will create a new row in the database since no row with\n# `email: \"bob@example.com\"` exists yet\nSaveUser.upsert!(name: \"Bobby\", email: \"bob@example.com\")\n\n# Will update the name on the row we just created since the email is\n# the same as one in the database\nSaveUser.upsert!(name: \"Bob\", email: \"bob@example.com\")\n```\n\n## Difference between `upsert` and `upsert!`\n\nThere is an `upsert` and `upsert!` that work similarly to `create` and `create!`.\n`upsert!` will raise an error if the operation is invalid. Whereas `upsert`\nwill yield the operation and the new record if the operation is valid, or\nthe operation and `nil` if it is invalid.\n\n```\n# Will raise because the name is blank\nSaveUser.upsert!(name: \"\", email: \"bob@example.com\")\n\n# Operation is invalid because name is blank\nSaveUser.upsert(name: \"\", email: \"bob@example.com\") do |operation, user|\n  # `user` is `nil` because the operation is invalid.\n  # If the `name` was valid `user` would be the newly created user\nend\n````","summary":"<p>Defines the columns Avram should use when performing an <code>upsert</code></p>","abstract":false,"args":[{"name":"attribute_names","external_name":"attribute_names","restriction":""}],"args_string":"(*attribute_names)","args_html":"(*attribute_names)","location":{"filename":"src/avram/upsert.cr","line_number":60,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/upsert.cr#L60"},"def":{"name":"upsert_lookup_columns","args":[{"name":"attribute_names","external_name":"attribute_names","restriction":""}],"splat_index":0,"visibility":"Public","body":"    def self.upsert!(*args, **named_args) : T\n      operation = new(*args, **named_args)\n      \nexisting_record = find_existing_unique_record(operation)\n\n      if \nexisting_record\n        operation = new(\nexisting_record, *args, **named_args)\n      \nend\n\n      operation.save!\n    \nend\n\n    def self.upsert(*args, **named_args)\n      operation = new(*args, **named_args)\n      \nexisting_record = find_existing_unique_record(operation)\n\n      if \nexisting_record\n        operation = new(\nexisting_record, *args, **named_args)\n      \nend\n\n      operation.save\n      yield operation, operation.record\n    \nend\n\n    def self.find_existing_unique_record(operation) : T?\n      T::BaseQuery.new\n        \n{% for attribute in attribute_names %}\n          .{{ attribute.id }}.nilable_eq(operation.{{ attribute.id }}.value)\n        {% end %}\n\n        .first?\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/Validations","path":"Avram/Validations.html","kind":"module","full_name":"Avram::Validations","name":"Validations","abstract":false,"locations":[{"filename":"src/avram/validations.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"avram/Avram/Validations","kind":"module","full_name":"Avram::Validations","name":"Validations"}],"including_types":[{"html_id":"avram/Avram/DeleteOperation","kind":"class","full_name":"Avram::DeleteOperation(T)","name":"DeleteOperation"},{"html_id":"avram/Avram/Operation","kind":"class","full_name":"Avram::Operation","name":"Operation"},{"html_id":"avram/Avram/SaveOperation","kind":"class","full_name":"Avram::SaveOperation(T)","name":"SaveOperation"}],"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"doc":"A number of methods for validating Avram::Attributes\nAll validation methods return `Bool`. `false` if any error is added, otherwise `true`\n\nThis module is included in `Avram::Operation`, `Avram::SaveOperation`, and `Avram::DeleteOperation`","summary":"<p>A number of methods for validating Avram::Attributes All validation methods return <code><a href=\"../Bool.html\">Bool</a></code>.</p>","instance_methods":[{"html_id":"validate_acceptance_of(attribute:Avram::Attribute(Bool),message:Avram::Attribute::ErrorMessage=Avram.settings.i18n_backend.get(:validate_acceptance_of)):Bool-instance-method","name":"validate_acceptance_of","doc":"Validate whether an attribute was accepted (`true`)\n\nThis validation is only for Boolean Attributes. The attribute will be marked\nas invalid for any value other than `true`.","summary":"<p>Validate whether an attribute was accepted (<code>true</code>)</p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(Bool)"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_acceptance_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(attribute : Avram::Attribute(Bool), message : Avram::Attribute::ErrorMessage = Avram.settings.i18n_backend.get(:validate_acceptance_of)) : Bool","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../Bool.html\">Bool</a>), message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"t\">Avram</span>.settings.i18n_backend.get(<span class=\"n\">:validate_acceptance_of</span>)) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/validations.cr","line_number":109,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L109"},"def":{"name":"validate_acceptance_of","args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(Bool)"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_acceptance_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"return_type":"Bool","visibility":"Public","body":"no_errors = true\nif attribute.value != true\n  attribute.add_error(message)\n  no_errors = false\nend\n\nno_errors\n"},"external_var":false},{"html_id":"validate_at_most_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=Avram.settings.i18n_backend.get(:validate_at_most_one_filled)):Bool-instance-method","name":"validate_at_most_one_filled","doc":"Validates that at most one attribute is filled\n\nIf more than one attribute is filled it will mark all but the first filled\nfield invalid.","summary":"<p>Validates that at most one attribute is filled</p>","abstract":false,"args":[{"name":"attributes","external_name":"attributes","restriction":""},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_at_most_one_filled)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(*attributes, message : Avram::Attribute::ErrorMessage = Avram.settings.i18n_backend.get(:validate_at_most_one_filled)) : Bool","args_html":"(*attributes, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"t\">Avram</span>.settings.i18n_backend.get(<span class=\"n\">:validate_at_most_one_filled</span>)) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/validations.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L39"},"def":{"name":"validate_at_most_one_filled","args":[{"name":"attributes","external_name":"attributes","restriction":""},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_at_most_one_filled)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"splat_index":0,"return_type":"Bool","visibility":"Public","body":"no_errors = true\npresent_attributes = attributes.reject() do |__arg1|\n  __arg1.value.blank?\nend\n\nif present_attributes.size > 1\n  (present_attributes.skip(1)).each do |attr|\n    attr.add_error(message)\n    no_errors = false\n  end\nend\n\nno_errors\n"},"external_var":false},{"html_id":"validate_confirmation_of(attribute:Avram::Attribute(T),withconfirmation_attribute:Avram::Attribute(T),message:Avram::Attribute::ErrorMessage=Avram.settings.i18n_backend.get(:validate_confirmation_of)):BoolforallT-instance-method","name":"validate_confirmation_of","doc":"Validates that the values of two attributes are the same\n\nTakes two attributes and if the values are different the second attribute\n(`with`/`confirmation_attribute`) will be marked as invalid\n\nExample:\n\n```\nvalidate_confirmation_of password, with: password_confirmation\n```\n\nIf `password_confirmation` does not match, it will be marked invalid.","summary":"<p>Validates that the values of two attributes are the same</p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"confirmation_attribute","external_name":"with","restriction":"Avram::Attribute(T)"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_confirmation_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(attribute : Avram::Attribute(T), with confirmation_attribute : Avram::Attribute(T), message : Avram::Attribute::ErrorMessage = Avram.settings.i18n_backend.get(:validate_confirmation_of)) : Bool forall T","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(T), with confirmation_attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(T), message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"t\">Avram</span>.settings.i18n_backend.get(<span class=\"n\">:validate_confirmation_of</span>)) : <a href=\"../Bool.html\">Bool</a> forall T","location":{"filename":"src/avram/validations.cr","line_number":134,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L134"},"def":{"name":"validate_confirmation_of","args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"confirmation_attribute","external_name":"with","restriction":"Avram::Attribute(T)"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_confirmation_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"return_type":"Bool","visibility":"Public","body":"no_errors = true\nif attribute.value != confirmation_attribute.value\n  confirmation_attribute.add_error(message)\n  no_errors = false\nend\n\nno_errors\n"},"external_var":false},{"html_id":"validate_exactly_one_filled(*attributes,message:Avram::Attribute::ErrorMessage=Avram.settings.i18n_backend.get(:validate_exactly_one_filled)):Bool-instance-method","name":"validate_exactly_one_filled","doc":"Validates that at exactly one attribute is filled\n\nThis validation is used by `Avram::Polymorphic.polymorphic` to ensure\nthat a required polymorphic association is set.\n\nIf more than one attribute is filled it will mark all but the first filled\nfield invalid.\n\nIf no field is filled, the first field will be marked as invalid.","summary":"<p>Validates that at exactly one attribute is filled</p>","abstract":false,"args":[{"name":"attributes","external_name":"attributes","restriction":""},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_exactly_one_filled)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(*attributes, message : Avram::Attribute::ErrorMessage = Avram.settings.i18n_backend.get(:validate_exactly_one_filled)) : Bool","args_html":"(*attributes, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"t\">Avram</span>.settings.i18n_backend.get(<span class=\"n\">:validate_exactly_one_filled</span>)) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/validations.cr","line_number":65,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L65"},"def":{"name":"validate_exactly_one_filled","args":[{"name":"attributes","external_name":"attributes","restriction":""},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_exactly_one_filled)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"splat_index":0,"return_type":"Bool","visibility":"Public","body":"no_errors = validate_at_most_one_filled(*attributes)\npresent_attributes = attributes.reject() do |__arg2|\n  __arg2.value.blank?\nend\n\nif present_attributes.size.zero?\n  attributes.first.add_error(message)\n  no_errors = false\nend\n\nno_errors\n"},"external_var":false},{"html_id":"validate_format_of(attribute:Avram::Attribute(String),withregex:Regex,match:Bool=true,message:Avram::Attribute::ErrorMessage=Avram.settings.i18n_backend.get(:validate_format_of),allow_nil:Bool=false):Bool-instance-method","name":"validate_format_of","doc":"Validates that the passed in attributes matches the given regex\n\n```\nvalidate_format_of email, with: /[^@]+@[^\\.]+\\..+/\n```\n\nAlternatively, the `match` argument can be set to `false` to not match the\ngiven regex.","summary":"<p>Validates that the passed in attributes matches the given regex</p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(String)"},{"name":"regex","external_name":"with","restriction":"Regex"},{"name":"match","default_value":"true","external_name":"match","restriction":"Bool"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_format_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(String), with regex : Regex, match : Bool = true, message : Avram::Attribute::ErrorMessage = Avram.settings.i18n_backend.get(:validate_format_of), allow_nil : Bool = false) : Bool","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>), with regex : Regex, match : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">true</span>, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"t\">Avram</span>.settings.i18n_backend.get(<span class=\"n\">:validate_format_of</span>), allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/validations.cr","line_number":315,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L315"},"def":{"name":"validate_format_of","args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(String)"},{"name":"regex","external_name":"with","restriction":"Regex"},{"name":"match","default_value":"true","external_name":"match","restriction":"Bool"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_format_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"return_type":"Bool","visibility":"Public","body":"if allow_nil && attribute.value.nil?\nelse\n  matching = attribute.value.to_s.match(regex)\n\n  if (match && !matching) || (!match && matching)\n    attribute.add_error(message)\n    return false\n  end\nend\n\ntrue\n"},"external_var":false},{"html_id":"validate_inclusion_of(attribute:Avram::Attribute(T),inallowed_values:Enumerable(T),message:Avram::Attribute::ErrorMessage=Avram.settings.i18n_backend.get(:validate_inclusion_of),allow_nil:Bool=false):BoolforallT-instance-method","name":"validate_inclusion_of","doc":"Validates that the attribute value is in a list of allowed values\n\n```\nvalidate_inclusion_of state, in: [\"NY\", \"MA\"]\n```\n\nThis will mark `state` as invalid unless the value is `\"NY\"`, or `\"MA\"`.","summary":"<p>Validates that the attribute value is in a list of allowed values</p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"allowed_values","external_name":"in","restriction":"Enumerable(T)"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_inclusion_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(T), in allowed_values : Enumerable(T), message : Avram::Attribute::ErrorMessage = Avram.settings.i18n_backend.get(:validate_inclusion_of), allow_nil : Bool = false) : Bool forall T","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(T), in allowed_values : Enumerable(T), message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"t\">Avram</span>.settings.i18n_backend.get(<span class=\"n\">:validate_inclusion_of</span>), allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) : <a href=\"../Bool.html\">Bool</a> forall T","location":{"filename":"src/avram/validations.cr","line_number":155,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L155"},"def":{"name":"validate_inclusion_of","args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(T)"},{"name":"allowed_values","external_name":"in","restriction":"Enumerable(T)"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_inclusion_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"return_type":"Bool","visibility":"Public","body":"no_errors = true\nif value = attribute.value\n  if !(allowed_values.includes?(value))\n    attribute.add_error(message)\n    no_errors = false\n  end\nelse\n  if !allow_nil\n    attribute.add_error(message)\n    no_errors = false\n  end\nend\n\nno_errors\n"},"external_var":false},{"html_id":"validate_numeric(attribute:Avram::Attribute(Number),greater_than=nil,less_than=nil,message=nil,allow_nil:Bool=false):Bool-instance-method","name":"validate_numeric","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use validate_numeric with at_least/no_more_than instead of greater_than/less_than</p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(Number)"},{"name":"greater_than","default_value":"nil","external_name":"greater_than","restriction":""},{"name":"less_than","default_value":"nil","external_name":"less_than","restriction":""},{"name":"message","default_value":"nil","external_name":"message","restriction":""},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(Number), greater_than = nil, less_than = nil, message = nil, allow_nil : Bool = false) : Bool","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(Number), greater_than = <span class=\"n\">nil</span>, less_than = <span class=\"n\">nil</span>, message = <span class=\"n\">nil</span>, allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/validations.cr","line_number":246,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L246"},"def":{"name":"validate_numeric","args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(Number)"},{"name":"greater_than","default_value":"nil","external_name":"greater_than","restriction":""},{"name":"less_than","default_value":"nil","external_name":"less_than","restriction":""},{"name":"message","default_value":"nil","external_name":"message","restriction":""},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"return_type":"Bool","visibility":"Public","body":"validate_numeric(attribute, at_least: greater_than, no_more_than: less_than, message: message, allow_nil: allow_nil)"},"external_var":false},{"html_id":"validate_numeric(attribute:Avram::Attribute(Number),*,at_least=nil,no_more_than=nil,message=nil,allow_nil:Bool=false):Bool-instance-method","name":"validate_numeric","doc":"Validate a number is `at_least` and/or `no_more_than`\n\n```\nvalidate_numeric age, at_least: 18\nvalidate_numeric count, at_least: 0, no_more_than: 1200\n```\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>Validate a number is <code>at_least</code> and/or <code>no_more_than</code></p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(Number)"},{"name":"","external_name":"","restriction":""},{"name":"at_least","default_value":"nil","external_name":"at_least","restriction":""},{"name":"no_more_than","default_value":"nil","external_name":"no_more_than","restriction":""},{"name":"message","default_value":"nil","external_name":"message","restriction":""},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(Number), *, at_least = nil, no_more_than = nil, message = nil, allow_nil : Bool = false) : Bool","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(Number), *, at_least = <span class=\"n\">nil</span>, no_more_than = <span class=\"n\">nil</span>, message = <span class=\"n\">nil</span>, allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/validations.cr","line_number":263,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L263"},"def":{"name":"validate_numeric","args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(Number)"},{"name":"","external_name":"","restriction":""},{"name":"at_least","default_value":"nil","external_name":"at_least","restriction":""},{"name":"no_more_than","default_value":"nil","external_name":"no_more_than","restriction":""},{"name":"message","default_value":"nil","external_name":"message","restriction":""},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"splat_index":1,"return_type":"Bool","visibility":"Public","body":"no_errors = true\nif (at_least && no_more_than) && at_least > no_more_than\n  raise(ImpossibleValidation.new(attribute: attribute.name, message: \"number at least #{at_least} but no more than #{no_more_than}\"))\nend\n\nnumber = attribute.value\n\nif number.nil?\n  if allow_nil\n  else\n    attribute.add_error(Avram.settings.i18n_backend.get(:validate_numeric_nil))\n    no_errors = false\n  end\n  return no_errors\nend\n\nif at_least && number < at_least\n  attribute.add_error((message || (Avram.settings.i18n_backend.get(:validate_numeric_min))) % at_least)\n  no_errors = false\nend\n\nif no_more_than && number > no_more_than\n  attribute.add_error((message || (Avram.settings.i18n_backend.get(:validate_numeric_max))) % no_more_than)\n  no_errors = false\nend\n\nno_errors\n"},"external_var":false},{"html_id":"validate_required(*attributes,message:Avram::Attribute::ErrorMessage=Avram.settings.i18n_backend.get(:validate_required)):Bool-instance-method","name":"validate_required","doc":"Validates that the passed in attributes have values\n\nYou can pass in one or more attributes at a time. The attribute will be\nmarked as invalid if the value is `nil`, or \"blank\" (empty strings or strings with just whitespace)\n\n`false` is not considered invalid.\n\n```\nvalidate_required name, age, email\n```","summary":"<p>Validates that the passed in attributes have values</p>","abstract":false,"args":[{"name":"attributes","external_name":"attributes","restriction":""},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_required)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(*attributes, message : Avram::Attribute::ErrorMessage = Avram.settings.i18n_backend.get(:validate_required)) : Bool","args_html":"(*attributes, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"t\">Avram</span>.settings.i18n_backend.get(<span class=\"n\">:validate_required</span>)) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/validations.cr","line_number":90,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L90"},"def":{"name":"validate_required","args":[{"name":"attributes","external_name":"attributes","restriction":""},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_required)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"splat_index":0,"return_type":"Bool","visibility":"Public","body":"no_errors = true\nattributes.each do |attribute|\n  if attribute.value.blank_for_validates_required? && !attribute.allow_blank?\n    attribute.add_error(message)\n    no_errors = false\n  end\nend\n\nno_errors\n"},"external_var":false},{"html_id":"validate_size_of(attribute:Avram::Attribute(String)|Avram::Attribute(Array(T)),min:Number|Nil=nil,max:Number|Nil=nil,message:Avram::Attribute::ErrorMessage|Nil=nil,allow_nil:Bool=false):BoolforallT-instance-method","name":"validate_size_of","doc":"Validate the size of a `String` or `Array` is within a `min` and/or `max`\n\n```\nvalidate_size_of feedback, min: 18, max: 100\nvalidate_size_of password, min: 12\nvalidate_size_of options, max: 10\n```\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>Validate the size of a <code><a href=\"../String.html\">String</a></code> or <code><a href=\"../Array.html\">Array</a></code> is within a <code>min</code> and/or <code>max</code></p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(String) | Avram::Attribute(Array(T))"},{"name":"min","default_value":"nil","external_name":"min","restriction":"Number | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":"Number | ::Nil"},{"name":"message","default_value":"nil","external_name":"message","restriction":"Avram::Attribute::ErrorMessage | ::Nil"},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(String) | Avram::Attribute(Array(T)), min : Number | Nil = nil, max : Number | Nil = nil, message : Avram::Attribute::ErrorMessage | Nil = nil, allow_nil : Bool = false) : Bool forall T","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>) | <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../Array.html\">Array</a>(T)), min : Number | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, max : Number | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> | <a href=\"../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) : <a href=\"../Bool.html\">Bool</a> forall T","location":{"filename":"src/avram/validations.cr","line_number":210,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L210"},"def":{"name":"validate_size_of","args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(String) | Avram::Attribute(Array(T))"},{"name":"min","default_value":"nil","external_name":"min","restriction":"Number | ::Nil"},{"name":"max","default_value":"nil","external_name":"max","restriction":"Number | ::Nil"},{"name":"message","default_value":"nil","external_name":"message","restriction":"Avram::Attribute::ErrorMessage | ::Nil"},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"return_type":"Bool","visibility":"Public","body":"no_errors = true\nif (!min.nil? && !max.nil?) && min > max\n  raise(ImpossibleValidation.new(attribute: attribute.name, message: \"size greater than #{min} but less than #{max}\"))\nend\n\nif allow_nil && attribute.value.nil?\nelse\n  size = attribute.value.try(&.size) || 0\n\n  if !min.nil? && size < min\n    attribute.add_error((message || (Avram.settings.i18n_backend.get(:validate_min_size_of))) % min)\n    no_errors = false\n  end\n\n  if !max.nil? && size > max\n    attribute.add_error((message || (Avram.settings.i18n_backend.get(:validate_max_size_of))) % max)\n    no_errors = false\n  end\nend\n\nno_errors\n"},"external_var":false},{"html_id":"validate_size_of(attribute:Avram::Attribute(String)|Avram::Attribute(Array(T)),*,isexact_size:Number,message:Avram::Attribute::ErrorMessage=Avram.settings.i18n_backend.get(:validate_exact_size_of),allow_nil:Bool=false):BoolforallT-instance-method","name":"validate_size_of","doc":"Validate the size of a `String` or `Array` is exactly a certain size\n\n```\nvalidate_size_of api_key, is: 32\nvalidate_size_of theme_colors, is: 4\n```","summary":"<p>Validate the size of a <code><a href=\"../String.html\">String</a></code> or <code><a href=\"../Array.html\">Array</a></code> is exactly a certain size</p>","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(String) | Avram::Attribute(Array(T))"},{"name":"","external_name":"","restriction":""},{"name":"exact_size","external_name":"is","restriction":"Number"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_exact_size_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"args_string":"(attribute : Avram::Attribute(String) | Avram::Attribute(Array(T)), *, is exact_size : Number, message : Avram::Attribute::ErrorMessage = Avram.settings.i18n_backend.get(:validate_exact_size_of), allow_nil : Bool = false) : Bool forall T","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>) | <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../Array.html\">Array</a>(T)), *, is exact_size : Number, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"t\">Avram</span>.settings.i18n_backend.get(<span class=\"n\">:validate_exact_size_of</span>), allow_nil : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>) : <a href=\"../Bool.html\">Bool</a> forall T","location":{"filename":"src/avram/validations.cr","line_number":183,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L183"},"def":{"name":"validate_size_of","args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(String) | Avram::Attribute(Array(T))"},{"name":"","external_name":"","restriction":""},{"name":"exact_size","external_name":"is","restriction":"Number"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_exact_size_of)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"},{"name":"allow_nil","default_value":"false","external_name":"allow_nil","restriction":"Bool"}],"splat_index":1,"return_type":"Bool","visibility":"Public","body":"no_errors = true\nsize = attribute.value.try(&.size) || 0\nif size != exact_size\n  if !(allow_nil && attribute.value.nil?)\n    attribute.add_error(message % exact_size)\n    no_errors = false\n  end\nend\n\nno_errors\n"},"external_var":false},{"html_id":"validate_url_format(attribute:Avram::Attribute(String),scheme:String=\"https\",message:Avram::Attribute::ErrorMessage=Avram.settings.i18n_backend.get(:validate_url_format)):Bool-instance-method","name":"validate_url_format","abstract":false,"args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(String)"},{"name":"scheme","default_value":"\"https\"","external_name":"scheme","restriction":"String"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_url_format)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"args_string":"(attribute : Avram::Attribute(String), scheme : String = \"https\", message : Avram::Attribute::ErrorMessage = Avram.settings.i18n_backend.get(:validate_url_format)) : Bool","args_html":"(attribute : <a href=\"../Avram/Attribute.html\">Avram::Attribute</a>(<a href=\"../String.html\">String</a>), scheme : <a href=\"../String.html\">String</a> = <span class=\"s\">&quot;https&quot;</span>, message : <a href=\"../Avram/Attribute/ErrorMessage.html\">Avram::Attribute::ErrorMessage</a> = <span class=\"t\">Avram</span>.settings.i18n_backend.get(<span class=\"n\">:validate_url_format</span>)) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/avram/validations.cr","line_number":334,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L334"},"def":{"name":"validate_url_format","args":[{"name":"attribute","external_name":"attribute","restriction":"Avram::Attribute(String)"},{"name":"scheme","default_value":"\"https\"","external_name":"scheme","restriction":"String"},{"name":"message","default_value":"Avram.settings.i18n_backend.get(:validate_url_format)","external_name":"message","restriction":"Avram::Attribute::ErrorMessage"}],"return_type":"Bool","visibility":"Public","body":"if url = attribute.value.presence\n  uri = URI.parse(url)\n  if (uri.scheme != scheme) || uri.host.presence.nil?\n    attribute.add_error(message % scheme)\n    return false\n  end\nend\n\ntrue\n"},"external_var":false}],"macros":[{"html_id":"default_validations-macro","name":"default_validations","doc":"Defines an instance method that gets called\nduring validation of an operation. Define your default\nvalidations inside of the block.\n```\ndefault_validations do\n  validate_required some_attribute\nend\n```","summary":"<p>Defines an instance method that gets called during validation of an operation.</p>","abstract":false,"location":{"filename":"src/avram/validations.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/validations.cr#L22"},"def":{"name":"default_validations","visibility":"Public","body":"    \n# :nodoc:\n\n    def default_validations\n      \n{% if @type.methods.map(&.name).includes?((:default_validations).id) %}\n        previous_def\n      {% else %}\n        super\n      {% end %}\n\n\n      \n{{ yield }}\n\n    \nend\n  \n"}}]},{"html_id":"avram/Avram/Where","path":"Avram/Where.html","kind":"module","full_name":"Avram::Where","name":"Where","abstract":false,"locations":[{"filename":"src/avram/where.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram","kind":"module","full_name":"Avram","name":"Avram"},"types":[{"html_id":"avram/Avram/Where/Any","path":"Avram/Where/Any.html","kind":"class","full_name":"Avram::Where::Any","name":"Any","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":220,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L220"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:NotAny-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":225,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L225"},"def":{"name":"negated","return_type":"NotAny","visibility":"Public","body":"NotAny.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":221,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L221"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"&&\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":229,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L229"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} (#{placeholder_supplier.call})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/Condition","path":"Avram/Where/Condition.html","kind":"class","full_name":"Avram::Where::Condition","name":"Condition","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L19"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/Where/PrecedenceEnd","kind":"class","full_name":"Avram::Where::PrecedenceEnd","name":"PrecedenceEnd"},{"html_id":"avram/Avram/Where/PrecedenceStart","kind":"class","full_name":"Avram::Where::PrecedenceStart","name":"PrecedenceStart"},{"html_id":"avram/Avram/Where/Raw","kind":"class","full_name":"Avram::Where::Raw","name":"Raw"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"}],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"clone-instance-method","name":"clone","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L24"},"def":{"name":"clone","visibility":"Public","body":"self"},"external_var":false},{"html_id":"conjunction:Conjunction-instance-method","name":"conjunction","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L20"},"def":{"name":"conjunction","return_type":"Conjunction","visibility":"Public","body":"@conjunction"},"external_var":false},{"html_id":"conjunction=(conjunction:Conjunction)-instance-method","name":"conjunction=","abstract":false,"args":[{"name":"conjunction","external_name":"conjunction","restriction":"Conjunction"}],"args_string":"(conjunction : Conjunction)","args_html":"(conjunction : <a href=\"../../Avram/Where/Conjunction.html\">Conjunction</a>)","location":{"filename":"src/avram/where.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L20"},"def":{"name":"conjunction=","args":[{"name":"conjunction","external_name":"conjunction","restriction":"Conjunction"}],"visibility":"Public","body":"@conjunction = conjunction"},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":true,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L22"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":""},"external_var":false}]},{"html_id":"avram/Avram/Where/Conjunction","path":"Avram/Where/Conjunction.html","kind":"enum","full_name":"Avram::Where::Conjunction","name":"Conjunction","abstract":false,"ancestors":[{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L2"}],"repository_name":"avram","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"And","name":"And","value":"0"},{"id":"Or","name":"Or","value":"1"},{"id":"None","name":"None","value":"2"}],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"and?-instance-method","name":"and?","doc":"Returns `true` if this enum value equals `And`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/Where/Conjunction.html#And\">And</a></code></p>","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L3"},"def":{"name":"and?","visibility":"Public","body":"self == And"},"external_var":false},{"html_id":"none?-instance-method","name":"none?","doc":"Returns `true` if this enum value equals `None`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/Where/Conjunction.html#None\">None</a></code></p>","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L5"},"def":{"name":"none?","visibility":"Public","body":"self == None"},"external_var":false},{"html_id":"or?-instance-method","name":"or?","doc":"Returns `true` if this enum value equals `Or`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../../Avram/Where/Conjunction.html#Or\">Or</a></code></p>","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L4"},"def":{"name":"or?","visibility":"Public","body":"self == Or"},"external_var":false},{"html_id":"to_s-instance-method","name":"to_s","doc":"Returns a `String` representation of this enum member.\nIn the case of regular enums, this is just the name of the member.\nIn the case of flag enums, it's the names joined by vertical bars, or \"None\",\nif the value is zero.\n\nIf an enum's value doesn't match a member's value, the raw value\nis returned as a string.\n\n```\nColor::Red.to_s                     # => \"Red\"\nIOMode::None.to_s                   # => \"None\"\n(IOMode::Read | IOMode::Write).to_s # => \"Read | Write\"\n\nColor.new(10).to_s # => \"10\"\n```","summary":"<p>Returns a <code><a href=\"../../String.html\">String</a></code> representation of this enum member.</p>","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L7"},"def":{"name":"to_s","visibility":"Public","body":"case self\nwhen .and?\n  \"AND\"\nwhen .or?\n  \"OR\"\nelse\n  \"\"\nend"},"external_var":false}]},{"html_id":"avram/Avram/Where/Equal","path":"Avram/Where/Equal.html","kind":"class","full_name":"Avram::Where::Equal","name":"Equal","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":92,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L92"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:NotEqual-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":97,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L97"},"def":{"name":"negated","return_type":"NotEqual","visibility":"Public","body":"NotEqual.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":93,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L93"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"=\""},"external_var":false}]},{"html_id":"avram/Avram/Where/Excludes","path":"Avram/Where/Excludes.html","kind":"class","full_name":"Avram::Where::Excludes","name":"Excludes","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":262,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L262"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:Includes-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":267,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L267"},"def":{"name":"negated","return_type":"Includes","visibility":"Public","body":"Includes.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":263,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L263"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"!= ALL\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":271,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L271"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"#{placeholder_supplier.call} #{operator} (#{column})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/GreaterThan","path":"Avram/Where/GreaterThan.html","kind":"class","full_name":"Avram::Where::GreaterThan","name":"GreaterThan","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":112,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L112"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:LessThanOrEqualTo-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":117,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L117"},"def":{"name":"negated","return_type":"LessThanOrEqualTo","visibility":"Public","body":"LessThanOrEqualTo.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":113,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L113"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\">\""},"external_var":false}]},{"html_id":"avram/Avram/Where/GreaterThanOrEqualTo","path":"Avram/Where/GreaterThanOrEqualTo.html","kind":"class","full_name":"Avram::Where::GreaterThanOrEqualTo","name":"GreaterThanOrEqualTo","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":122,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L122"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:LessThan-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":127,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L127"},"def":{"name":"negated","return_type":"LessThan","visibility":"Public","body":"LessThan.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":123,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L123"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\">=\""},"external_var":false}]},{"html_id":"avram/Avram/Where/Ilike","path":"Avram/Where/Ilike.html","kind":"class","full_name":"Avram::Where::Ilike","name":"Ilike","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":162,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L162"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:NotIlike-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":167,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L167"},"def":{"name":"negated","return_type":"NotIlike","visibility":"Public","body":"NotIlike.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":163,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L163"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"ILIKE\""},"external_var":false}]},{"html_id":"avram/Avram/Where/In","path":"Avram/Where/In.html","kind":"class","full_name":"Avram::Where::In","name":"In","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":192,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L192"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:NotIn-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":197,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L197"},"def":{"name":"negated","return_type":"NotIn","visibility":"Public","body":"NotIn.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":193,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L193"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"= ANY\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":201,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L201"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} (#{placeholder_supplier.call})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/Includes","path":"Avram/Where/Includes.html","kind":"class","full_name":"Avram::Where::Includes","name":"Includes","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":248,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L248"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:Excludes-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":253,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L253"},"def":{"name":"negated","return_type":"Excludes","visibility":"Public","body":"Excludes.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":249,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L249"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"= ANY\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":257,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L257"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"#{placeholder_supplier.call} #{operator} (#{column})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/JsonbExcludes","path":"Avram/Where/JsonbExcludes.html","kind":"class","full_name":"Avram::Where::JsonbExcludes","name":"JsonbExcludes","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":358,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L358"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:JsonbIncludes-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":363,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L363"},"def":{"name":"negated","return_type":"JsonbIncludes","visibility":"Public","body":"JsonbIncludes.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":359,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L359"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"@>\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":367,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L367"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"NOT(#{column} #{operator} #{placeholder_supplier.call})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/JsonbHasAllKeys","path":"Avram/Where/JsonbHasAllKeys.html","kind":"class","full_name":"Avram::Where::JsonbHasAllKeys","name":"JsonbHasAllKeys","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":324,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L324"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:NotJsonbHasAllKeys-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":329,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L329"},"def":{"name":"negated","return_type":"NotJsonbHasAllKeys","visibility":"Public","body":"NotJsonbHasAllKeys.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":325,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L325"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"?&\""},"external_var":false}]},{"html_id":"avram/Avram/Where/JsonbHasAnyKeys","path":"Avram/Where/JsonbHasAnyKeys.html","kind":"class","full_name":"Avram::Where::JsonbHasAnyKeys","name":"JsonbHasAnyKeys","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":300,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L300"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:NotJsonbHasAnyKeys-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":305,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L305"},"def":{"name":"negated","return_type":"NotJsonbHasAnyKeys","visibility":"Public","body":"NotJsonbHasAnyKeys.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":301,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L301"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"?|\""},"external_var":false}]},{"html_id":"avram/Avram/Where/JsonbHasKey","path":"Avram/Where/JsonbHasKey.html","kind":"class","full_name":"Avram::Where::JsonbHasKey","name":"JsonbHasKey","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":276,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L276"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:NotJsonbHasKey-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":281,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L281"},"def":{"name":"negated","return_type":"NotJsonbHasKey","visibility":"Public","body":"NotJsonbHasKey.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":277,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L277"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"?\""},"external_var":false}]},{"html_id":"avram/Avram/Where/JsonbIn","path":"Avram/Where/JsonbIn.html","kind":"class","full_name":"Avram::Where::JsonbIn","name":"JsonbIn","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":372,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L372"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:JsonbNotIn-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":377,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L377"},"def":{"name":"negated","return_type":"JsonbNotIn","visibility":"Public","body":"JsonbNotIn.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":373,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L373"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"<@\""},"external_var":false}]},{"html_id":"avram/Avram/Where/JsonbIncludes","path":"Avram/Where/JsonbIncludes.html","kind":"class","full_name":"Avram::Where::JsonbIncludes","name":"JsonbIncludes","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":348,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L348"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:JsonbExcludes-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":353,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L353"},"def":{"name":"negated","return_type":"JsonbExcludes","visibility":"Public","body":"JsonbExcludes.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":349,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L349"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"@>\""},"external_var":false}]},{"html_id":"avram/Avram/Where/JsonbNotIn","path":"Avram/Where/JsonbNotIn.html","kind":"class","full_name":"Avram::Where::JsonbNotIn","name":"JsonbNotIn","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":382,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L382"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:JsonbIn-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":387,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L387"},"def":{"name":"negated","return_type":"JsonbIn","visibility":"Public","body":"JsonbIn.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":383,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L383"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"<@\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":391,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L391"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"NOT(#{column} #{operator} #{placeholder_supplier.call})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/LessThan","path":"Avram/Where/LessThan.html","kind":"class","full_name":"Avram::Where::LessThan","name":"LessThan","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":132,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L132"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:GreaterThanOrEqualTo-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":137,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L137"},"def":{"name":"negated","return_type":"GreaterThanOrEqualTo","visibility":"Public","body":"GreaterThanOrEqualTo.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":133,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L133"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"<\""},"external_var":false}]},{"html_id":"avram/Avram/Where/LessThanOrEqualTo","path":"Avram/Where/LessThanOrEqualTo.html","kind":"class","full_name":"Avram::Where::LessThanOrEqualTo","name":"LessThanOrEqualTo","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":142,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L142"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:GreaterThan-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":147,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L147"},"def":{"name":"negated","return_type":"GreaterThan","visibility":"Public","body":"GreaterThan.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":143,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L143"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"<=\""},"external_var":false}]},{"html_id":"avram/Avram/Where/Like","path":"Avram/Where/Like.html","kind":"class","full_name":"Avram::Where::Like","name":"Like","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":152,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L152"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:NotLike-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":157,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L157"},"def":{"name":"negated","return_type":"NotLike","visibility":"Public","body":"NotLike.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":153,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L153"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"LIKE\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NotAny","path":"Avram/Where/NotAny.html","kind":"class","full_name":"Avram::Where::NotAny","name":"NotAny","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":234,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L234"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:Any-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":239,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L239"},"def":{"name":"negated","return_type":"Any","visibility":"Public","body":"Any.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":235,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L235"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"&&\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":243,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L243"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"NOT(#{column} #{operator} (#{placeholder_supplier.call}))\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NotEqual","path":"Avram/Where/NotEqual.html","kind":"class","full_name":"Avram::Where::NotEqual","name":"NotEqual","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":102,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L102"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:Equal-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":107,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L107"},"def":{"name":"negated","return_type":"Equal","visibility":"Public","body":"Equal.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":103,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L103"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"!=\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NotIlike","path":"Avram/Where/NotIlike.html","kind":"class","full_name":"Avram::Where::NotIlike","name":"NotIlike","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":182,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L182"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:Ilike-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":187,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L187"},"def":{"name":"negated","return_type":"Ilike","visibility":"Public","body":"Ilike.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":183,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L183"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"NOT ILIKE\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NotIn","path":"Avram/Where/NotIn.html","kind":"class","full_name":"Avram::Where::NotIn","name":"NotIn","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":206,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L206"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:In-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":211,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L211"},"def":{"name":"negated","return_type":"In","visibility":"Public","body":"In.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":207,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L207"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"!= ALL\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":215,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L215"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} (#{placeholder_supplier.call})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NotJsonbHasAllKeys","path":"Avram/Where/NotJsonbHasAllKeys.html","kind":"class","full_name":"Avram::Where::NotJsonbHasAllKeys","name":"NotJsonbHasAllKeys","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":334,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L334"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:JsonbHasAllKeys-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":339,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L339"},"def":{"name":"negated","return_type":"JsonbHasAllKeys","visibility":"Public","body":"JsonbHasAllKeys.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":335,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L335"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"?&\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":343,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L343"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"NOT(#{column} #{operator} #{placeholder_supplier.call})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NotJsonbHasAnyKeys","path":"Avram/Where/NotJsonbHasAnyKeys.html","kind":"class","full_name":"Avram::Where::NotJsonbHasAnyKeys","name":"NotJsonbHasAnyKeys","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":310,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L310"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:JsonbHasAnyKeys-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":315,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L315"},"def":{"name":"negated","return_type":"JsonbHasAnyKeys","visibility":"Public","body":"JsonbHasAnyKeys.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":311,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L311"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"?|\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":319,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L319"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"NOT(#{column} #{operator} #{placeholder_supplier.call})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NotJsonbHasKey","path":"Avram/Where/NotJsonbHasKey.html","kind":"class","full_name":"Avram::Where::NotJsonbHasKey","name":"NotJsonbHasKey","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":286,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L286"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:JsonbHasKey-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":291,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L291"},"def":{"name":"negated","return_type":"JsonbHasKey","visibility":"Public","body":"JsonbHasKey.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":287,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L287"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"?\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":295,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L295"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"NOT(#{column} #{operator} #{placeholder_supplier.call})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NotLike","path":"Avram/Where/NotLike.html","kind":"class","full_name":"Avram::Where::NotLike","name":"NotLike","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":172,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L172"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:Like-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":177,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L177"},"def":{"name":"negated","return_type":"Like","visibility":"Public","body":"Like.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":173,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L173"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"NOT LIKE\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NotNull","path":"Avram/Where/NotNull.html","kind":"class","full_name":"Avram::Where::NotNull","name":"NotNull","abstract":false,"superclass":{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":82,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L82"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:Null-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":87,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L87"},"def":{"name":"negated","return_type":"Null","visibility":"Public","body":"Null.new(column)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":83,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L83"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"IS NOT\""},"external_var":false}]},{"html_id":"avram/Avram/Where/Null","path":"Avram/Where/Null.html","kind":"class","full_name":"Avram::Where::Null","name":"Null","abstract":false,"superclass":{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":72,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L72"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:NotNull-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":77,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L77"},"def":{"name":"negated","return_type":"NotNull","visibility":"Public","body":"NotNull.new(column)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":73,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L73"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"IS\""},"external_var":false}]},{"html_id":"avram/Avram/Where/NullSqlClause","path":"Avram/Where/NullSqlClause.html","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause","abstract":true,"superclass":{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":66,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L66"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/Where/NotNull","kind":"class","full_name":"Avram::Where::NotNull","name":"NotNull"},{"html_id":"avram/Avram/Where/Null","kind":"class","full_name":"Avram::Where::Null","name":"Null"}],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"prepare(_placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"_placeholder_supplier","external_name":"_placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(_placeholder_supplier : Proc(String)) : String","args_html":"(_placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":67,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L67"},"def":{"name":"prepare","args":[{"name":"_placeholder_supplier","external_name":"_placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} NULL\""},"external_var":false}]},{"html_id":"avram/Avram/Where/PrecedenceEnd","path":"Avram/Where/PrecedenceEnd.html","kind":"class","full_name":"Avram::Where::PrecedenceEnd","name":"PrecedenceEnd","abstract":false,"superclass":{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},"ancestors":[{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":39,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L39"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L40"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\")\""},"external_var":false}]},{"html_id":"avram/Avram/Where/PrecedenceStart","path":"Avram/Where/PrecedenceStart.html","kind":"class","full_name":"Avram::Where::PrecedenceStart","name":"PrecedenceStart","abstract":false,"superclass":{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},"ancestors":[{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L29"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":30,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L30"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L34"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"(\""},"external_var":false}]},{"html_id":"avram/Avram/Where/Raw","path":"Avram/Where/Raw.html","kind":"class","full_name":"Avram::Where::Raw","name":"Raw","abstract":false,"superclass":{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},"ancestors":[{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":424,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L424"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"constructors":[{"html_id":"new(statement:String,*bind_vars)-class-method","name":"new","abstract":false,"args":[{"name":"statement","external_name":"statement","restriction":"String"},{"name":"bind_vars","external_name":"bind_vars","restriction":""}],"args_string":"(statement : String, *bind_vars)","args_html":"(statement : <a href=\"../../String.html\">String</a>, *bind_vars)","location":{"filename":"src/avram/where.cr","line_number":427,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L427"},"def":{"name":"new","args":[{"name":"statement","external_name":"statement","restriction":"String"},{"name":"bind_vars","external_name":"bind_vars","restriction":""}],"splat_index":1,"visibility":"Public","body":"new(statement, args: bind_vars.to_a)"},"external_var":false},{"html_id":"new(statement:String,*,argsbind_vars:Array)-class-method","name":"new","abstract":false,"args":[{"name":"statement","external_name":"statement","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"bind_vars","external_name":"args","restriction":"Array"}],"args_string":"(statement : String, *, args bind_vars : Array)","args_html":"(statement : <a href=\"../../String.html\">String</a>, *, args bind_vars : <a href=\"../../Array.html\">Array</a>)","location":{"filename":"src/avram/where.cr","line_number":431,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L431"},"def":{"name":"new","args":[{"name":"statement","external_name":"statement","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"bind_vars","external_name":"args","restriction":"Array"}],"splat_index":1,"visibility":"Public","body":"_ = allocate\n_.initialize(statement, args: bind_vars)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":436,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L436"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"@clause"},"external_var":false}]},{"html_id":"avram/Avram/Where/SqlClause","path":"Avram/Where/SqlClause.html","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause","abstract":true,"superclass":{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},"ancestors":[{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":45,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L45"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/Where/NullSqlClause","kind":"class","full_name":"Avram::Where::NullSqlClause","name":"NullSqlClause"},{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"}],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"constructors":[{"html_id":"new(column:String|Symbol)-class-method","name":"new","abstract":false,"args":[{"name":"column","external_name":"column","restriction":"::String | ::Symbol"}],"args_string":"(column : String | Symbol)","args_html":"(column : <a href=\"../../String.html\">String</a> | Symbol)","location":{"filename":"src/avram/where.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L48"},"def":{"name":"new","args":[{"name":"column","external_name":"column","restriction":"::String | ::Symbol"}],"visibility":"Public","body":"_ = allocate\n_.initialize(column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"column:Symbol|String-instance-method","name":"column","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":46,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L46"},"def":{"name":"column","return_type":"Symbol | String","visibility":"Public","body":"@column"},"external_var":false},{"html_id":"negated:SqlClause-instance-method","name":"negated","abstract":true,"location":{"filename":"src/avram/where.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L52"},"def":{"name":"negated","return_type":"SqlClause","visibility":"Public","body":""},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":true,"location":{"filename":"src/avram/where.cr","line_number":51,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L51"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":54,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L54"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} #{placeholder_supplier.call}\""},"external_var":false}]},{"html_id":"avram/Avram/Where/TsMatch","path":"Avram/Where/TsMatch.html","kind":"class","full_name":"Avram::Where::TsMatch","name":"TsMatch","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":396,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L396"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:TsNotMatch-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":401,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L401"},"def":{"name":"negated","return_type":"TsNotMatch","visibility":"Public","body":"TsNotMatch.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":397,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L397"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"@@\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":405,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L405"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"#{column} #{operator} TO_TSQUERY(#{placeholder_supplier.call})\""},"external_var":false}]},{"html_id":"avram/Avram/Where/TsNotMatch","path":"Avram/Where/TsNotMatch.html","kind":"class","full_name":"Avram::Where::TsNotMatch","name":"TsNotMatch","abstract":false,"superclass":{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause"},{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":410,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L410"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"instance_methods":[{"html_id":"negated:TsMatch-instance-method","name":"negated","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":415,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L415"},"def":{"name":"negated","return_type":"TsMatch","visibility":"Public","body":"TsMatch.new(column, value)"},"external_var":false},{"html_id":"operator:String-instance-method","name":"operator","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":411,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L411"},"def":{"name":"operator","return_type":"String","visibility":"Public","body":"\"@@\""},"external_var":false},{"html_id":"prepare(placeholder_supplier:Proc(String)):String-instance-method","name":"prepare","abstract":false,"args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"args_string":"(placeholder_supplier : Proc(String)) : String","args_html":"(placeholder_supplier : Proc(<a href=\"../../String.html\">String</a>)) : <a href=\"../../String.html\">String</a>","location":{"filename":"src/avram/where.cr","line_number":419,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L419"},"def":{"name":"prepare","args":[{"name":"placeholder_supplier","external_name":"placeholder_supplier","restriction":"Proc(String)"}],"return_type":"String","visibility":"Public","body":"\"NOT(#{column} #{operator} TO_TSQUERY(#{placeholder_supplier.call}))\""},"external_var":false}]},{"html_id":"avram/Avram/Where/ValueHoldingSqlClause","path":"Avram/Where/ValueHoldingSqlClause.html","kind":"class","full_name":"Avram::Where::ValueHoldingSqlClause","name":"ValueHoldingSqlClause","abstract":true,"superclass":{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},"ancestors":[{"html_id":"avram/Avram/Where/SqlClause","kind":"class","full_name":"Avram::Where::SqlClause","name":"SqlClause"},{"html_id":"avram/Avram/Where/Condition","kind":"class","full_name":"Avram::Where::Condition","name":"Condition"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/where.cr","line_number":59,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L59"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"avram/Avram/Where/Any","kind":"class","full_name":"Avram::Where::Any","name":"Any"},{"html_id":"avram/Avram/Where/Equal","kind":"class","full_name":"Avram::Where::Equal","name":"Equal"},{"html_id":"avram/Avram/Where/Excludes","kind":"class","full_name":"Avram::Where::Excludes","name":"Excludes"},{"html_id":"avram/Avram/Where/GreaterThan","kind":"class","full_name":"Avram::Where::GreaterThan","name":"GreaterThan"},{"html_id":"avram/Avram/Where/GreaterThanOrEqualTo","kind":"class","full_name":"Avram::Where::GreaterThanOrEqualTo","name":"GreaterThanOrEqualTo"},{"html_id":"avram/Avram/Where/Ilike","kind":"class","full_name":"Avram::Where::Ilike","name":"Ilike"},{"html_id":"avram/Avram/Where/In","kind":"class","full_name":"Avram::Where::In","name":"In"},{"html_id":"avram/Avram/Where/Includes","kind":"class","full_name":"Avram::Where::Includes","name":"Includes"},{"html_id":"avram/Avram/Where/JsonbExcludes","kind":"class","full_name":"Avram::Where::JsonbExcludes","name":"JsonbExcludes"},{"html_id":"avram/Avram/Where/JsonbHasAllKeys","kind":"class","full_name":"Avram::Where::JsonbHasAllKeys","name":"JsonbHasAllKeys"},{"html_id":"avram/Avram/Where/JsonbHasAnyKeys","kind":"class","full_name":"Avram::Where::JsonbHasAnyKeys","name":"JsonbHasAnyKeys"},{"html_id":"avram/Avram/Where/JsonbHasKey","kind":"class","full_name":"Avram::Where::JsonbHasKey","name":"JsonbHasKey"},{"html_id":"avram/Avram/Where/JsonbIn","kind":"class","full_name":"Avram::Where::JsonbIn","name":"JsonbIn"},{"html_id":"avram/Avram/Where/JsonbIncludes","kind":"class","full_name":"Avram::Where::JsonbIncludes","name":"JsonbIncludes"},{"html_id":"avram/Avram/Where/JsonbNotIn","kind":"class","full_name":"Avram::Where::JsonbNotIn","name":"JsonbNotIn"},{"html_id":"avram/Avram/Where/LessThan","kind":"class","full_name":"Avram::Where::LessThan","name":"LessThan"},{"html_id":"avram/Avram/Where/LessThanOrEqualTo","kind":"class","full_name":"Avram::Where::LessThanOrEqualTo","name":"LessThanOrEqualTo"},{"html_id":"avram/Avram/Where/Like","kind":"class","full_name":"Avram::Where::Like","name":"Like"},{"html_id":"avram/Avram/Where/NotAny","kind":"class","full_name":"Avram::Where::NotAny","name":"NotAny"},{"html_id":"avram/Avram/Where/NotEqual","kind":"class","full_name":"Avram::Where::NotEqual","name":"NotEqual"},{"html_id":"avram/Avram/Where/NotIlike","kind":"class","full_name":"Avram::Where::NotIlike","name":"NotIlike"},{"html_id":"avram/Avram/Where/NotIn","kind":"class","full_name":"Avram::Where::NotIn","name":"NotIn"},{"html_id":"avram/Avram/Where/NotJsonbHasAllKeys","kind":"class","full_name":"Avram::Where::NotJsonbHasAllKeys","name":"NotJsonbHasAllKeys"},{"html_id":"avram/Avram/Where/NotJsonbHasAnyKeys","kind":"class","full_name":"Avram::Where::NotJsonbHasAnyKeys","name":"NotJsonbHasAnyKeys"},{"html_id":"avram/Avram/Where/NotJsonbHasKey","kind":"class","full_name":"Avram::Where::NotJsonbHasKey","name":"NotJsonbHasKey"},{"html_id":"avram/Avram/Where/NotLike","kind":"class","full_name":"Avram::Where::NotLike","name":"NotLike"},{"html_id":"avram/Avram/Where/TsMatch","kind":"class","full_name":"Avram::Where::TsMatch","name":"TsMatch"},{"html_id":"avram/Avram/Where/TsNotMatch","kind":"class","full_name":"Avram::Where::TsNotMatch","name":"TsNotMatch"}],"namespace":{"html_id":"avram/Avram/Where","kind":"module","full_name":"Avram::Where","name":"Where"},"constructors":[{"html_id":"new(column,value:Array(Int32)|Array(String)|String)-class-method","name":"new","abstract":false,"args":[{"name":"column","external_name":"column","restriction":""},{"name":"value","external_name":"value","restriction":"::Array(::Int32) | ::Array(::String) | ::String"}],"args_string":"(column, value : Array(Int32) | Array(String) | String)","args_html":"(column, value : <a href=\"../../Array.html\">Array</a>(<a href=\"../../Int32.html\">Int32</a>) | <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>) | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/where.cr","line_number":62,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L62"},"def":{"name":"new","args":[{"name":"column","external_name":"column","restriction":""},{"name":"value","external_name":"value","restriction":"::Array(::Int32) | ::Array(::String) | ::String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(column, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"value:String|Array(String)|Array(Int32)-instance-method","name":"value","abstract":false,"location":{"filename":"src/avram/where.cr","line_number":60,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/where.cr#L60"},"def":{"name":"value","return_type":"String | Array(String) | Array(Int32)","visibility":"Public","body":"@value"},"external_var":false}]}]}]},{"html_id":"avram/BaseTask","path":"BaseTask.html","kind":"class","full_name":"BaseTask","name":"BaseTask","abstract":true,"superclass":{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},"ancestors":[{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/base_task.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/base_task.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"subclasses":[{"html_id":"avram/Db/Create","kind":"class","full_name":"Db::Create","name":"Create"},{"html_id":"avram/Db/Drop","kind":"class","full_name":"Db::Drop","name":"Drop"},{"html_id":"avram/Db/Migrate","kind":"class","full_name":"Db::Migrate","name":"Migrate"},{"html_id":"avram/Db/Migrate/One","kind":"class","full_name":"Db::Migrate::One","name":"One"},{"html_id":"avram/Db/Migrations/Status","kind":"class","full_name":"Db::Migrations::Status","name":"Status"},{"html_id":"avram/Db/Redo","kind":"class","full_name":"Db::Redo","name":"Redo"},{"html_id":"avram/Db/Reset","kind":"class","full_name":"Db::Reset","name":"Reset"},{"html_id":"avram/Db/Rollback","kind":"class","full_name":"Db::Rollback","name":"Rollback"},{"html_id":"avram/Db/RollbackAll","kind":"class","full_name":"Db::RollbackAll","name":"RollbackAll"},{"html_id":"avram/Db/RollbackTo","kind":"class","full_name":"Db::RollbackTo","name":"RollbackTo"},{"html_id":"avram/Db/Schema/Dump","kind":"class","full_name":"Db::Schema::Dump","name":"Dump"},{"html_id":"avram/Db/Schema/Restore","kind":"class","full_name":"Db::Schema::Restore","name":"Restore"},{"html_id":"avram/Db/Setup","kind":"class","full_name":"Db::Setup","name":"Setup"},{"html_id":"avram/Db/VerifyConnection","kind":"class","full_name":"Db::VerifyConnection","name":"VerifyConnection"}],"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/base_task.cr#L1"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nRun this task with 'lucky #{task_name}'\".strip"},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"BaseTask.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/base_task.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"base_task\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/base_task.cr#L1"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"\""},"external_var":false}],"instance_methods":[{"html_id":"call-instance-method","name":"call","abstract":false,"location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/base_task.cr#L4"},"def":{"name":"call","visibility":"Public","body":"Avram::Migrator.run do\n  run_task\nend"},"external_var":false},{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"Array.html\">Array</a>(<a href=\"String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/base_task.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":true,"location":{"filename":"src/avram/tasks/db/base_task.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/base_task.cr#L2"},"def":{"name":"run_task","visibility":"Public","body":""},"external_var":false}]},{"html_id":"avram/Bool","path":"Bool.html","kind":"struct","full_name":"Bool","name":"Bool","abstract":false,"superclass":{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/lucky/src/charms/bool_extensions.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/lucky/src/charms/bool_extensions.cr#L3"},{"filename":"src/avram/blank_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L1"},{"filename":"src/avram/charms/bool_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L1"},{"filename":"src/avram/object_extensions.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L26"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"doc":"Bool has only two possible values: `true` and `false`. They are constructed using these literals:\n\n```\ntrue  # A Bool that is true\nfalse # A Bool that is false\n```\n\nSee [`Bool` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/bool.html) in the language reference.","summary":"<p>Bool has only two possible values: <code>true</code> and <code>false</code>.</p>","class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L2"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/avram/blank_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L2"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"false"},"external_var":false},{"html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","abstract":false,"location":{"filename":"src/avram/object_extensions.cr","line_number":27,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L27"},"def":{"name":"blank_for_validates_required?","return_type":"Bool","visibility":"Public","body":"false"},"external_var":false}],"types":[{"html_id":"avram/Bool/Lucky","path":"Bool/Lucky.html","kind":"module","full_name":"Bool::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/bool_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Bool","kind":"struct","full_name":"Bool","name":"Bool"},"class_methods":[{"html_id":"criteria(query:T,column:Symbol|String)forallT-class-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(query : T, column : Symbol | String) forall T","args_html":"(query : T, column : Symbol | <a href=\"../String.html\">String</a>) forall T","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L10"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"Criteria(T, Bool).new(query, column)"},"external_var":false}],"instance_methods":[{"html_id":"parse(value:String):SuccessfulCast(Bool)|FailedCast-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : SuccessfulCast(Bool) | FailedCast","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Bool.html\">Bool</a>) | <a href=\"../Avram/Type/FailedCast.html\">FailedCast</a>","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L14"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"SuccessfulCast(Bool) | FailedCast","visibility":"Public","body":"if ([\"true\", \"1\"] of ::String).includes?(value)\n  SuccessfulCast(Bool).new(true)\nelse\n  if ([\"false\", \"0\"] of ::String).includes?(value)\n    SuccessfulCast(Bool).new(false)\n  else\n    FailedCast.new\n  end\nend"},"external_var":false},{"html_id":"parse(value:Bool):SuccessfulCast(Bool)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool) : SuccessfulCast(Bool)","args_html":"(value : <a href=\"../Bool.html\">Bool</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L24"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"return_type":"SuccessfulCast(Bool)","visibility":"Public","body":"SuccessfulCast(Bool).new(value)"},"external_var":false},{"html_id":"parse(values:Array(Bool)):SuccessfulCast(Array(Bool))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Bool)"}],"args_string":"(values : Array(Bool)) : SuccessfulCast(Array(Bool))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Bool.html\">Bool</a>)) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Array.html\">Array</a>(<a href=\"../Bool.html\">Bool</a>))","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L28"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(Bool)"}],"return_type":"SuccessfulCast(Array(Bool))","visibility":"Public","body":"SuccessfulCast(Array(Bool)).new(values)"},"external_var":false},{"html_id":"to_db(value:Bool):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool) : String","args_html":"(value : <a href=\"../Bool.html\">Bool</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L32"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"Bool"}],"return_type":"String","visibility":"Public","body":"value.to_s"},"external_var":false},{"html_id":"to_db(values:Array(Bool))-instance-method","name":"to_db","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Bool)"}],"args_string":"(values : Array(Bool))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Bool.html\">Bool</a>))","location":{"filename":"src/avram/charms/bool_extensions.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L36"},"def":{"name":"to_db","args":[{"name":"values","external_name":"values","restriction":"Array(Bool)"}],"visibility":"Public","body":"PQ::Param.encode_array(values)"},"external_var":false}],"types":[{"html_id":"avram/Bool/Lucky/ColumnType","path":"Bool/Lucky/ColumnType.html","kind":"alias","full_name":"Bool::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/bool_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Bool","aliased_html":"<a href=\"../../Bool.html\">Bool</a>","const":false,"namespace":{"html_id":"avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"}},{"html_id":"avram/Bool/Lucky/Criteria","path":"Bool/Lucky/Criteria.html","kind":"class","full_name":"Bool::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/bool_extensions.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/bool_extensions.cr#L40"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Bool/Lucky","kind":"module","full_name":"Bool::Lucky","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]}]}]},{"html_id":"avram/Char","path":"Char.html","kind":"struct","full_name":"Char","name":"Char","abstract":false,"superclass":{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"avram/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/lucky/src/charms/object.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/lucky/src/charms/object.cr#L18"},{"filename":"src/avram/object_extensions.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L32"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"doc":"A `Char` represents a [Unicode](http://en.wikipedia.org/wiki/Unicode) [code point](http://en.wikipedia.org/wiki/Code_point).\nIt occupies 32 bits.\n\nIt is created by enclosing an UTF-8 character in single quotes.\n\n```\n'a'\n'z'\n'0'\n'_'\n'あ'\n```\n\nYou can use a backslash to denote some characters:\n\n```\n'\\'' # single quote\n'\\\\' # backslash\n'\\e' # escape\n'\\f' # form feed\n'\\n' # newline\n'\\r' # carriage return\n'\\t' # tab\n'\\v' # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n'\\u0041' # == 'A'\n```\n\nOr you can use curly braces and specify up to four hexadecimal numbers:\n\n```\n'\\u{41}' # == 'A'\n```\n\nSee [`Char` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/char.html) in the language reference.","summary":"<p>A <code><a href=\"Char.html\">Char</a></code> represents a <a href=\"http://en.wikipedia.org/wiki/Unicode\">Unicode</a> <a href=\"http://en.wikipedia.org/wiki/Code_point\">code point</a>.</p>","instance_methods":[{"html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","abstract":false,"location":{"filename":"src/avram/object_extensions.cr","line_number":45,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L45"},"def":{"name":"blank_for_validates_required?","return_type":"Bool","visibility":"Public","body":"blank?"},"external_var":false}]},{"html_id":"avram/DB","path":"DB.html","kind":"module","full_name":"DB","name":"DB","abstract":false,"locations":[{"filename":"lib/db/src/db.cr","line_number":82,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db.cr#L82"},{"filename":"lib/db/src/db/begin_transaction.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/begin_transaction.cr#L1"},{"filename":"lib/db/src/db/connection.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/connection.cr#L1"},{"filename":"lib/db/src/db/connection_builder.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/connection_builder.cr#L1"},{"filename":"lib/db/src/db/connection_context.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/connection_context.cr#L1"},{"filename":"lib/db/src/db/database.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/database.cr#L4"},{"filename":"lib/db/src/db/disposable.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/disposable.cr#L1"},{"filename":"lib/db/src/db/driver.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/driver.cr#L1"},{"filename":"lib/db/src/db/enumerable_concat.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/enumerable_concat.cr#L1"},{"filename":"lib/db/src/db/error.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/error.cr#L1"},{"filename":"lib/db/src/db/mapping.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/mapping.cr#L1"},{"filename":"lib/db/src/db/pool.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/pool.cr#L5"},{"filename":"lib/db/src/db/pool_prepared_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/pool_prepared_statement.cr#L1"},{"filename":"lib/db/src/db/pool_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/pool_statement.cr#L1"},{"filename":"lib/db/src/db/pool_unprepared_statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/pool_unprepared_statement.cr#L1"},{"filename":"lib/db/src/db/query_methods.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/query_methods.cr#L1"},{"filename":"lib/db/src/db/result_set.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/result_set.cr#L1"},{"filename":"lib/db/src/db/serializable.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/serializable.cr#L1"},{"filename":"lib/db/src/db/session_methods.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/session_methods.cr#L1"},{"filename":"lib/db/src/db/statement.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/statement.cr#L1"},{"filename":"lib/db/src/db/string_key_cache.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/string_key_cache.cr#L1"},{"filename":"lib/db/src/db/transaction.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/transaction.cr#L1"},{"filename":"src/ext/db/connection.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/db/connection.cr#L1"},{"filename":"src/ext/db/transaction.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/db/transaction.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"doc":"The DB module is a unified interface for database access.\nIndividual database systems are supported by specific database driver shards.\n\nAvailable drivers include:\n* [crystal-lang/crystal-sqlite3](https://github.com/crystal-lang/crystal-sqlite3) for SQLite\n* [crystal-lang/crystal-mysql](https://github.com/crystal-lang/crystal-mysql) for MySQL and MariaDB\n* [will/crystal-pg](https://github.com/will/crystal-pg) for PostgreSQL\n* [kaukas/crystal-cassandra](https://github.com/kaukas/crystal-cassandra) for Cassandra\n\nFor basic instructions on implementing a new database driver, check `Driver` and the existing drivers.\n\nDB manages a connection pool. The connection pool can be configured by query parameters to the\nconnection `URI` as described in `Database`.\n\n### Usage\n\nAssuming `crystal-sqlite3` is included a SQLite3 database can be opened with `#open`.\n\n```\ndb = DB.open \"sqlite3:./path/to/db/file.db\"\ndb.close\n```\n\nIf a block is given to `#open` the database is closed automatically\n\n```\nDB.open \"sqlite3:./file.db\" do |db|\n  # work with db\nend # db is closed\n```\n\nIn the code above `db` is a `Database`. Methods available for querying it are described in `QueryMethods`.\n\nThree kind of statements can be performed:\n1. `Database#exec` waits no response from the database.\n2. `Database#scalar` reads a single value of the response.\n3. `Database#query` returns a ResultSet that allows iteration over the rows in the response and column information.\n\nAll of the above methods allows parametrised query. Either positional or named arguments.\n\nCheck a full working version:\n\nThe following example uses SQLite where `?` indicates the arguments. If PostgreSQL is used `$1`, `$2`, etc. should be used. `crystal-db` does not interpret the statements.\n\n```\nrequire \"db\"\nrequire \"sqlite3\"\n\nDB.open \"sqlite3:./file.db\" do |db|\n  # When using the pg driver, use $1, $2, etc. instead of ?\n  db.exec \"create table contacts (name text, age integer)\"\n  db.exec \"insert into contacts values (?, ?)\", \"John Doe\", 30\n\n  args = [] of DB::Any\n  args << \"Sarah\"\n  args << 33\n  db.exec \"insert into contacts values (?, ?)\", args: args\n\n  puts \"max age:\"\n  puts db.scalar \"select max(age) from contacts\" # => 33\n\n  puts \"contacts:\"\n  db.query \"select name, age from contacts order by age desc\" do |rs|\n    puts \"#{rs.column_name(0)} (#{rs.column_name(1)})\"\n    # => name (age)\n    rs.each do\n      puts \"#{rs.read(String)} (#{rs.read(Int32)})\"\n      # => Sarah (33)\n      # => John Doe (30)\n    end\n  end\nend\n```\n\n### Object mapping\n\nThe `DB::Serializable` module implements a declarative mapping from DB result\nsets to Crystal types.","summary":"<p>The DB module is a unified interface for database access.</p>","types":[{"html_id":"avram/DB/Connection","path":"DB/Connection.html","kind":"class","full_name":"DB::Connection","name":"Connection","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/DB/BeginTransaction","kind":"module","full_name":"DB::BeginTransaction","name":"BeginTransaction"},{"html_id":"avram/DB/SessionMethods","kind":"module","full_name":"DB::SessionMethods","name":"SessionMethods"},{"html_id":"avram/DB/QueryMethods","kind":"module","full_name":"DB::QueryMethods","name":"QueryMethods"},{"html_id":"avram/DB/Disposable","kind":"module","full_name":"DB::Disposable","name":"Disposable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/db/src/db/connection.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/connection.cr#L21"},{"filename":"lib/db/src/db/error.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/error.cr#L2"},{"filename":"src/ext/db/connection.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/db/connection.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/DB/BeginTransaction","kind":"module","full_name":"DB::BeginTransaction","name":"BeginTransaction"},{"html_id":"avram/DB/Disposable","kind":"module","full_name":"DB::Disposable","name":"Disposable"},{"html_id":"avram/DB/SessionMethods","kind":"module","full_name":"DB::SessionMethods","name":"SessionMethods"}],"namespace":{"html_id":"avram/DB","kind":"module","full_name":"DB","name":"DB"},"doc":"Database driver implementors must subclass `Connection`.\n\nRepresents one active connection to a database.\n\nUsers should never instantiate a `Connection` manually. Use `DB#open` or `Database#connection`.\n\nRefer to `QueryMethods` for documentation about querying the database through this connection.\n\n### Note to implementors\n\nThe connection must be initialized in `#initialize` and closed in `#do_close`.\n\nOverride `#build_prepared_statement` method in order to return a prepared `Statement` to allow querying.\nOverride `#build_unprepared_statement` method in order to return a unprepared `Statement` to allow querying.\nSee also `Statement` to define how the statements are executed.\n\nIf at any give moment the connection is lost a DB::ConnectionLost should be raised. This will\nallow the connection pool to try to reconnect or use another connection if available.\n","summary":"<p>Database driver implementors must subclass <code><a href=\"../DB/Connection.html\">Connection</a></code>.</p>"},{"html_id":"avram/DB/SavePointTransaction","path":"DB/SavePointTransaction.html","kind":"class","full_name":"DB::SavePointTransaction","name":"SavePointTransaction","abstract":false,"superclass":{"html_id":"avram/DB/Transaction","kind":"class","full_name":"DB::Transaction","name":"Transaction"},"ancestors":[{"html_id":"avram/DB/Transaction","kind":"class","full_name":"DB::Transaction","name":"Transaction"},{"html_id":"avram/DB/BeginTransaction","kind":"module","full_name":"DB::BeginTransaction","name":"BeginTransaction"},{"html_id":"avram/DB/Disposable","kind":"module","full_name":"DB::Disposable","name":"Disposable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/db/src/db/transaction.cr","line_number":94,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/transaction.cr#L94"},{"filename":"src/ext/db/transaction.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/db/transaction.cr#L20"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/DB","kind":"module","full_name":"DB","name":"DB"},"constructors":[{"html_id":"new(parent:Transaction,savepoint_name:String)-class-method","name":"new","abstract":false,"args":[{"name":"parent","external_name":"parent","restriction":"Transaction"},{"name":"savepoint_name","external_name":"savepoint_name","restriction":"String"}],"args_string":"(parent : Transaction, savepoint_name : String)","args_html":"(parent : <a href=\"../DB/Transaction.html\">Transaction</a>, savepoint_name : <a href=\"../String.html\">String</a>)","location":{"filename":"src/ext/db/transaction.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/db/transaction.cr#L21"},"def":{"name":"new","args":[{"name":"parent","external_name":"parent","restriction":"Transaction"},{"name":"savepoint_name","external_name":"savepoint_name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(parent, savepoint_name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"avram/DB/TopLevelTransaction","path":"DB/TopLevelTransaction.html","kind":"class","full_name":"DB::TopLevelTransaction","name":"TopLevelTransaction","abstract":false,"superclass":{"html_id":"avram/DB/Transaction","kind":"class","full_name":"DB::Transaction","name":"Transaction"},"ancestors":[{"html_id":"avram/DB/Transaction","kind":"class","full_name":"DB::Transaction","name":"Transaction"},{"html_id":"avram/DB/BeginTransaction","kind":"module","full_name":"DB::BeginTransaction","name":"BeginTransaction"},{"html_id":"avram/DB/Disposable","kind":"module","full_name":"DB::Disposable","name":"Disposable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/db/src/db/transaction.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/transaction.cr#L38"},{"filename":"src/ext/db/transaction.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/db/transaction.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/DB","kind":"module","full_name":"DB","name":"DB"},"constructors":[{"html_id":"new(connection:Connection)-class-method","name":"new","abstract":false,"args":[{"name":"connection","external_name":"connection","restriction":"Connection"}],"args_string":"(connection : Connection)","args_html":"(connection : <a href=\"../DB/Connection.html\">Connection</a>)","location":{"filename":"src/ext/db/transaction.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/db/transaction.cr#L8"},"def":{"name":"new","args":[{"name":"connection","external_name":"connection","restriction":"Connection"}],"visibility":"Public","body":"_ = allocate\n_.initialize(connection)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]},{"html_id":"avram/DB/Transaction","path":"DB/Transaction.html","kind":"class","full_name":"DB::Transaction","name":"Transaction","abstract":true,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/DB/BeginTransaction","kind":"module","full_name":"DB::BeginTransaction","name":"BeginTransaction"},{"html_id":"avram/DB/Disposable","kind":"module","full_name":"DB::Disposable","name":"Disposable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/db/src/db/transaction.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/transaction.cr#L14"},{"filename":"src/ext/db/transaction.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/db/transaction.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/DB/BeginTransaction","kind":"module","full_name":"DB::BeginTransaction","name":"BeginTransaction"},{"html_id":"avram/DB/Disposable","kind":"module","full_name":"DB::Disposable","name":"Disposable"}],"subclasses":[{"html_id":"avram/DB/SavePointTransaction","kind":"class","full_name":"DB::SavePointTransaction","name":"SavePointTransaction"},{"html_id":"avram/DB/TopLevelTransaction","kind":"class","full_name":"DB::TopLevelTransaction","name":"TopLevelTransaction"}],"namespace":{"html_id":"avram/DB","kind":"module","full_name":"DB","name":"DB"},"doc":"Transactions should be started from `DB#transaction`, `Connection#transaction`\nor `Connection#begin_transaction`.\n\nUse `Transaction#connection` to submit statements to the database.\n\nUse `Transaction#commit` or `Transaction#rollback` to close the ongoing transaction\nexplicitly. Or refer to `BeginTransaction#transaction` for documentation on how to\nuse `#transaction(&block)` methods in `DB` and `Connection`.\n\nNested transactions are supported by using sql `SAVEPOINT`. To start a nested\ntransaction use `Transaction#transaction` or `Transaction#begin_transaction`.\n","summary":"<p>Transactions should be started from <code>DB#transaction</code>, <code>Connection#transaction</code> or <code>Connection#begin_transaction</code>.</p>"}]},{"html_id":"avram/Db","path":"Db.html","kind":"module","full_name":"Db","name":"Db","abstract":false,"locations":[{"filename":"src/avram/tasks/db/console.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/console.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"types":[{"html_id":"avram/Db/Console","path":"Db/Console.html","kind":"class","full_name":"Db::Console","name":"Console","abstract":false,"superclass":{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},"ancestors":[{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/console.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/console.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/console.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/console.cr#L4"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nEnters the postgres REPL. Check config/database.cr\\nfor database configuration.\\n\\nExamples:\\n\\n  lucky db.console\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/Console.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/console.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/console.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.console\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/console.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/console.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Access PostgreSQL console\""},"external_var":false}],"instance_methods":[{"html_id":"call-instance-method","name":"call","abstract":false,"location":{"filename":"src/avram/tasks/db/console.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/console.cr#L16"},"def":{"name":"call","visibility":"Public","body":"puts(banner_message)\nsystem(\"psql #{Avram::Migrator::Runner.credentials.url_without_query_params}\")\n"},"external_var":false},{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/console.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/console.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false}]},{"html_id":"avram/Db/Create","path":"Db/Create.html","kind":"class","full_name":"Db::Create","name":"Create","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/create.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/create.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/create.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/create.cr#L4"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nThe database name is usually found in config/database.cr\\n\\nExamples:\\n\\n  lucky db.create\\n  LUCKY_ENV=test lucky db.create # Create the test database\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/Create.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/create.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/create.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.create\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/create.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/create.cr#L3"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Create the database\""},"external_var":false}],"constructors":[{"html_id":"new(quiet:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/create.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/create.cr#L16"},"def":{"name":"new","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/create.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/create.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/create.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/create.cr#L19"},"def":{"name":"run_task","visibility":"Public","body":"Migrator::Runner.create_db(@quiet)"},"external_var":false}],"types":[{"html_id":"avram/Db/Create/Migrator","path":"Db/Create/Migrator.html","kind":"alias","full_name":"Db::Create::Migrator","name":"Migrator","abstract":false,"locations":[{"filename":"src/avram/tasks/db/create.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/create.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Avram::Migrator","aliased_html":"<a href=\"../../Avram/Migrator.html\">Avram::Migrator</a>","const":false,"namespace":{"html_id":"avram/Db/Create","kind":"class","full_name":"Db::Create","name":"Create"}}]},{"html_id":"avram/Db/Drop","path":"Db/Drop.html","kind":"class","full_name":"Db::Drop","name":"Drop","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/drop.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/drop.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/drop.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/drop.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nThe database name is usually found in config/database.cr\\n\\nExamples:\\n\\n  lucky db.drop\\n  LUCKY_ENV=test lucky db.drop # Drop the test database\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/Drop.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/drop.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/drop.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.drop\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/drop.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/drop.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Drop the database\""},"external_var":false}],"constructors":[{"html_id":"new(quiet:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/drop.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/drop.cr#L15"},"def":{"name":"new","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/drop.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/drop.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/drop.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/drop.cr#L18"},"def":{"name":"run_task","visibility":"Public","body":"Avram::Migrator::Runner.drop_db(@quiet)"},"external_var":false}]},{"html_id":"avram/Db/Migrate","path":"Db/Migrate.html","kind":"class","full_name":"Db::Migrate","name":"Migrate","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/migrate.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nExamples:\\n\\n  lucky db.migrate\\n  LUCKY_ENV=test lucky db.migrate # Runs migrations on the test database\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/Migrate.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.migrate\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Run any pending migrations\""},"external_var":false}],"constructors":[{"html_id":"new(quiet:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate.cr#L13"},"def":{"name":"new","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/migrate.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate.cr#L16"},"def":{"name":"run_task","visibility":"Public","body":"(Avram::Migrator::Runner.new(@quiet)).run_pending_migrations"},"external_var":false}],"types":[{"html_id":"avram/Db/Migrate/One","path":"Db/Migrate/One.html","kind":"class","full_name":"Db::Migrate::One","name":"One","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate_one.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db/Migrate","kind":"class","full_name":"Db::Migrate","name":"Migrate"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate_one.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nExample:\\n\\n  lucky db.migrate.one\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../../Db/Migrate/One.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate_one.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.migrate.one\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate_one.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Run just the next pending migration\""},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate_one.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/migrate_one.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrate_one.cr#L12"},"def":{"name":"run_task","visibility":"Public","body":"Avram::Migrator::Runner.new.run_next_migration"},"external_var":false}]}]},{"html_id":"avram/Db/Migrations","path":"Db/Migrations.html","kind":"module","full_name":"Db::Migrations","name":"Migrations","abstract":false,"locations":[{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrations_status.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"types":[{"html_id":"avram/Db/Migrations/Status","path":"Db/Migrations/Status.html","kind":"class","full_name":"Db::Migrations::Status","name":"Status","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrations_status.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db/Migrations","kind":"module","full_name":"Db::Migrations","name":"Migrations"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrations_status.cr#L5"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"Shows which migrations are pending and which have been run.\\n\\nExamples:\\n\\n  lucky db.migrations.status\\n  LUCKY_ENV=test lucky db.migrations.status # Show migration status for test db\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../../Db/Migrations/Status.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrations_status.cr#L3"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.migrations.status\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrations_status.cr#L4"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Print the current status of migrations\""},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrations_status.cr#L3"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/migrations_status.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/migrations_status.cr#L15"},"def":{"name":"run_task","visibility":"Public","body":"if migrations.none?\n  puts(\"There are no migrations.\".colorize(:green))\nelse\n  ensure_migration_tracking_tables_exist\n  print_migration_statuses\nend"},"external_var":false}]}]},{"html_id":"avram/Db/Redo","path":"Db/Redo.html","kind":"class","full_name":"Db::Redo","name":"Redo","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/redo.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/redo.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/redo.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/redo.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nExample:\\n\\n  lucky db.redo\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/Redo.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/redo.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/redo.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.redo\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/redo.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/redo.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Rollback and run just the last migration\""},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/redo.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/redo.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/redo.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/redo.cr#L12"},"def":{"name":"run_task","visibility":"Public","body":"Db::Rollback.new.run_task\nDb::Migrate.new.run_task\n"},"external_var":false}]},{"html_id":"avram/Db/Reset","path":"Db/Reset.html","kind":"class","full_name":"Db::Reset","name":"Reset","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/reset.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/reset.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/reset.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/reset.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nExample:\\n\\n  lucky db.reset\\n\\nTo drop the test database:\\n\\n   LUCKY_ENV=test lucky db.reset\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/Reset.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/reset.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/reset.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.reset\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/reset.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/reset.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Drop, recreate, and run migrations.\""},"external_var":false}],"constructors":[{"html_id":"new(quiet:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/reset.cr","line_number":16,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/reset.cr#L16"},"def":{"name":"new","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/reset.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/reset.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/reset.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/reset.cr#L19"},"def":{"name":"run_task","visibility":"Public","body":"(Db::Drop.new(@quiet)).run_task\n(Db::Create.new(@quiet)).run_task\n(Db::Migrate.new(@quiet)).run_task\n"},"external_var":false}]},{"html_id":"avram/Db/Rollback","path":"Db/Rollback.html","kind":"class","full_name":"Db::Rollback","name":"Rollback","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/rollback.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nExample:\\n\\n  lucky db.rollback\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/Rollback.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.rollback\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Rollback the last migration\""},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback.cr#L12"},"def":{"name":"run_task","visibility":"Public","body":"Avram::Migrator::Runner.new.rollback_one"},"external_var":false}]},{"html_id":"avram/Db/RollbackAll","path":"Db/RollbackAll.html","kind":"class","full_name":"Db::RollbackAll","name":"RollbackAll","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_all.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_all.cr#L4"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nYou may also want to look at 'lucky db.drop'.\\n\\nExample:\\n\\n  lucky db.rollback_all\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/RollbackAll.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_all.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.rollback_all\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_all.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Rollback all migrations\""},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_all.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback_all.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_all.cr#L15"},"def":{"name":"run_task","visibility":"Public","body":"Avram::Migrator::Runner.new.rollback_all\nputs(\"Done rolling back all migrations\".colorize(:green))\n"},"external_var":false}]},{"html_id":"avram/Db/RollbackTo","path":"Db/RollbackTo.html","kind":"class","full_name":"Db::RollbackTo","name":"RollbackTo","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_to.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_to.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nYou can get the migration version from the filename or by running 'lucky db.migrations.status'\\n\\nExample:\\n\\n  lucky db.rollback_to 20180802180356\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/RollbackTo.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_to.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.rollback_to\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_to.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Rollback to a specific migration\""},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_to.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/rollback_to.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/rollback_to.cr#L14"},"def":{"name":"run_task","visibility":"Public","body":"version = ARGV.first?\nif version && version.to_i64?\n  Avram::Migrator::Runner.new.rollback_to(version.to_i64)\nelse\n  raise((\"Migration version is required. Example: lucky db.rollback_to 20180802180356\".colorize(:red)).to_s)\nend\n"},"external_var":false}]},{"html_id":"avram/Db/Schema","path":"Db/Schema.html","kind":"module","full_name":"Db::Schema","name":"Schema","abstract":false,"locations":[{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"types":[{"html_id":"avram/Db/Schema/Dump","path":"Db/Schema/Dump.html","kind":"class","full_name":"Db::Schema::Dump","name":"Dump","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[:dump_to] of Symbol"}],"namespace":{"html_id":"avram/Db/Schema","kind":"module","full_name":"Db::Schema","name":"Schema"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nYou must specify the path that you want Avram to dump the sql to. Note\\nthat this dumps the schema but does not dump any data.\\n\\nExample:\\n\\n  lucky db.schema.dump structure.sql\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../../Db/Schema/Dump.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.schema.dump\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Export database schema to a sql file\""},"external_var":false}],"constructors":[{"html_id":"new(quiet:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L17"},"def":{"name":"new","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"dump_to:String-instance-method","name":"dump_to","abstract":false,"location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L15"},"def":{"name":"dump_to","return_type":"String","visibility":"Public","body":"if @dump_to.nil?\n  raise(\"dump_to is required, but no value was passed.\")\nend\n@dump_to.as(String)\n"},"external_var":false},{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L20"},"def":{"name":"run_task","visibility":"Public","body":"Avram::Migrator::Runner.dump_db(dump_to, @quiet)"},"external_var":false},{"html_id":"set_opt_for_dump_to(args:Array(String))-instance-method","name":"set_opt_for_dump_to","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/schema_dump.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_dump.cr#L15"},"def":{"name":"set_opt_for_dump_to","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"value = args[@positional_arg_count]?\n\n\n@dump_to = value\n@positional_arg_count = @positional_arg_count + 1\n"},"external_var":false}]},{"html_id":"avram/Db/Schema/Restore","path":"Db/Schema/Restore.html","kind":"class","full_name":"Db::Schema::Restore","name":"Restore","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_restore.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db/Schema","kind":"module","full_name":"Db::Schema","name":"Schema"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_restore.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nYou must specify the path to the sql that you want Avram to restore from.\\n\\nExample:\\n\\n  lucky db.schema.restore structure.sql\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../../Db/Schema/Restore.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_restore.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.schema.restore\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_restore.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Restore database from a sql dump file\""},"external_var":false}],"constructors":[{"html_id":"new(import_file_path:String|Nil=nil,quiet:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"import_file_path","default_value":"nil","external_name":"import_file_path","restriction":"String | ::Nil"},{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(import_file_path : String | Nil = nil, quiet : Bool = false)","args_html":"(import_file_path : <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a> = <span class=\"n\">nil</span>, quiet : <a href=\"../../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_restore.cr#L14"},"def":{"name":"new","args":[{"name":"import_file_path","default_value":"nil","external_name":"import_file_path","restriction":"String | ::Nil"},{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(import_file_path, quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_restore.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/schema_restore.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/schema_restore.cr#L17"},"def":{"name":"run_task","visibility":"Public","body":"import_file_path = (@import_file_path || ARGV.first?) || (raise(\"A path to the import SQL file must be provided\"))\nAvram::Migrator::Runner.restore_db(import_file_path.as(String), @quiet)\n"},"external_var":false}]}]},{"html_id":"avram/Db/Setup","path":"Db/Setup.html","kind":"class","full_name":"Db::Setup","name":"Setup","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/setup.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/setup.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/setup.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/setup.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nThis task will run the following:\\n  * db.create   - Create the database from config/database.cr\\n  * db.migrate  - Migrate all pending migrations from db/migrations/\\n\\n\\nExamples:\\n\\n  lucky db.setup\\n  LUCKY_ENV=test lucky db.setup # Setup test database\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/Setup.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/setup.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/setup.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.setup\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/setup.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/setup.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Runs a few tasks for setting up your database\""},"external_var":false}],"constructors":[{"html_id":"new(quiet:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/setup.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/setup.cr#L18"},"def":{"name":"new","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/setup.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/setup.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/setup.cr","line_number":21,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/setup.cr#L21"},"def":{"name":"run_task","visibility":"Public","body":"Avram::Migrator::Runner.create_db(@quiet)\n(Avram::Migrator::Runner.new(@quiet)).run_pending_migrations\n"},"external_var":false}]},{"html_id":"avram/Db/VerifyConnection","path":"Db/VerifyConnection.html","kind":"class","full_name":"Db::VerifyConnection","name":"VerifyConnection","abstract":false,"superclass":{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},"ancestors":[{"html_id":"avram/BaseTask","kind":"class","full_name":"BaseTask","name":"BaseTask"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/verify_connection.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"namespace":{"html_id":"avram/Db","kind":"module","full_name":"Db","name":"Db"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/verify_connection.cr#L3"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nThe connection settings are typically defined in config/database.cr\\n\\nExamples:\\n\\n  lucky db.verify_connection\\n  LUCKY_ENV=test lucky db.verify_connection # Verify test db connection\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Db/VerifyConnection.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/verify_connection.cr#L1"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"db.verify_connection\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/verify_connection.cr#L2"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Verify connection to postgres\""},"external_var":false}],"constructors":[{"html_id":"new(quiet:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"args_string":"(quiet : Bool = false)","args_html":"(quiet : <a href=\"../Bool.html\">Bool</a> = <span class=\"n\">false</span>)","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/verify_connection.cr#L17"},"def":{"name":"new","args":[{"name":"quiet","default_value":"false","external_name":"quiet","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(quiet)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/verify_connection.cr#L1"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"quiet?:Bool-instance-method","name":"quiet?","abstract":false,"location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":15,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/verify_connection.cr#L15"},"def":{"name":"quiet?","visibility":"Public","body":"@quiet"},"external_var":false},{"html_id":"run_task-instance-method","name":"run_task","abstract":false,"location":{"filename":"src/avram/tasks/db/verify_connection.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/db/verify_connection.cr#L20"},"def":{"name":"run_task","visibility":"Public","body":"begin\n  DB.open(Avram.settings.database_to_migrate.settings.credentials.url) do |_db|\n    if quiet?\n    else\n      output.puts(\"✔ Connection verified\")\n    end\n  end\nrescue Avram::ConnectionError | DB::ConnectionRefused\n  raise(\"Unable to connect to Postgres for database '#{Avram.settings.database_to_migrate}'.\\n\\nThis is what we tried to connect to:\\n\\n  * host: #{Avram::Migrator::Runner.db_host}\\n  * port: #{Avram::Migrator::Runner.db_port}\\n  * database: #{Avram::Migrator::Runner.db_name}\\n  * username: #{Avram::Migrator::Runner.db_user}\\n  * password: check config/database.cr\\n\\nTo fix, try this...\\n\\n  ▸ Make sure Postgres is running.\\n  ▸ Check connection settings in config/database.cr.\\n  ▸ If the database has not been created yet, run 'lucky db.create'\\n  ▸ Then run 'lucky db.verify_connection' to make sure it can connect.\\n\")\nend"},"external_var":false}]}]},{"html_id":"avram/Enum","path":"Enum.html","kind":"struct","full_name":"Enum","name":"Enum","abstract":true,"superclass":{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/db/src/db/result_set.cr","line_number":156,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/db/src/db/result_set.cr#L156"},{"filename":"src/avram/charms/enum_extensions.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"doc":"Enum is the base type of all enums.\n\nAn enum is a set of integer values, where each value has an associated name. For example:\n\n```\nenum Color\n  Red   # 0\n  Green # 1\n  Blue  # 2\nend\n```\n\nValues start with the value `0` and are incremented by one, but can be overwritten.\n\nTo get the underlying value you invoke value on it:\n\n```\nColor::Green.value # => 1\n```\n\nEach constant (member) in the enum has the type of the enum:\n\n```\ntypeof(Color::Red) # => Color\n```\n\n### Flags enum\n\nAn enum can be marked with the `@[Flags]` annotation. This changes the default values:\n\n```\n@[Flags]\nenum IOMode\n  Read  # 1\n  Write # 2\n  Async # 4\nend\n```\n\nAdditionally, some methods change their behaviour.\n\n### Enums from integers\n\nAn enum can be created from an integer:\n\n```\nColor.new(1).to_s # => \"Green\"\n```\n\nValues that don't correspond to enum's constants are allowed: the value\nwill still be of type Color, but when printed you will get the underlying value:\n\n```\nColor.new(10).to_s # => \"10\"\n```\n\nThis method is mainly intended to convert integers from C to enums in Crystal.\n\n### Question methods\n\nAn enum automatically defines question methods for each member, using\n`String#underscore` for the method name.\n* In the case of regular enums, this compares by equality (`==`).\n* In the case of flags enums, this invokes `includes?`.\n\nFor example:\n\n```\ncolor = Color::Blue\ncolor.red?  # => false\ncolor.blue? # => true\n\nmode = IOMode::Read | IOMode::Async\nmode.read?  # => true\nmode.write? # => false\nmode.async? # => true\n```\n\nThis is very convenient in `case` expressions:\n\n```\ncase color\nwhen .red?\n  puts \"Got red\"\nwhen .blue?\n  puts \"Got blue\"\nend\n```\n\n### Changing the Base Type\n\nThe type of the underlying enum value is `Int32` by default, but it can be changed to any type in `Int::Primitive`.\n\n```\nenum Color : UInt8\n  Red\n  Green\n  Blue\nend\n\nColor::Red.value # : UInt8\n```","summary":"<p>Enum is the base type of all enums.</p>","class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L4"},"def":{"name":"adapter","visibility":"Public","body":"Lucky(self)"},"external_var":false}],"types":[{"html_id":"avram/Enum/Lucky","path":"Enum/Lucky.html","kind":"module","full_name":"Enum::Lucky(T)","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/enum_extensions.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L8"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Enum/Lucky","kind":"module","full_name":"Enum::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Enum","kind":"struct","full_name":"Enum","name":"Enum"},"instance_methods":[{"html_id":"criteria(query:V,column:Symbol|String)forallV-instance-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"V"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(query : V, column : Symbol | String) forall V","args_html":"(query : V, column : Symbol | <a href=\"../String.html\">String</a>) forall V","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":57,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L57"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"V"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"Criteria(V, T).new(query, column)"},"external_var":false},{"html_id":"parse(value:String)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L12"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"is_int = value.to_i?\nif is_int\n  return parse(is_int)\nend\n\nif result = T.parse?(value)\n  SuccessfulCast.new(result)\nelse\n  FailedCast.new\nend\n"},"external_var":false},{"html_id":"parse(value:Int)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int"}],"args_string":"(value : Int)","args_html":"(value : Int)","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":23,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L23"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Int"}],"visibility":"Public","body":"if result = T.from_value?(value)\n  SuccessfulCast.new(result)\nelse\n  FailedCast.new\nend"},"external_var":false},{"html_id":"parse(values:Array(Int))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Int)"}],"args_string":"(values : Array(Int))","args_html":"(values : <a href=\"../Array.html\">Array</a>(Int))","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":35,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L35"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(Int)"}],"visibility":"Public","body":"results = values.map do |i|\n  parse(i)\nend\nif results.all?(SuccessfulCast)\n  parse(results.map() do |__arg0|\n    __arg0.value.as(T)\n  end)\nelse\n  FailedCast.new\nend\n"},"external_var":false},{"html_id":"parse(value:Array(T))-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Array(T)"}],"args_string":"(value : Array(T))","args_html":"(value : <a href=\"../Array.html\">Array</a>(T))","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L31"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Array(T)"}],"visibility":"Public","body":"SuccessfulCast(Array(T)).new(value)"},"external_var":false},{"html_id":"parse(value:T)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L44"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"T"}],"visibility":"Public","body":"SuccessfulCast.new(value)"},"external_var":false},{"html_id":"to_db(values:Array(T))-instance-method","name":"to_db","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(T)"}],"args_string":"(values : Array(T))","args_html":"(values : <a href=\"../Array.html\">Array</a>(T))","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L48"},"def":{"name":"to_db","args":[{"name":"values","external_name":"values","restriction":"Array(T)"}],"visibility":"Public","body":"encoded = values.map do |value|\n  to_db(value)\nend.as(Array(String))\nPQ::Param.encode_array(encoded)\n"},"external_var":false},{"html_id":"to_db(value:T):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"T"}],"args_string":"(value : T) : String","args_html":"(value : T) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":53,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L53"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"T"}],"return_type":"String","visibility":"Public","body":"value.value.to_s"},"external_var":false}],"types":[{"html_id":"avram/Enum/Lucky/ColumnType","path":"Enum/Lucky/ColumnType.html","kind":"alias","full_name":"Enum::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/enum_extensions.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L10"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Int32 | Int64)","aliased_html":"<a href=\"../../Int32.html\">Int32</a> | <a href=\"../../Int64.html\">Int64</a>","const":false,"namespace":{"html_id":"avram/Enum/Lucky","kind":"module","full_name":"Enum::Lucky(T)","name":"Lucky"}},{"html_id":"avram/Enum/Lucky/Criteria","path":"Enum/Lucky/Criteria.html","kind":"class","full_name":"Enum::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Int32/Lucky/Criteria","kind":"class","full_name":"Int32::Lucky::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Int32/Lucky/Criteria","kind":"class","full_name":"Int32::Lucky::Criteria","name":"Criteria"},{"html_id":"avram/Avram/IncludesCriteria","kind":"module","full_name":"Avram::IncludesCriteria","name":"IncludesCriteria"},{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/enum_extensions.cr","line_number":61,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L61"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Enum/Lucky","kind":"module","full_name":"Enum::Lucky(T)","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"select_max:V|Nil-instance-method","name":"select_max","abstract":false,"location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":68,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L68"},"def":{"name":"select_max","return_type":"V | ::Nil","visibility":"Public","body":"(rows.exec_scalar(&.select_max(column)).as(Int32 | ::Nil)).try do |max|\n  V.adapter.parse!(max)\nend"},"external_var":false},{"html_id":"select_min:V|Nil-instance-method","name":"select_min","abstract":false,"location":{"filename":"src/avram/charms/enum_extensions.cr","line_number":62,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/enum_extensions.cr#L62"},"def":{"name":"select_min","return_type":"V | ::Nil","visibility":"Public","body":"(rows.exec_scalar(&.select_min(column)).as(Int32 | ::Nil)).try do |min|\n  V.adapter.parse!(min)\nend"},"external_var":false}]}]}]},{"html_id":"avram/Fiber","path":"Fiber.html","kind":"class","full_name":"Fiber","name":"Fiber","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/fiber.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/fiber.cr#L2"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"doc":"https://crystal-lang.org/api/latest/Fiber.html","summary":"<p>https://crystal-lang.org/api/latest/Fiber.html</p>","instance_methods":[{"html_id":"query_cache:LuckyCache::BaseStore-instance-method","name":"query_cache","doc":"This is stored on Fiber so it's released after each\nHTTP Request.","summary":"<p>This is stored on Fiber so it's released after each HTTP Request.</p>","abstract":false,"location":{"filename":"src/avram/charms/fiber.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/fiber.cr#L5"},"def":{"name":"query_cache","return_type":"LuckyCache::BaseStore","visibility":"Public","body":"if (__temp_186 = @query_cache).nil?\n  @query_cache = (if Avram.settings.query_cache_enabled\n    LuckyCache::MemoryStore.new\n  else\n    LuckyCache::NullStore.new\n  end)\nelse\n  __temp_186\nend"},"external_var":false},{"html_id":"query_cache=(query_cache:LuckyCache::BaseStore)-instance-method","name":"query_cache=","doc":"This is stored on Fiber so it's released after each\nHTTP Request.","summary":"<p>This is stored on Fiber so it's released after each HTTP Request.</p>","abstract":false,"args":[{"name":"query_cache","external_name":"query_cache","restriction":"LuckyCache::BaseStore"}],"args_string":"(query_cache : LuckyCache::BaseStore)","args_html":"(query_cache : LuckyCache::BaseStore)","location":{"filename":"src/avram/charms/fiber.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/fiber.cr#L5"},"def":{"name":"query_cache=","args":[{"name":"query_cache","external_name":"query_cache","restriction":"LuckyCache::BaseStore"}],"visibility":"Public","body":"@query_cache = query_cache"},"external_var":false}]},{"html_id":"avram/Float64","path":"Float64.html","kind":"struct","full_name":"Float64","name":"Float64","abstract":false,"superclass":{"html_id":"avram/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"avram/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"avram/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/blank_extensions.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L31"},{"filename":"src/avram/charms/float64_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L2"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/avram/blank_extensions.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L32"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"self.nil?"},"external_var":false}],"types":[{"html_id":"avram/Float64/Lucky","path":"Float64/Lucky.html","kind":"module","full_name":"Float64::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/float64_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Float64","kind":"struct","full_name":"Float64","name":"Float64"},"class_methods":[{"html_id":"criteria(query:T,column:Symbol|String)forallT-class-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(query : T, column : Symbol | String) forall T","args_html":"(query : T, column : Symbol | <a href=\"../String.html\">String</a>) forall T","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L10"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"Criteria(T, Float64).new(query, column)"},"external_var":false}],"instance_methods":[{"html_id":"from_db!(value:Float64):Float64-instance-method","name":"from_db!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64) : Float64","args_html":"(value : <a href=\"../Float64.html\">Float64</a>) : <a href=\"../Float64.html\">Float64</a>","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L14"},"def":{"name":"from_db!","args":[{"name":"value","external_name":"value","restriction":"Float64"}],"return_type":"Float64","visibility":"Public","body":"value"},"external_var":false},{"html_id":"from_db!(value:PG::Numeric):Float64-instance-method","name":"from_db!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"PG::Numeric"}],"args_string":"(value : PG::Numeric) : Float64","args_html":"(value : PG::Numeric) : <a href=\"../Float64.html\">Float64</a>","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L18"},"def":{"name":"from_db!","args":[{"name":"value","external_name":"value","restriction":"PG::Numeric"}],"return_type":"Float64","visibility":"Public","body":"value.to_f"},"external_var":false},{"html_id":"parse(value:Float64):SuccessfulCast(Float64)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64) : SuccessfulCast(Float64)","args_html":"(value : <a href=\"../Float64.html\">Float64</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Float64.html\">Float64</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L22"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Float64"}],"return_type":"SuccessfulCast(Float64)","visibility":"Public","body":"SuccessfulCast(Float64).new(value)"},"external_var":false},{"html_id":"parse(values:Array(Float64)):SuccessfulCast(Array(Float64))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Float64)"}],"args_string":"(values : Array(Float64)) : SuccessfulCast(Array(Float64))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Float64.html\">Float64</a>)) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Array.html\">Array</a>(<a href=\"../Float64.html\">Float64</a>))","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L26"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(Float64)"}],"return_type":"SuccessfulCast(Array(Float64))","visibility":"Public","body":"SuccessfulCast(Array(Float64)).new(values)"},"external_var":false},{"html_id":"parse(value:PG::Numeric):SuccessfulCast(Float64)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"PG::Numeric"}],"args_string":"(value : PG::Numeric) : SuccessfulCast(Float64)","args_html":"(value : PG::Numeric) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Float64.html\">Float64</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":30,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L30"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"PG::Numeric"}],"return_type":"SuccessfulCast(Float64)","visibility":"Public","body":"SuccessfulCast(Float64).new(value.to_f)"},"external_var":false},{"html_id":"parse(values:Array(PG::Numeric)):SuccessfulCast(Array(Float64))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(PG::Numeric)"}],"args_string":"(values : Array(PG::Numeric)) : SuccessfulCast(Array(Float64))","args_html":"(values : <a href=\"../Array.html\">Array</a>(PG::Numeric)) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Array.html\">Array</a>(<a href=\"../Float64.html\">Float64</a>))","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L34"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(PG::Numeric)"}],"return_type":"SuccessfulCast(Array(Float64))","visibility":"Public","body":"SuccessfulCast(Array(Float64)).new(values.map(&.to_f))"},"external_var":false},{"html_id":"parse(value:String):SuccessfulCast(Float64)|FailedCast-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : SuccessfulCast(Float64) | FailedCast","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Float64.html\">Float64</a>) | <a href=\"../Avram/Type/FailedCast.html\">FailedCast</a>","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L38"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"SuccessfulCast(Float64) | FailedCast","visibility":"Public","body":"begin\n  SuccessfulCast(Float64).new(value.to_f64)\nrescue ArgumentError\n  FailedCast.new\nend"},"external_var":false},{"html_id":"parse(value:Int32):SuccessfulCast(Float64)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32) : SuccessfulCast(Float64)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Float64.html\">Float64</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L44"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"return_type":"SuccessfulCast(Float64)","visibility":"Public","body":"SuccessfulCast(Float64).new(value.to_f64)"},"external_var":false},{"html_id":"parse(value:Int64):SuccessfulCast(Float64)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64) : SuccessfulCast(Float64)","args_html":"(value : <a href=\"../Int64.html\">Int64</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Float64.html\">Float64</a>)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L48"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Int64"}],"return_type":"SuccessfulCast(Float64)","visibility":"Public","body":"SuccessfulCast(Float64).new(value.to_f64)"},"external_var":false},{"html_id":"to_db(value:Float64):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float64"}],"args_string":"(value : Float64) : String","args_html":"(value : <a href=\"../Float64.html\">Float64</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":52,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L52"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"Float64"}],"return_type":"String","visibility":"Public","body":"value.to_s"},"external_var":false},{"html_id":"to_db(values:Array(Float64))-instance-method","name":"to_db","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Float64)"}],"args_string":"(values : Array(Float64))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Float64.html\">Float64</a>))","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":56,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L56"},"def":{"name":"to_db","args":[{"name":"values","external_name":"values","restriction":"Array(Float64)"}],"visibility":"Public","body":"PQ::Param.encode_array(values)"},"external_var":false}],"types":[{"html_id":"avram/Float64/Lucky/ColumnType","path":"Float64/Lucky/ColumnType.html","kind":"alias","full_name":"Float64::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/float64_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"(Float64 | PG::Numeric)","aliased_html":"<a href=\"../../Float64.html\">Float64</a> | PG::Numeric","const":false,"namespace":{"html_id":"avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"}},{"html_id":"avram/Float64/Lucky/Criteria","path":"Float64/Lucky/Criteria.html","kind":"class","full_name":"Float64::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/float64_extensions.cr","line_number":60,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L60"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"namespace":{"html_id":"avram/Float64/Lucky","kind":"module","full_name":"Float64::Lucky","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"abs-instance-method","name":"abs","abstract":false,"location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":73,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L73"},"def":{"name":"abs","visibility":"Public","body":"Criteria(T, V).new(rows, \"ABS(#{column})\")"},"external_var":false},{"html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column &gt;= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":61,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L61"},"def":{"name":"between","args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"},"external_var":false},{"html_id":"ceil-instance-method","name":"ceil","abstract":false,"location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":74,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L74"},"def":{"name":"ceil","visibility":"Public","body":"Criteria(T, V).new(rows, \"CEIL(#{column})\")"},"external_var":false},{"html_id":"floor-instance-method","name":"floor","abstract":false,"location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":75,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L75"},"def":{"name":"floor","visibility":"Public","body":"Criteria(T, V).new(rows, \"FLOOR(#{column})\")"},"external_var":false},{"html_id":"select_sum:Float64|Nil-instance-method","name":"select_sum","abstract":false,"location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":63,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L63"},"def":{"name":"select_sum","return_type":"Float64 | ::Nil","visibility":"Public","body":"if sum = super()\n  (sum.as(PG::Numeric)).to_f\nend"},"external_var":false},{"html_id":"select_sum!:Float64-instance-method","name":"select_sum!","abstract":false,"location":{"filename":"src/avram/charms/float64_extensions.cr","line_number":69,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/float64_extensions.cr#L69"},"def":{"name":"select_sum!","return_type":"Float64","visibility":"Public","body":"select_sum || 0_f64"},"external_var":false}]}]}]},{"html_id":"avram/Gen","path":"Gen.html","kind":"module","full_name":"Gen","name":"Gen","abstract":false,"locations":[{"filename":"src/avram/tasks/gen/migration.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"types":[{"html_id":"avram/Gen/Migration","path":"Gen/Migration.html","kind":"class","full_name":"Gen::Migration","name":"Migration","abstract":false,"superclass":{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},"ancestors":[{"html_id":"avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/gen/migration.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HABITAT_SETTINGS","name":"HABITAT_SETTINGS","value":"[{decl: io : IO = STDOUT, example: nil, validation: nil}] of Nil"},{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[:migration_file_name] of Symbol"}],"included_modules":[{"html_id":"avram/Habitat/SettingsHelpers","kind":"module","full_name":"Habitat::SettingsHelpers","name":"SettingsHelpers"},{"html_id":"avram/Habitat/TempConfig","kind":"module","full_name":"Habitat::TempConfig","name":"TempConfig"}],"namespace":{"html_id":"avram/Gen","kind":"module","full_name":"Gen","name":"Gen"},"class_methods":[{"html_id":"configure(&)-class-method","name":"configure","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L19"},"def":{"name":"configure","yields":1,"block_arity":1,"visibility":"Public","body":"yield settings"},"external_var":false},{"html_id":"settings-class-method","name":"settings","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L19"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false},{"html_id":"silence_output(&)-class-method","name":"silence_output","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":23,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L23"},"def":{"name":"silence_output","yields":0,"block_arity":0,"visibility":"Public","body":"temp_config(io: IO::Memory.new) do\n  yield\nend"},"external_var":false},{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":5,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L5"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"Generate a new migration using the passed in migration file name.\\n\\nThe migration file name can be underscore or CamelCase. No other options are available.\\n\\nExamples:\\n\\n  lucky gen.migration create_users\\n  lucky gen.migration AddAgeToUsers\\n\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Gen/Migration.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L3"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"gen.migration\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L4"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Generate a new migration\""},"external_var":false}],"instance_methods":[{"html_id":"call-instance-method","name":"call","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L29"},"def":{"name":"call","visibility":"Public","body":"Avram::Migrator.run do\n  Avram::Migrator::MigrationGenerator.new(name: migration_file_name, io: output).generate\nend"},"external_var":false},{"html_id":"migration_file_name:String-instance-method","name":"migration_file_name","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L17"},"def":{"name":"migration_file_name","return_type":"String","visibility":"Public","body":"if @migration_file_name.nil?\n  raise(\"migration_file_name is required, but no value was passed.\")\nend\n@migration_file_name.as(String)\n"},"external_var":false},{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L3"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false},{"html_id":"set_opt_for_migration_file_name(args:Array(String))-instance-method","name":"set_opt_for_migration_file_name","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":17,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L17"},"def":{"name":"set_opt_for_migration_file_name","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"value = args[@positional_arg_count]?\n\n\n@migration_file_name = value\n@positional_arg_count = @positional_arg_count + 1\n"},"external_var":false},{"html_id":"settings-instance-method","name":"settings","abstract":false,"location":{"filename":"src/avram/tasks/gen/migration.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L19"},"def":{"name":"settings","visibility":"Public","body":"HabitatSettings"},"external_var":false}],"types":[{"html_id":"avram/Gen/Migration/HabitatSettings","path":"Gen/Migration/HabitatSettings.html","kind":"class","full_name":"Gen::Migration::HabitatSettings","name":"HabitatSettings","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/tasks/gen/migration.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/tasks/gen/migration.cr#L19"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Gen/Migration","kind":"class","full_name":"Gen::Migration","name":"Migration"},"class_methods":[{"html_id":"io:IO-class-method","name":"io","abstract":false,"def":{"name":"io","return_type":"IO","visibility":"Public","body":"@@io.not_nil!"},"external_var":false},{"html_id":"io=(value:IO)-class-method","name":"io=","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"IO"}],"args_string":"(value : IO)","args_html":"(value : IO)","def":{"name":"io=","args":[{"name":"value","external_name":"value","restriction":"IO"}],"visibility":"Public","body":"@@io = value"},"external_var":false},{"html_id":"io?-class-method","name":"io?","doc":"Used for checking missing settings on non-nilable types\nIt's advised to use io in your apps to ensure\nthe propper type is checked.","summary":"<p>Used for checking missing settings on non-nilable types It's advised to use io in your apps to ensure the propper type is checked.</p>","abstract":false,"def":{"name":"io?","visibility":"Public","body":"@@io"},"external_var":false},{"html_id":"to_h-class-method","name":"to_h","doc":"Generates a hash using the provided values","summary":"<p>Generates a hash using the provided values</p>","abstract":false,"def":{"name":"to_h","visibility":"Public","body":"{\"io\" => io}"},"external_var":false}]}]},{"html_id":"avram/Gen/Mixins","path":"Gen/Mixins.html","kind":"module","full_name":"Gen::Mixins","name":"Mixins","abstract":false,"locations":[{"filename":"src/lucky/tasks/gen/mixins/migration_with_columns.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/mixins/migration_with_columns.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Gen","kind":"module","full_name":"Gen","name":"Gen"},"types":[{"html_id":"avram/Gen/Mixins/MigrationWithColumns","path":"Gen/Mixins/MigrationWithColumns.html","kind":"module","full_name":"Gen::Mixins::MigrationWithColumns","name":"MigrationWithColumns","abstract":false,"locations":[{"filename":"src/lucky/tasks/gen/mixins/migration_with_columns.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/mixins/migration_with_columns.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"SUPPORTED_TYPES","name":"SUPPORTED_TYPES","value":"{\"Bool\", \"Float64\", \"Int16\", \"Int32\", \"Int64\", \"String\", \"Time\", \"UUID\", \"JSON::Any\"}"}],"including_types":[{"html_id":"avram/Gen/Model","kind":"class","full_name":"Gen::Model","name":"Model"},{"html_id":"avram/Gen/Resource/Browser","kind":"class","full_name":"Gen::Resource::Browser","name":"Browser"}],"namespace":{"html_id":"avram/Gen/Mixins","kind":"module","full_name":"Gen::Mixins","name":"Mixins"},"instance_methods":[{"html_id":"create_migration-instance-method","name":"create_migration","abstract":false,"location":{"filename":"src/lucky/tasks/gen/mixins/migration_with_columns.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/mixins/migration_with_columns.cr#L4"},"def":{"name":"create_migration","visibility":"Public","body":"(Avram::Migrator::MigrationGenerator.new(\"Create#{pluralized_name}\", io: output, migrate_contents: migrate_contents, rollback_contents: rollback_contents)).generate"},"external_var":false}]}]},{"html_id":"avram/Gen/Model","path":"Gen/Model.html","kind":"class","full_name":"Gen::Model","name":"Model","abstract":false,"superclass":{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},"ancestors":[{"html_id":"avram/Gen/Mixins/MigrationWithColumns","kind":"module","full_name":"Gen::Mixins::MigrationWithColumns","name":"MigrationWithColumns"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/tasks/gen/model.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/model.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"included_modules":[{"html_id":"avram/Gen/Mixins/MigrationWithColumns","kind":"module","full_name":"Gen::Mixins::MigrationWithColumns","name":"MigrationWithColumns"}],"namespace":{"html_id":"avram/Gen","kind":"module","full_name":"Gen","name":"Gen"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/lucky/tasks/gen/model.cr","line_number":11,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/model.cr#L11"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nExample:\\n\\n  lucky gen.model Project title:String description:String? completed:Bool priority:Int32\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../Gen/Model.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/lucky/tasks/gen/model.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/model.cr#L7"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"gen.model\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/lucky/tasks/gen/model.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/model.cr#L10"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Generate a model, query, and operations (save and delete)\""},"external_var":false}],"instance_methods":[{"html_id":"call-instance-method","name":"call","abstract":false,"location":{"filename":"src/lucky/tasks/gen/model.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/model.cr#L19"},"def":{"name":"call","visibility":"Public","body":"if valid?\n  template.render(Path[\"./src/\"])\n  create_migration\n  display_success_messages\nelse\n  output.puts(@error.colorize(:red))\nend"},"external_var":false},{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/lucky/tasks/gen/model.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/model.cr#L7"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false}]},{"html_id":"avram/Gen/Resource","path":"Gen/Resource.html","kind":"module","full_name":"Gen::Resource","name":"Resource","abstract":false,"locations":[{"filename":"src/lucky/tasks/gen/resource/browser.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/resource/browser.cr#L9"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Gen","kind":"module","full_name":"Gen","name":"Gen"},"types":[{"html_id":"avram/Gen/Resource/Browser","path":"Gen/Resource/Browser.html","kind":"class","full_name":"Gen::Resource::Browser","name":"Browser","abstract":false,"superclass":{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},"ancestors":[{"html_id":"avram/Gen/Mixins/MigrationWithColumns","kind":"module","full_name":"Gen::Mixins::MigrationWithColumns","name":"MigrationWithColumns"},{"html_id":"avram/LuckyTask/Task","kind":"class","full_name":"LuckyTask::Task","name":"Task"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/tasks/gen/resource/browser.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/resource/browser.cr#L9"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"PARSER_OPTS","name":"PARSER_OPTS","value":"[] of Symbol"}],"included_modules":[{"html_id":"avram/Gen/Mixins/MigrationWithColumns","kind":"module","full_name":"Gen::Mixins::MigrationWithColumns","name":"MigrationWithColumns"}],"namespace":{"html_id":"avram/Gen/Resource","kind":"module","full_name":"Gen::Resource","name":"Resource"},"class_methods":[{"html_id":"task_help_message:String-class-method","name":"task_help_message","doc":"The help text to be displayed when a help flag\nis passed in (e.g. -h, --help)\nUse the `help_message`","summary":"<p>The help text to be displayed when a help flag is passed in (e.g.</p>","abstract":false,"location":{"filename":"src/lucky/tasks/gen/resource/browser.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/resource/browser.cr#L13"},"def":{"name":"task_help_message","return_type":"String","visibility":"Public","body":"\"#{task_summary}\\n\\nRequires the name of the resource and list of database columns. Columns\\nare passed as column_name:ColumnType. Where ColumnType are one of the\\nsupported Avram datatypes.\\n\\nExample:\\n\\n  lucky gen.resource.browser Project title:String description:String? completed:Bool priority:Int32\""},"external_var":false},{"html_id":"task_name:String-class-method","name":"task_name","doc":"The name of your task as derived by the class name\nUse the `task_name` macro to define a custom task name","summary":"<p>The name of your task as derived by the class name Use the <code><a href=\"../../Gen/Resource/Browser.html#task_name%3AString-class-method\">.task_name</a></code> macro to define a custom task name</p>","abstract":false,"location":{"filename":"src/lucky/tasks/gen/resource/browser.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/resource/browser.cr#L9"},"def":{"name":"task_name","return_type":"String","visibility":"Public","body":"\"gen.resource.browser\""},"external_var":false},{"html_id":"task_summary:String-class-method","name":"task_summary","doc":"By default, task summaries are optional.\nUse the `summary` macro to define a custom summary","summary":"<p>By default, task summaries are optional.</p>","abstract":false,"location":{"filename":"src/lucky/tasks/gen/resource/browser.cr","line_number":12,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/resource/browser.cr#L12"},"def":{"name":"task_summary","return_type":"String","visibility":"Public","body":"\"Generate a resource (model, operation, query, actions, and pages)\""},"external_var":false}],"instance_methods":[{"html_id":"call-instance-method","name":"call","abstract":false,"location":{"filename":"src/lucky/tasks/gen/resource/browser.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/resource/browser.cr#L31"},"def":{"name":"call","visibility":"Public","body":"begin\n  validate!\n  generate_resource\n  output.puts(\"\\nYou will need to run the #{\"lucky db.migrate\".colorize.green} task next\")\n  display_path_to_resource\nrescue e : InvalidOption\n  output.puts(e.message.colorize.red)\nend"},"external_var":false},{"html_id":"option_parser:OptionParser-instance-method","name":"option_parser","abstract":false,"def":{"name":"option_parser","return_type":"OptionParser","visibility":"Public","body":"@option_parser"},"external_var":false},{"html_id":"option_parser=(option_parser:OptionParser)-instance-method","name":"option_parser=","abstract":false,"args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"args_string":"(option_parser : OptionParser)","args_html":"(option_parser : OptionParser)","def":{"name":"option_parser=","args":[{"name":"option_parser","external_name":"option_parser","restriction":"OptionParser"}],"visibility":"Public","body":"@option_parser = option_parser"},"external_var":false},{"html_id":"output:IO-instance-method","name":"output","abstract":false,"def":{"name":"output","return_type":"IO","visibility":"Public","body":"@output"},"external_var":false},{"html_id":"output=(output:IO)-instance-method","name":"output=","abstract":false,"args":[{"name":"output","external_name":"output","restriction":"IO"}],"args_string":"(output : IO)","args_html":"(output : IO)","def":{"name":"output=","args":[{"name":"output","external_name":"output","restriction":"IO"}],"visibility":"Public","body":"@output = output"},"external_var":false},{"html_id":"print_help_or_call(args:Array(String))-instance-method","name":"print_help_or_call","abstract":false,"args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"args_string":"(args : Array(String))","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../String.html\">String</a>))","location":{"filename":"src/lucky/tasks/gen/resource/browser.cr","line_number":9,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/resource/browser.cr#L9"},"def":{"name":"print_help_or_call","args":[{"name":"args","external_name":"args","restriction":"Array(String)"}],"visibility":"Public","body":"if wants_help_message?(args)\n  output.puts(self.class.task_help_message)\nelse\n  {% for opt in @type.constant(:PARSER_OPTS) %}\n        set_opt_for_{{ opt.id }}(args)\n        {% end %}\n  option_parser.parse(args)\n  call\nend"},"external_var":false}],"types":[{"html_id":"avram/Gen/Resource/Browser/InvalidOption","path":"Gen/Resource/Browser/InvalidOption.html","kind":"class","full_name":"Gen::Resource::Browser::InvalidOption","name":"InvalidOption","abstract":false,"superclass":{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"avram/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky/tasks/gen/resource/browser.cr","line_number":25,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/resource/browser.cr#L25"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Gen/Resource/Browser","kind":"class","full_name":"Gen::Resource::Browser","name":"Browser"},"constructors":[{"html_id":"new(message:String)-class-method","name":"new","abstract":false,"args":[{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : <a href=\"../../../String.html\">String</a>)","location":{"filename":"src/lucky/tasks/gen/resource/browser.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/lucky/tasks/gen/resource/browser.cr#L26"},"def":{"name":"new","args":[{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]}]}]}]},{"html_id":"avram/Int16","path":"Int16.html","kind":"struct","full_name":"Int16","name":"Int16","abstract":false,"superclass":{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"avram/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/lucky/src/charms/int16_extensions.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/lucky/src/charms/int16_extensions.cr#L3"},{"filename":"src/avram/blank_extensions.cr","line_number":13,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L13"},{"filename":"src/avram/charms/int16_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L2"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/avram/blank_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L14"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"self.nil?"},"external_var":false}],"types":[{"html_id":"avram/Int16/Lucky","path":"Int16/Lucky.html","kind":"module","full_name":"Int16::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/int16_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Int16","kind":"struct","full_name":"Int16","name":"Int16"},"class_methods":[{"html_id":"criteria(query:T,column:Symbol|String)forallT-class-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(query : T, column : Symbol | String) forall T","args_html":"(query : T, column : Symbol | <a href=\"../String.html\">String</a>) forall T","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L10"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"Criteria(T, Int16).new(query, column)"},"external_var":false}],"instance_methods":[{"html_id":"from_db!(value:Int16):Int16-instance-method","name":"from_db!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int16"}],"args_string":"(value : Int16) : Int16","args_html":"(value : <a href=\"../Int16.html\">Int16</a>) : <a href=\"../Int16.html\">Int16</a>","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L14"},"def":{"name":"from_db!","args":[{"name":"value","external_name":"value","restriction":"Int16"}],"return_type":"Int16","visibility":"Public","body":"value"},"external_var":false},{"html_id":"parse(value:Int16):SuccessfulCast(Int16)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int16"}],"args_string":"(value : Int16) : SuccessfulCast(Int16)","args_html":"(value : <a href=\"../Int16.html\">Int16</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Int16.html\">Int16</a>)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L18"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Int16"}],"return_type":"SuccessfulCast(Int16)","visibility":"Public","body":"SuccessfulCast(Int16).new(value)"},"external_var":false},{"html_id":"parse(values:Array(Int16)):SuccessfulCast(Array(Int16))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Int16)"}],"args_string":"(values : Array(Int16)) : SuccessfulCast(Array(Int16))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int16.html\">Int16</a>)) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Array.html\">Array</a>(<a href=\"../Int16.html\">Int16</a>))","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L22"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(Int16)"}],"return_type":"SuccessfulCast(Array(Int16))","visibility":"Public","body":"SuccessfulCast(Array(Int16)).new(values)"},"external_var":false},{"html_id":"parse(value:String)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L26"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"begin\n  SuccessfulCast(Int16).new(value.to_i16)\nrescue ArgumentError\n  FailedCast.new\nend"},"external_var":false},{"html_id":"parse(value:Int32)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L32"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"visibility":"Public","body":"begin\n  SuccessfulCast(Int16).new(value.to_i16)\nrescue OverflowError\n  FailedCast.new\nend"},"external_var":false},{"html_id":"to_db(value:Int16):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int16"}],"args_string":"(value : Int16) : String","args_html":"(value : <a href=\"../Int16.html\">Int16</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L38"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"Int16"}],"return_type":"String","visibility":"Public","body":"value.to_s"},"external_var":false},{"html_id":"to_db(values:Array(Int16))-instance-method","name":"to_db","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Int16)"}],"args_string":"(values : Array(Int16))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int16.html\">Int16</a>))","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":42,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L42"},"def":{"name":"to_db","args":[{"name":"values","external_name":"values","restriction":"Array(Int16)"}],"visibility":"Public","body":"PQ::Param.encode_array(values)"},"external_var":false}],"types":[{"html_id":"avram/Int16/Lucky/ColumnType","path":"Int16/Lucky/ColumnType.html","kind":"alias","full_name":"Int16::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/int16_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Int16","aliased_html":"<a href=\"../../Int16.html\">Int16</a>","const":false,"namespace":{"html_id":"avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"}},{"html_id":"avram/Int16/Lucky/Criteria","path":"Int16/Lucky/Criteria.html","kind":"class","full_name":"Int16::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/int16_extensions.cr","line_number":46,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L46"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"}],"namespace":{"html_id":"avram/Int16/Lucky","kind":"module","full_name":"Int16::Lucky","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"abs-instance-method","name":"abs","abstract":false,"location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":62,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L62"},"def":{"name":"abs","visibility":"Public","body":"Criteria(T, V).new(rows, \"ABS(#{column})\")"},"external_var":false},{"html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column &gt;= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":47,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L47"},"def":{"name":"between","args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"},"external_var":false},{"html_id":"select_sum:Int64|Nil-instance-method","name":"select_sum","abstract":false,"location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":49,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L49"},"def":{"name":"select_sum","return_type":"Int64 | ::Nil","visibility":"Public","body":"case sum = super()\nwhen PG::Numeric\n  sum.to_f.to_i64\nwhen Int\n  sum.to_i64\nend"},"external_var":false},{"html_id":"select_sum!:Int64-instance-method","name":"select_sum!","abstract":false,"location":{"filename":"src/avram/charms/int16_extensions.cr","line_number":58,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int16_extensions.cr#L58"},"def":{"name":"select_sum!","return_type":"Int64","visibility":"Public","body":"select_sum || 0_i64"},"external_var":false}]}]}]},{"html_id":"avram/Int32","path":"Int32.html","kind":"struct","full_name":"Int32","name":"Int32","abstract":false,"superclass":{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"avram/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/lucky/src/charms/int32_extensions.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/lucky/src/charms/int32_extensions.cr#L3"},{"filename":"src/avram/blank_extensions.cr","line_number":19,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L19"},{"filename":"src/avram/charms/int32_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L2"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/avram/blank_extensions.cr","line_number":20,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L20"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"self.nil?"},"external_var":false}],"types":[{"html_id":"avram/Int32/Lucky","path":"Int32/Lucky.html","kind":"module","full_name":"Int32::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/int32_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Int32","kind":"struct","full_name":"Int32","name":"Int32"},"class_methods":[{"html_id":"criteria(query:T,column:Symbol|String)forallT-class-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(query : T, column : Symbol | String) forall T","args_html":"(query : T, column : Symbol | <a href=\"../String.html\">String</a>) forall T","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L10"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"Criteria(T, Int32).new(query, column)"},"external_var":false}],"instance_methods":[{"html_id":"from_db!(value:Int32):Int32-instance-method","name":"from_db!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32) : Int32","args_html":"(value : <a href=\"../Int32.html\">Int32</a>) : <a href=\"../Int32.html\">Int32</a>","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L14"},"def":{"name":"from_db!","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"return_type":"Int32","visibility":"Public","body":"value"},"external_var":false},{"html_id":"parse(value:String)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L18"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"begin\n  SuccessfulCast(Int32).new(value.to_i)\nrescue ArgumentError\n  FailedCast.new\nend"},"external_var":false},{"html_id":"parse(value:Int32):SuccessfulCast(Int32)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32) : SuccessfulCast(Int32)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Int32.html\">Int32</a>)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":24,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L24"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"return_type":"SuccessfulCast(Int32)","visibility":"Public","body":"SuccessfulCast(Int32).new(value)"},"external_var":false},{"html_id":"parse(value:Int64)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","args_html":"(value : <a href=\"../Int64.html\">Int64</a>)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L28"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Int64"}],"visibility":"Public","body":"begin\n  SuccessfulCast(Int32).new(value.to_i32)\nrescue OverflowError\n  FailedCast.new\nend"},"external_var":false},{"html_id":"parse(values:Array(Int32)):SuccessfulCast(Array(Int32))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Int32)"}],"args_string":"(values : Array(Int32)) : SuccessfulCast(Array(Int32))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int32.html\">Int32</a>)) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Array.html\">Array</a>(<a href=\"../Int32.html\">Int32</a>))","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":34,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L34"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(Int32)"}],"return_type":"SuccessfulCast(Array(Int32))","visibility":"Public","body":"SuccessfulCast(Array(Int32)).new(values)"},"external_var":false},{"html_id":"to_db(value:Int32):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32) : String","args_html":"(value : <a href=\"../Int32.html\">Int32</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":38,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L38"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"return_type":"String","visibility":"Public","body":"value.to_s"},"external_var":false},{"html_id":"to_db(values:Array(Int32))-instance-method","name":"to_db","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Int32)"}],"args_string":"(values : Array(Int32))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int32.html\">Int32</a>))","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":42,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L42"},"def":{"name":"to_db","args":[{"name":"values","external_name":"values","restriction":"Array(Int32)"}],"visibility":"Public","body":"PQ::Param.encode_array(values)"},"external_var":false}],"types":[{"html_id":"avram/Int32/Lucky/ColumnType","path":"Int32/Lucky/ColumnType.html","kind":"alias","full_name":"Int32::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/int32_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Int32","aliased_html":"<a href=\"../../Int32.html\">Int32</a>","const":false,"namespace":{"html_id":"avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"}},{"html_id":"avram/Int32/Lucky/Criteria","path":"Int32/Lucky/Criteria.html","kind":"class","full_name":"Int32::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/IncludesCriteria","kind":"module","full_name":"Avram::IncludesCriteria","name":"IncludesCriteria"},{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/int32_extensions.cr","line_number":46,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L46"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/IncludesCriteria","kind":"module","full_name":"Avram::IncludesCriteria","name":"IncludesCriteria"}],"subclasses":[{"html_id":"avram/Enum/Lucky/Criteria","kind":"class","full_name":"Enum::Lucky::Criteria(T, V)","name":"Criteria"}],"namespace":{"html_id":"avram/Int32/Lucky","kind":"module","full_name":"Int32::Lucky","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"abs-instance-method","name":"abs","abstract":false,"location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":63,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L63"},"def":{"name":"abs","visibility":"Public","body":"Criteria(T, V).new(rows, \"ABS(#{column})\")"},"external_var":false},{"html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column &gt;= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":47,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L47"},"def":{"name":"between","args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"},"external_var":false},{"html_id":"includes(value):T-instance-method","name":"includes","doc":"WHERE `value` = ANY(column)","summary":"<p>WHERE <code>value</code> = ANY(column)</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L48"},"def":{"name":"includes","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"value = V.adapter.to_db!(value)\nadd_clause(Avram::Where::Includes.new(column, value))\n"},"external_var":false},{"html_id":"select_sum:Int64|Nil-instance-method","name":"select_sum","abstract":false,"location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":50,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L50"},"def":{"name":"select_sum","return_type":"Int64 | ::Nil","visibility":"Public","body":"case sum = super()\nwhen PG::Numeric\n  sum.to_f.to_i64\nwhen Int\n  sum.to_i64\nend"},"external_var":false},{"html_id":"select_sum!:Int64-instance-method","name":"select_sum!","abstract":false,"location":{"filename":"src/avram/charms/int32_extensions.cr","line_number":59,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int32_extensions.cr#L59"},"def":{"name":"select_sum!","return_type":"Int64","visibility":"Public","body":"select_sum || 0_i64"},"external_var":false}]}]}]},{"html_id":"avram/Int64","path":"Int64.html","kind":"struct","full_name":"Int64","name":"Int64","abstract":false,"superclass":{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"avram/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"avram/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"avram/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/lucky/src/charms/int64_extensions.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/lucky/src/charms/int64_extensions.cr#L3"},{"filename":"src/avram/blank_extensions.cr","line_number":25,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L25"},{"filename":"src/avram/charms/int64_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L2"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/avram/blank_extensions.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L26"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"self.nil?"},"external_var":false}],"types":[{"html_id":"avram/Int64/Lucky","path":"Int64/Lucky.html","kind":"module","full_name":"Int64::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/int64_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Int64","kind":"struct","full_name":"Int64","name":"Int64"},"class_methods":[{"html_id":"criteria(query:T,column:Symbol|String)forallT-class-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(query : T, column : Symbol | String) forall T","args_html":"(query : T, column : Symbol | <a href=\"../String.html\">String</a>) forall T","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L10"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"Criteria(T, Int64).new(query, column)"},"external_var":false}],"instance_methods":[{"html_id":"from_db!(value:Int64):Int64-instance-method","name":"from_db!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64) : Int64","args_html":"(value : <a href=\"../Int64.html\">Int64</a>) : <a href=\"../Int64.html\">Int64</a>","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L14"},"def":{"name":"from_db!","args":[{"name":"value","external_name":"value","restriction":"Int64"}],"return_type":"Int64","visibility":"Public","body":"value"},"external_var":false},{"html_id":"parse(value:Int64):SuccessfulCast(Int64)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64) : SuccessfulCast(Int64)","args_html":"(value : <a href=\"../Int64.html\">Int64</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Int64.html\">Int64</a>)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L18"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Int64"}],"return_type":"SuccessfulCast(Int64)","visibility":"Public","body":"SuccessfulCast(Int64).new(value)"},"external_var":false},{"html_id":"parse(values:Array(Int64)):SuccessfulCast(Array(Int64))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Int64)"}],"args_string":"(values : Array(Int64)) : SuccessfulCast(Array(Int64))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int64.html\">Int64</a>)) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Array.html\">Array</a>(<a href=\"../Int64.html\">Int64</a>))","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L22"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(Int64)"}],"return_type":"SuccessfulCast(Array(Int64))","visibility":"Public","body":"SuccessfulCast(Array(Int64)).new(values)"},"external_var":false},{"html_id":"parse(value:String)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L26"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"begin\n  SuccessfulCast(Int64).new(value.to_i64)\nrescue ArgumentError\n  FailedCast.new\nend"},"external_var":false},{"html_id":"parse(value:Int32):SuccessfulCast(Int64)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32) : SuccessfulCast(Int64)","args_html":"(value : <a href=\"../Int32.html\">Int32</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Int64.html\">Int64</a>)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L32"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Int32"}],"return_type":"SuccessfulCast(Int64)","visibility":"Public","body":"SuccessfulCast(Int64).new(value.to_i64)"},"external_var":false},{"html_id":"to_db(value:Int64):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64) : String","args_html":"(value : <a href=\"../Int64.html\">Int64</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L36"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"Int64"}],"return_type":"String","visibility":"Public","body":"value.to_s"},"external_var":false},{"html_id":"to_db(values:Array(Int64))-instance-method","name":"to_db","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Int64)"}],"args_string":"(values : Array(Int64))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Int64.html\">Int64</a>))","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L40"},"def":{"name":"to_db","args":[{"name":"values","external_name":"values","restriction":"Array(Int64)"}],"visibility":"Public","body":"PQ::Param.encode_array(values)"},"external_var":false}],"types":[{"html_id":"avram/Int64/Lucky/ColumnType","path":"Int64/Lucky/ColumnType.html","kind":"alias","full_name":"Int64::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/int64_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Int64","aliased_html":"<a href=\"../../Int64.html\">Int64</a>","const":false,"namespace":{"html_id":"avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"}},{"html_id":"avram/Int64/Lucky/Criteria","path":"Int64/Lucky/Criteria.html","kind":"class","full_name":"Int64::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/IncludesCriteria","kind":"module","full_name":"Avram::IncludesCriteria","name":"IncludesCriteria"},{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/int64_extensions.cr","line_number":44,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L44"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/IncludesCriteria","kind":"module","full_name":"Avram::IncludesCriteria","name":"IncludesCriteria"}],"namespace":{"html_id":"avram/Int64/Lucky","kind":"module","full_name":"Int64::Lucky","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"abs-instance-method","name":"abs","abstract":false,"location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":61,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L61"},"def":{"name":"abs","visibility":"Public","body":"Criteria(T, V).new(rows, \"ABS(#{column})\")"},"external_var":false},{"html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column &gt;= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":45,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L45"},"def":{"name":"between","args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"},"external_var":false},{"html_id":"includes(value):T-instance-method","name":"includes","doc":"WHERE `value` = ANY(column)","summary":"<p>WHERE <code>value</code> = ANY(column)</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":46,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L46"},"def":{"name":"includes","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"value = V.adapter.to_db!(value)\nadd_clause(Avram::Where::Includes.new(column, value))\n"},"external_var":false},{"html_id":"select_sum:Int64|Nil-instance-method","name":"select_sum","abstract":false,"location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L48"},"def":{"name":"select_sum","return_type":"Int64 | ::Nil","visibility":"Public","body":"case sum = super()\nwhen PG::Numeric\n  sum.to_f.to_i64\nwhen Int\n  sum.to_i64\nend"},"external_var":false},{"html_id":"select_sum!:Int64-instance-method","name":"select_sum!","abstract":false,"location":{"filename":"src/avram/charms/int64_extensions.cr","line_number":57,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/int64_extensions.cr#L57"},"def":{"name":"select_sum!","return_type":"Int64","visibility":"Public","body":"select_sum || 0_i64"},"external_var":false}]}]}]},{"html_id":"avram/JSONConverter","path":"JSONConverter.html","kind":"module","full_name":"JSONConverter(T)","name":"JSONConverter","abstract":false,"locations":[{"filename":"src/ext/pg/json_converter.cr","line_number":3,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/pg/json_converter.cr#L3"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"doc":"This is used for serialized JSON objects.\ne.g. `column theme : Theme, serialize: true`","summary":"<p>This is used for serialized JSON objects.</p>","class_methods":[{"html_id":"from_rs(rs:DB::ResultSet)-class-method","name":"from_rs","abstract":false,"args":[{"name":"rs","external_name":"rs","restriction":"DB::ResultSet"}],"args_string":"(rs : DB::ResultSet)","args_html":"(rs : DB::ResultSet)","location":{"filename":"src/ext/pg/json_converter.cr","line_number":4,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/ext/pg/json_converter.cr#L4"},"def":{"name":"from_rs","args":[{"name":"rs","external_name":"rs","restriction":"DB::ResultSet"}],"visibility":"Public","body":"value = rs.read(::Union(JSON::PullParser, ::Nil))\nif value\n  T.new(value)\nend\n"},"external_var":false}]},{"html_id":"avram/Nil","path":"Nil.html","kind":"struct","full_name":"Nil","name":"Nil","abstract":false,"superclass":{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/lucky/src/charms/object.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/lucky/src/charms/object.cr#L32"},{"filename":"src/avram/blank_extensions.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L37"},{"filename":"src/avram/object_extensions.cr","line_number":50,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L50"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"doc":"The `Nil` type has only one possible value: `nil`.\n\n`nil` is commonly used to represent the absence of a value.\nFor example, `String#index` returns the position of the character or `nil` if it's not\nin the string:\n\n```\nstr = \"Hello world\"\nstr.index 'e' # => 1\nstr.index 'a' # => nil\n```\n\nIn the above example, trying to invoke a method on the returned value will\ngive a compile time error unless both `Int32` and `Nil` define that method:\n\n```\nstr = \"Hello world\"\nidx = str.index 'e'\nidx + 1 # Error: undefined method '+' for Nil\n```\n\nThe language and the standard library provide short, readable, easy ways to deal with `nil`,\nsuch as `Object#try` and `Object#not_nil!`:\n\n```\nstr = \"Hello world\"\n\n# The index of 'e' in str or 0 if not found\nidx1 = str.index('e') || 0\n\nidx2 = str.index('a')\nif idx2\n  # Compiles: idx2 can't be nil here\n  idx2 + 1\nend\n\n# Tell the compiler that we are sure the returned\n# value is not nil: raises a runtime exception\n# if our assumption doesn't hold.\nidx3 = str.index('o').not_nil!\n```\n\nSee [`Nil` literal](https://crystal-lang.org/reference/syntax_and_semantics/literals/nil.html) in the language reference.","summary":"<p>The <code><a href=\"Nil.html\">Nil</a></code> type has only one possible value: <code>nil</code>.</p>","instance_methods":[{"html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","abstract":false,"location":{"filename":"src/avram/object_extensions.cr","line_number":55,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L55"},"def":{"name":"blank_for_validates_required?","return_type":"Bool","visibility":"Public","body":"blank?"},"external_var":false}]},{"html_id":"avram/Object","path":"Object.html","kind":"class","full_name":"Object","name":"Object","abstract":true,"ancestors":[{"html_id":"avram/Lucky/Memoizable","kind":"module","full_name":"Lucky::Memoizable","name":"Memoizable"},{"html_id":"avram/Lucky/QuickDef","kind":"module","full_name":"Lucky::QuickDef","name":"QuickDef"},{"html_id":"avram/Colorize/ObjectExtensions","kind":"module","full_name":"Colorize::ObjectExtensions","name":"ObjectExtensions"}],"locations":[{"filename":"lib/lucky/src/charms/object.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/lucky/src/charms/object.cr#L1"},{"filename":"src/avram/object_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Colorize/ObjectExtensions","kind":"module","full_name":"Colorize::ObjectExtensions","name":"ObjectExtensions"},{"html_id":"avram/Lucky/Memoizable","kind":"module","full_name":"Lucky::Memoizable","name":"Memoizable"},{"html_id":"avram/Lucky/QuickDef","kind":"module","full_name":"Lucky::QuickDef","name":"QuickDef"}],"doc":"`Object` is the base type of all Crystal objects.\n\n## Getters\n\nMultiple macros are available to easily declare, initialize and expose\ninstance variables as well as class variables on an `Object` by generating\nsimple accessor methods.\n\nFor example writing:\n\n```\nclass Person\n  getter name\nend\n```\n\nIs the same as writing:\n\n```\nclass Person\n  def name\n    @name\n  end\nend\n```\n\nSimilarly, we can write `class_getter name` to define a class variable, which\ngenerates a `def self.name` class method returning `@@name`.\n\nWe can define as many variables as necessary in a single call. For example\n`getter name, age, city` will create a getter method for each of `name`, `age`\nand `city`.\n\n### Type and initial value\n\nInstead of plain arguments, we can specify a type as well as an initial value.\nIf the initial value is simple enough Crystal should be able to infer the type\nof the instance or class variable!\n\nSpecifying a type will also declare the instance or class variable with said\ntype and type the accessor method arguments and return type accordingly.\n\nFor example writing:\n\n```\nclass Person\n  getter name : String\n  getter age = 0\n  getter city : String = \"unspecified\"\nend\n```\n\nIs the same as writing:\n\n```\nclass Person\n  @name : String\n  @age = 0\n  @city : String = \"unspecified\"\n\n  def name : String\n    @name\n  end\n\n  def age\n    @age\n  end\n\n  def city : String\n    @city\n  end\nend\n```\n\nThe initial value of an instance variable is automatically set when the object\nis constructed. The initial value of a class variable will be set when the\nprogram starts up.\n\n### Lazy initialization\n\nInstead of eagerly initializing the value, we can lazily initialize it the\nfirst time the accessor method is called.\n\nSince the variable will be lazily initialized the type of the variable will be\na nilable type. The generated method however will return the specified type\nonly (not a nilable).\n\nFor example writing:\n\n```\nclass Person\n  getter(city : City) { City.unspecified }\nend\n```\n\nIs equivalent to writing:\n\n```\nclass Person\n  @city : City?\n\n  def city : City\n    if (city == @city).nil?\n      @city = City.unspecified\n    else\n      city\n    end\n  end\nend\n```\n\n### Variants\n\nPlease refer to the different variants to understand how they differ from the\ngeneral overview presented above:\n\n- `getter`\n- `getter?`\n- `getter!`\n- `class_getter`\n- `class_getter?`\n- `class_getter!`\n\n## Setters\n\nThe `setter` and `class_setter` macros are the write counterparts of the\ngetter macros. They declare `name=(value)` accessor methods. The arguments\nbehave just as for the getter macros. Each setter can have a type as well as\nan initial value. There is no lazy initialization however since the macro\ndoesn't generate a getter method.\n\nFor example writing:\n\n```\nclass Person\n  setter name\n  setter age = 0\n  setter city : String = \"unspecified\"\nend\n```\n\nIs the same as writing:\n\n```\nclass Person\n  @age = 0\n  @city : String = \"unspecified\"\n\n  def name=(@name)\n  end\n\n  def age=(@age)\n  end\n\n  def city=(@city : String) : String\n  end\nend\n```\n\nFor class variables we'd have called `class_setter name` that would have\ngenerated a `def self.name=(@@name)` class method instead.\n\n## Properties\n\nThe property macros define both getter and setter methods at once.\n\nFor example writing:\n\n```\nclass Person\n  property name\nend\n```\n\nIs equivalent to writing:\n\n```\nclass Person\n  getter name\n  setter name\nend\n```\n\nWhich is the same as writing:\n\n```\nclass Person\n  def name\n    @name\n  end\n\n  def name=(@name)\n  end\nend\n```\n\nRefer to [Getters](#getters) and [Setters](#setters) above for details. The\nmacros take the exact same arguments.","summary":"<p><code><a href=\"Object.html\">Object</a></code> is the base type of all Crystal objects.</p>","instance_methods":[{"html_id":"blank_for_validates_required?:Bool-instance-method","name":"blank_for_validates_required?","abstract":false,"location":{"filename":"src/avram/object_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/object_extensions.cr#L14"},"def":{"name":"blank_for_validates_required?","return_type":"Bool","visibility":"Public","body":"blank?"},"external_var":false}]},{"html_id":"avram/Slice","path":"Slice.html","kind":"struct","full_name":"Slice(T)","name":"Slice","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Indexable/Mutable","kind":"module","full_name":"Indexable::Mutable","name":"Mutable"},{"html_id":"avram/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"avram/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"avram/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/blank_extensions.cr","line_number":61,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L61"},{"filename":"src/avram/charms/slice_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Indexable/Mutable","kind":"module","full_name":"Indexable::Mutable","name":"Mutable"}],"doc":"A `Slice` is a `Pointer` with an associated size.\n\nWhile a pointer is unsafe because no bound checks are performed when reading from and writing to it,\nreading from and writing to a slice involve bound checks.\nIn this way, a slice is a safe alternative to `Pointer`.\n\nA Slice can be created as read-only: trying to write to it\nwill raise. For example the slice of bytes returned by\n`String#to_slice` is read-only.","summary":"<p>A <code><a href=\"Slice.html\">Slice</a></code> is a <code>Pointer</code> with an associated size.</p>","class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/slice_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L2"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/avram/blank_extensions.cr","line_number":62,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L62"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"empty?"},"external_var":false}],"types":[{"html_id":"avram/Slice/Lucky","path":"Slice/Lucky.html","kind":"module","full_name":"Slice::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/slice_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Slice/Lucky","kind":"module","full_name":"Slice::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Slice","kind":"struct","full_name":"Slice(T)","name":"Slice"},"class_methods":[{"html_id":"criteria(query:T,column:Symbol|String)forallT-class-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(query : T, column : Symbol | String) forall T","args_html":"(query : T, column : Symbol | <a href=\"../String.html\">String</a>) forall T","location":{"filename":"src/avram/charms/slice_extensions.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L10"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"Criteria(T, Bytes).new(query, column)"},"external_var":false}],"instance_methods":[{"html_id":"from_db!(value:Bytes):Bytes-instance-method","name":"from_db!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bytes"}],"args_string":"(value : Bytes) : Bytes","args_html":"(value : Bytes) : Bytes","location":{"filename":"src/avram/charms/slice_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L14"},"def":{"name":"from_db!","args":[{"name":"value","external_name":"value","restriction":"Bytes"}],"return_type":"Bytes","visibility":"Public","body":"value"},"external_var":false},{"html_id":"parse(value:String)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/slice_extensions.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L18"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"parse(value.to_slice)"},"external_var":false},{"html_id":"parse(value:Bytes):SuccessfulCast(Bytes)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bytes"}],"args_string":"(value : Bytes) : SuccessfulCast(Bytes)","args_html":"(value : Bytes) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(Bytes)","location":{"filename":"src/avram/charms/slice_extensions.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L22"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Bytes"}],"return_type":"SuccessfulCast(Bytes)","visibility":"Public","body":"SuccessfulCast(Bytes).new(value)"},"external_var":false},{"html_id":"to_db(value:Bytes)-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Bytes"}],"args_string":"(value : Bytes)","args_html":"(value : Bytes)","location":{"filename":"src/avram/charms/slice_extensions.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L26"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"Bytes"}],"visibility":"Public","body":"ssize = (value.size * 2) + 2\nString.new(ssize) do |buffer|\n  buffer[0] = '\\\\'.ord.to_u8\n  buffer[1] = 'x'.ord.to_u8\n  value.hexstring(buffer + 2)\n  {ssize, ssize}\nend\n"},"external_var":false},{"html_id":"to_db(value:String):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : String","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/slice_extensions.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L36"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"String","visibility":"Public","body":"value"},"external_var":false}],"types":[{"html_id":"avram/Slice/Lucky/ColumnType","path":"Slice/Lucky/ColumnType.html","kind":"alias","full_name":"Slice::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/slice_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Slice(UInt8)","aliased_html":"<a href=\"../../Slice.html\">Slice(UInt8)</a>","const":false,"namespace":{"html_id":"avram/Slice/Lucky","kind":"module","full_name":"Slice::Lucky","name":"Lucky"}},{"html_id":"avram/Slice/Lucky/Criteria","path":"Slice/Lucky/Criteria.html","kind":"class","full_name":"Slice::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/slice_extensions.cr","line_number":40,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/slice_extensions.cr#L40"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"avram/Slice/Lucky","kind":"module","full_name":"Slice::Lucky","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}]}]}]},{"html_id":"avram/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/lucky/src/charms/string_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/lucky/src/charms/string_extensions.cr#L1"},{"filename":"src/avram/charms/string_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nSee [`String` literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/string.html) in the language reference.\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nA string might end up being composed of bytes which form an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but every\nbyte that doesn't start a valid UTF-8 byte sequence is interpreted as though\nit encodes the Unicode replacement character (U+FFFD) by itself. For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['�', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.\n\nNote that this interpretation only applies to methods inside Crystal; calling\n`#to_slice` or `#to_unsafe`, e.g. when passing a string to a C library, will\nexpose the invalid UTF-8 byte sequences. In particular, `Regex`'s underlying\nengine may reject strings that are not valid UTF-8, or it may invoke undefined\nbehavior on invalid strings. If this is undesired, `#scrub` could be used to\nremove the offending byte sequences first.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/string_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L2"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"types":[{"html_id":"avram/String/Lucky","path":"String/Lucky.html","kind":"module","full_name":"String::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/string_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/String","kind":"class","full_name":"String","name":"String"},"class_methods":[{"html_id":"criteria(query:T,column)forallT-class-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":""}],"args_string":"(query : T, column) forall T","args_html":"(query : <a href=\"../String.html\">T</a>, column) forall T","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L10"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":""}],"visibility":"Public","body":"Criteria(T, String).new(query, column)"},"external_var":false}],"instance_methods":[{"html_id":"parse(value:String):SuccessfulCast(String)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : SuccessfulCast(String)","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L14"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"SuccessfulCast(String)","visibility":"Public","body":"SuccessfulCast(String).new(value)"},"external_var":false},{"html_id":"parse(values:Array(String)):SuccessfulCast(Array(String))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String)) : SuccessfulCast(Array(String))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>)) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L18"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"return_type":"SuccessfulCast(Array(String))","visibility":"Public","body":"SuccessfulCast(Array(String)).new(values)"},"external_var":false},{"html_id":"to_db(value:String):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : String","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L22"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"String","visibility":"Public","body":"value"},"external_var":false},{"html_id":"to_db(values:Array(String))-instance-method","name":"to_db","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"args_string":"(values : Array(String))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../String.html\">String</a>))","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":26,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L26"},"def":{"name":"to_db","args":[{"name":"values","external_name":"values","restriction":"Array(String)"}],"visibility":"Public","body":"PQ::Param.encode_array(values)"},"external_var":false}],"types":[{"html_id":"avram/String/Lucky/ColumnType","path":"String/Lucky/ColumnType.html","kind":"alias","full_name":"String::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/string_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"String","aliased_html":"<a href=\"../../String.html\">String</a>","const":false,"namespace":{"html_id":"avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"}},{"html_id":"avram/String/Lucky/Criteria","path":"String/Lucky/Criteria.html","kind":"class","full_name":"String::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/IncludesCriteria","kind":"module","full_name":"Avram::IncludesCriteria","name":"IncludesCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/string_extensions.cr","line_number":30,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L30"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/IncludesCriteria","kind":"module","full_name":"Avram::IncludesCriteria","name":"IncludesCriteria"}],"namespace":{"html_id":"avram/String/Lucky","kind":"module","full_name":"String::Lucky","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"ilike(value:String):T-instance-method","name":"ilike","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : T","args_html":"(value : <a href=\"../../String.html\">String</a>) : T","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L37"},"def":{"name":"ilike","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::Ilike.new(column, value))"},"external_var":false},{"html_id":"includes(value):T-instance-method","name":"includes","doc":"WHERE `value` = ANY(column)","summary":"<p>WHERE <code>value</code> = ANY(column)</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":31,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L31"},"def":{"name":"includes","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"value = V.adapter.to_db!(value)\nadd_clause(Avram::Where::Includes.new(column, value))\n"},"external_var":false},{"html_id":"length-instance-method","name":"length","abstract":false,"location":{"filename":"src/avram/charms/string_extensions.cr","line_number":48,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L48"},"def":{"name":"length","visibility":"Public","body":"Criteria(T, Int64).new(rows, \"LENGTH(#{column})\")"},"external_var":false},{"html_id":"like(value:String):T-instance-method","name":"like","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : T","args_html":"(value : <a href=\"../../String.html\">String</a>) : T","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":33,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L33"},"def":{"name":"like","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::Like.new(column, value))"},"external_var":false},{"html_id":"lower-instance-method","name":"lower","abstract":false,"location":{"filename":"src/avram/charms/string_extensions.cr","line_number":46,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L46"},"def":{"name":"lower","visibility":"Public","body":"Criteria(T, V).new(rows, \"LOWER(#{column})\")"},"external_var":false},{"html_id":"match(value:String):T-instance-method","name":"match","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : T","args_html":"(value : <a href=\"../../String.html\">String</a>) : T","location":{"filename":"src/avram/charms/string_extensions.cr","line_number":41,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L41"},"def":{"name":"match","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"T","visibility":"Public","body":"add_clause(Avram::Where::TsMatch.new(column, value))"},"external_var":false},{"html_id":"reverse-instance-method","name":"reverse","abstract":false,"location":{"filename":"src/avram/charms/string_extensions.cr","line_number":49,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L49"},"def":{"name":"reverse","visibility":"Public","body":"Criteria(T, String).new(rows, \"REVERSE(#{column})\")"},"external_var":false},{"html_id":"to_tsquery-instance-method","name":"to_tsquery","abstract":false,"location":{"filename":"src/avram/charms/string_extensions.cr","line_number":51,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L51"},"def":{"name":"to_tsquery","visibility":"Public","body":"Criteria(T, String).new(rows, \"TO_TSQUERY(#{column})\")"},"external_var":false},{"html_id":"to_tsvector-instance-method","name":"to_tsvector","abstract":false,"location":{"filename":"src/avram/charms/string_extensions.cr","line_number":50,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L50"},"def":{"name":"to_tsvector","visibility":"Public","body":"Criteria(T, String).new(rows, \"TO_TSVECTOR(#{column})\")"},"external_var":false},{"html_id":"trim-instance-method","name":"trim","abstract":false,"location":{"filename":"src/avram/charms/string_extensions.cr","line_number":47,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L47"},"def":{"name":"trim","visibility":"Public","body":"Criteria(T, String).new(rows, \"TRIM(#{column})\")"},"external_var":false},{"html_id":"upper-instance-method","name":"upper","abstract":false,"location":{"filename":"src/avram/charms/string_extensions.cr","line_number":45,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/string_extensions.cr#L45"},"def":{"name":"upper","visibility":"Public","body":"Criteria(T, V).new(rows, \"UPPER(#{column})\")"},"external_var":false}]}]}]},{"html_id":"avram/Time","path":"Time.html","kind":"struct","full_name":"Time","name":"Time","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/blank_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L7"},{"filename":"src/avram/charms/time_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Steppable","kind":"module","full_name":"Steppable","name":"Steppable"}],"doc":"`Time` represents a date-time instant in\n[incremental time](https://www.w3.org/International/articles/definitions-time/#incremental_time)\nobserved in a specific time zone.\n\nThe calendaric calculations are based on the rules of the proleptic Gregorian\ncalendar as specified in [ISO 8601](http://xml.coverpages.org/ISO-FDIS-8601.pdf).\nLeap seconds are ignored.\n\nInternally, the time is stored as an `Int64` representing seconds from epoch\n(`0001-01-01 00:00:00.0 UTC`) and an `Int32` representing\nnanosecond-of-second with value range `0..999_999_999`.\n\nThe supported date range is `0001-01-01 00:00:00.0` to\n`9999-12-31 23:59:59.999_999_999` in any local time zone.\n\n### Telling the Time\n\nThere are several methods to retrieve a `Time` instance representing the\ncurrent time:\n\n```\nTime.utc                                        # returns the current time in UTC\nTime.local Time::Location.load(\"Europe/Berlin\") # returns the current time in time zone Europe/Berlin\nTime.local                                      # returns the current time in current time zone\n```\n\nIt is generally recommended to keep instances in UTC and only apply a\nlocal time zone when formatting for user display, unless the domain logic\nrequires having a specific time zone (for example for calendaric operations).\n\n### Creating a Specific Instant\n\n`Time` instances representing a specific instant can be created by\n`.utc` or `.new` with the date-time specified as individual arguments:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.to_s # => \"2016-02-15 10:20:30 UTC\"\ntime = Time.local(2016, 2, 15, 10, 20, 30, location: Time::Location.load(\"Europe/Berlin\"))\ntime.to_s # => \"2016-02-15 10:20:30 +01:00\"\n# The time-of-day can be omitted and defaults to midnight (start of day):\ntime = Time.utc(2016, 2, 15)\ntime.to_s # => \"2016-02-15 00:00:00 UTC\"\n```\n\n### Retrieving Time Information\n\nEach `Time` instance allows querying calendar data:\n\n```\ntime = Time.utc(2016, 2, 15, 10, 20, 30)\ntime.year        # => 2016\ntime.month       # => 2\ntime.day         # => 15\ntime.hour        # => 10\ntime.minute      # => 20\ntime.second      # => 30\ntime.millisecond # => 0\ntime.nanosecond  # => 0\ntime.day_of_week # => Time::DayOfWeek::Monday\ntime.day_of_year # => 46\ntime.monday?     # => true\ntime.time_of_day # => 10:20:30\n```\n\nFor querying if a time is at a specific day of week, `Time` offers named\npredicate methods, delegating to `#day_of_week`:\n\n```\ntime.monday? # => true\n# ...\ntime.sunday? # => false\n```\n\n### Time Zones\n\nEach time is attached to a specific time zone, represented by a `Location`\n(see `#location`).\n`#zone` returns the time zone observed in this location at the current time\n(i.e. the instant represented by this `Time`).\n`#offset` returns the offset of the current zone in seconds.\n\n```\ntime = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime          # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime.location # => #<Time::Location Europe/Berlin>\ntime.zone     # => #<Time::Location::Zone CET +01:00 (3600s) STD>\ntime.offset   # => 3600\n```\n\nUsing `.utc`, the location is `Time::Location::UTC`:\n\n```\ntime = Time.utc(2018, 3, 8, 22, 5, 13)\ntime          # => 2018-03-08 22:05:13.0 UTC\ntime.location # => #<Time::Location UTC>\ntime.zone     # => #<Time::Location::Zone UTC +00:00 (0s) STD>\ntime.offset   # => 0\n```\n\nA `Time` instance can be transformed to a different time zone while retaining\nthe same instant using `#in`:\n\n```\ntime_de = Time.local(2018, 3, 8, 22, 5, 13, location: Time::Location.load(\"Europe/Berlin\"))\ntime_ar = time_de.in Time::Location.load(\"America/Buenos_Aires\")\ntime_de # => 2018-03-08 22:05:13 +01:00 Europe/Berlin\ntime_ar # => 2018-03-08 18:05:13 -03:00 America/Buenos_Aires\n```\n\nBoth `Time` instances show a different local date-time, but they represent\nthe same date-time in the instant time-line, therefore they are considered\nequal:\n\n```\ntime_de.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_ar.to_utc     # => 2018-03-08 21:05:13 UTC\ntime_de == time_ar # => true\n```\n\nThere are also two special methods for converting to UTC and local time zone:\n\n```\ntime.to_utc   # equals time.in(Location::UTC)\ntime.to_local # equals time.in(Location.local)\n```\n\n`#to_local_in` allows changing the time zone while keeping\nthe same local date-time (wall clock) which results in a different instant\non the time line.\n\n### Formatting and Parsing Time\n\nTo make date-time instances exchangeable between different computer systems\nor readable to humans, they are usually converted to and from a string\nrepresentation.\n\nThe method `#to_s` formats the date-time according to a specified pattern.\n\n```\ntime = Time.utc(2015, 10, 12, 10, 30, 0)\ntime.to_s(\"%Y-%m-%d %H:%M:%S %:z\") # => \"2015-10-12 10:30:00 +00:00\"\n```\n\nSimilarly, `Time.parse` and `Time.parse!` are used to construct a `Time` instance from date-time\ninformation in a string, according to a specified pattern:\n\n```\nTime.parse(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\", Time::Location::UTC)\nTime.parse!(\"2015-10-12 10:30:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\")\n```\n\nSee `Time::Format` for all directives.\n\n### Calculations\n\n```\nTime.utc(2015, 10, 10) - 5.days # => 2015-10-05 00:00:00 +00:00\n\nspan = Time.utc(2015, 10, 10) - Time.utc(2015, 9, 10)\nspan.days          # => 30\nspan.total_hours   # => 720\nspan.total_minutes # => 43200\n```\n\n## Measuring Time\n\nThe typical time representation provided by the operating system is based on\na \"wall clock\" which is subject to changes for clock synchronization.\nThis can result in discontinuous jumps in the time-line making it not\nsuitable for accurately measuring elapsed time.\n\nInstances of `Time` are focused on telling time – using a \"wall clock\".\nWhen `Time.local` is called multiple times, the difference between the\nreturned instances is not guaranteed to equal to the time elapsed between\nmaking the calls; even the order of the returned `Time` instances might\nnot reflect invocation order.\n\n```\nt1 = Time.utc\n# operation that takes 1 minute\nt2 = Time.utc\nt2 - t1 # => ?\n```\n\nThe resulting `Time::Span` could be anything, even negative, if the\ncomputer's wall clock has changed between both calls.\n\nAs an alternative, the operating system also provides a monotonic clock.\nIts time-line has no specified starting point but is strictly linearly\nincreasing.\n\nThis monotonic clock should always be used for measuring elapsed time.\n\nA reading from this clock can be taken using `.monotonic`:\n\n```\nt1 = Time.monotonic\n# operation that takes 1 minute\nt2 = Time.monotonic\nt2 - t1 # => 1.minute (approximately)\n```\n\nThe execution time of a block can be measured using `.measure`:\n\n```\nelapsed_time = Time.measure do\n  # operation that takes 20 milliseconds\nend\nelapsed_time # => 20.milliseconds (approximately)\n```","summary":"<p><code><a href=\"Time.html\">Time</a></code> represents a date-time instant in <a href=\"https://www.w3.org/International/articles/definitions-time/#incremental_time\">incremental time</a> observed in a specific time zone.</p>","class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L2"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/avram/blank_extensions.cr","line_number":8,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L8"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"self.nil?"},"external_var":false}],"types":[{"html_id":"avram/Time/Lucky","path":"Time/Lucky.html","kind":"module","full_name":"Time::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/time_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"TIME_FORMATS","name":"TIME_FORMATS","value":"[Time::Format::ISO_8601_DATE_TIME, Time::Format::RFC_2822, Time::Format::RFC_3339, Time::Format.new(\"%Y-%m-%dT%H:%M:%S\", Time::Location::UTC), Time::Format.new(\"%Y-%m-%dT%H:%M\", Time::Location::UTC), Time::Format::HTTP_DATE, Time::Format::ISO_8601_DATE, Time::Format::ISO_8601_TIME]"}],"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/Time","kind":"struct","full_name":"Time","name":"Time"},"class_methods":[{"html_id":"criteria(query:T,column:Symbol|String)forallT-class-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(query : T, column : Symbol | String) forall T","args_html":"(query : <a href=\"../Time.html\">T</a>, column : Symbol | <a href=\"../String.html\">String</a>) forall T","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":25,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L25"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"Criteria(T, Time).new(query, column)"},"external_var":false},{"html_id":"try_parsing_with_default_formatters(value:String)-class-method","name":"try_parsing_with_default_formatters","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":42,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L42"},"def":{"name":"try_parsing_with_default_formatters","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"TIME_FORMATS.find do |format|\n  begin\n    format.parse(value)\n  rescue e : Time::Format::Error\n    nil\n  end\nend.try do |format|\n  SuccessfulCast.new((format.parse(value)).to_utc)\nend"},"external_var":false},{"html_id":"try_parsing_with_string_formats(value)-class-method","name":"try_parsing_with_string_formats","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":54,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L54"},"def":{"name":"try_parsing_with_string_formats","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"Avram.settings.time_formats.find do |format|\n  begin\n    Time.parse(value, format, Time::Location.load(\"UTC\"))\n  rescue e : Time::Format::Error\n    nil\n  end\nend.try do |format|\n  SuccessfulCast.new((Time.parse(value, format, Time::Location.load(\"UTC\"))).to_utc)\nend"},"external_var":false}],"instance_methods":[{"html_id":"from_db!(value:Time):Time-instance-method","name":"from_db!","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Time"}],"args_string":"(value : Time) : Time","args_html":"(value : <a href=\"../Time.html\">Time</a>) : <a href=\"../Time.html\">Time</a>","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":29,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L29"},"def":{"name":"from_db!","args":[{"name":"value","external_name":"value","restriction":"Time"}],"return_type":"Time","visibility":"Public","body":"value"},"external_var":false},{"html_id":"parse(value:String):SuccessfulCast(Time)|FailedCast-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : SuccessfulCast(Time) | FailedCast","args_html":"(value : <a href=\"../String.html\">String</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Time.html\">Time</a>) | <a href=\"../Avram/Type/FailedCast.html\">FailedCast</a>","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":33,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L33"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"SuccessfulCast(Time) | FailedCast","visibility":"Public","body":"((try_parsing_with_string_formats(value)) || (try_parsing_with_default_formatters(value))) || FailedCast.new"},"external_var":false},{"html_id":"parse(value:Time):SuccessfulCast(Time)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Time"}],"args_string":"(value : Time) : SuccessfulCast(Time)","args_html":"(value : <a href=\"../Time.html\">Time</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Time.html\">Time</a>)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":66,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L66"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"Time"}],"return_type":"SuccessfulCast(Time)","visibility":"Public","body":"SuccessfulCast(Time).new(value)"},"external_var":false},{"html_id":"parse(values:Array(Time)):SuccessfulCast(Array(Time))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(Time)"}],"args_string":"(values : Array(Time)) : SuccessfulCast(Array(Time))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../Time.html\">Time</a>)) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Array.html\">Array</a>(<a href=\"../Time.html\">Time</a>))","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":70,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L70"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(Time)"}],"return_type":"SuccessfulCast(Array(Time))","visibility":"Public","body":"SuccessfulCast(Array(Time)).new(values)"},"external_var":false},{"html_id":"to_db(value:Time):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Time"}],"args_string":"(value : Time) : String","args_html":"(value : <a href=\"../Time.html\">Time</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":74,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L74"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"Time"}],"return_type":"String","visibility":"Public","body":"value.to_s(\"%F %X.%6N %z\")"},"external_var":false}],"types":[{"html_id":"avram/Time/Lucky/ColumnType","path":"Time/Lucky/ColumnType.html","kind":"alias","full_name":"Time::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/time_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"Time","aliased_html":"<a href=\"../../Time.html\">Time</a>","const":false,"namespace":{"html_id":"avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"}},{"html_id":"avram/Time/Lucky/Criteria","path":"Time/Lucky/Criteria.html","kind":"class","full_name":"Time::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/ExtractCriteria","kind":"module","full_name":"Avram::ExtractCriteria","name":"ExtractCriteria"},{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/time_extensions.cr","line_number":78,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L78"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/BetweenCriteria","kind":"module","full_name":"Avram::BetweenCriteria","name":"BetweenCriteria"},{"html_id":"avram/Avram/ExtractCriteria","kind":"module","full_name":"Avram::ExtractCriteria","name":"ExtractCriteria"}],"namespace":{"html_id":"avram/Time/Lucky","kind":"module","full_name":"Time::Lucky","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"as_date-instance-method","name":"as_date","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":82,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L82"},"def":{"name":"as_date","visibility":"Public","body":"Criteria(T, String).new(rows, \"DATE(#{column})\")"},"external_var":false},{"html_id":"between(low_value:V,high_value:V)-instance-method","name":"between","doc":"WHERE @column >= `low_value` AND @column <= `high_value`","summary":"<p>WHERE @column &gt;= <code>low_value</code> AND @column &lt;= <code>high_value</code></p>","abstract":false,"args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"args_string":"(low_value : V, high_value : V)","args_html":"(low_value : V, high_value : V)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":79,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L79"},"def":{"name":"between","args":[{"name":"low_value","external_name":"low_value","restriction":"V"},{"name":"high_value","external_name":"high_value","restriction":"V"}],"visibility":"Public","body":"add_clauses([Avram::Where::GreaterThanOrEqualTo.new(@column, V.adapter.to_db!(low_value)), Avram::Where::LessThanOrEqualTo.new(@column, V.adapter.to_db!(high_value))])"},"external_var":false},{"html_id":"extract(chrono_unit:Avram::ChronoUnits)-instance-method","name":"extract","abstract":false,"args":[{"name":"chrono_unit","external_name":"chrono_unit","restriction":"Avram::ChronoUnits"}],"args_string":"(chrono_unit : Avram::ChronoUnits)","args_html":"(chrono_unit : <a href=\"../../Avram/ChronoUnits.html\">Avram::ChronoUnits</a>)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract","args":[{"name":"chrono_unit","external_name":"chrono_unit","restriction":"Avram::ChronoUnits"}],"visibility":"Public","body":"chrono_unit_in_sql_format = chrono_unit.to_s.underscore\napplied_operation = \"extract(#{chrono_unit_in_sql_format} from #{@column})\"\ncase chrono_unit\nwhen .julian?, .second?, .milliseconds?, .epoch?\n  Criteria(T, Float64).new(rows, applied_operation)\nelse\n  Criteria(T, Int32).new(rows, applied_operation)\nend\n"},"external_var":false},{"html_id":"extract(symbol:Symbol)-instance-method","name":"extract","abstract":false,"args":[{"name":"symbol","external_name":"symbol","restriction":"Symbol"}],"args_string":"(symbol : Symbol)","args_html":"(symbol : Symbol)","location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract","args":[{"name":"symbol","external_name":"symbol","restriction":"Symbol"}],"visibility":"Public","body":"if \"[century, day, decade, dow, doy, epoch, hour, isodow, isoyear, julian, microseconds, millennium, milliseconds, minute, month, quarter, second, timezone, timezone_hour, timezone_minute, week, year]\".includes?(symbol.to_s)\nelse\n  raise(ArgumentError.new(\"Illegal value #{symbol} as a chrono unit. Allowed values are [century, day, decade, dow, doy, epoch, hour, isodow, isoyear, julian, microseconds, millennium, milliseconds, minute, month, quarter, second, timezone, timezone_hour, timezone_minute, week, year]\"))\nend\nchrono_unit_enum_member = symbol.to_s.camelcase\nextract(Avram::ChronoUnits.parse(chrono_unit_enum_member))\n"},"external_var":false},{"html_id":"extract_century-instance-method","name":"extract_century","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_century","visibility":"Public","body":"extract(:century)"},"external_var":false},{"html_id":"extract_day-instance-method","name":"extract_day","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_day","visibility":"Public","body":"extract(:day)"},"external_var":false},{"html_id":"extract_decade-instance-method","name":"extract_decade","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_decade","visibility":"Public","body":"extract(:decade)"},"external_var":false},{"html_id":"extract_dow-instance-method","name":"extract_dow","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_dow","visibility":"Public","body":"extract(:dow)"},"external_var":false},{"html_id":"extract_doy-instance-method","name":"extract_doy","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_doy","visibility":"Public","body":"extract(:doy)"},"external_var":false},{"html_id":"extract_epoch-instance-method","name":"extract_epoch","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_epoch","visibility":"Public","body":"extract(:epoch)"},"external_var":false},{"html_id":"extract_hour-instance-method","name":"extract_hour","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_hour","visibility":"Public","body":"extract(:hour)"},"external_var":false},{"html_id":"extract_isodow-instance-method","name":"extract_isodow","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_isodow","visibility":"Public","body":"extract(:isodow)"},"external_var":false},{"html_id":"extract_isoyear-instance-method","name":"extract_isoyear","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_isoyear","visibility":"Public","body":"extract(:isoyear)"},"external_var":false},{"html_id":"extract_julian-instance-method","name":"extract_julian","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_julian","visibility":"Public","body":"extract(:julian)"},"external_var":false},{"html_id":"extract_microseconds-instance-method","name":"extract_microseconds","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_microseconds","visibility":"Public","body":"extract(:microseconds)"},"external_var":false},{"html_id":"extract_millennium-instance-method","name":"extract_millennium","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_millennium","visibility":"Public","body":"extract(:millennium)"},"external_var":false},{"html_id":"extract_milliseconds-instance-method","name":"extract_milliseconds","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_milliseconds","visibility":"Public","body":"extract(:milliseconds)"},"external_var":false},{"html_id":"extract_minute-instance-method","name":"extract_minute","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_minute","visibility":"Public","body":"extract(:minute)"},"external_var":false},{"html_id":"extract_month-instance-method","name":"extract_month","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_month","visibility":"Public","body":"extract(:month)"},"external_var":false},{"html_id":"extract_quarter-instance-method","name":"extract_quarter","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_quarter","visibility":"Public","body":"extract(:quarter)"},"external_var":false},{"html_id":"extract_second-instance-method","name":"extract_second","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_second","visibility":"Public","body":"extract(:second)"},"external_var":false},{"html_id":"extract_timezone-instance-method","name":"extract_timezone","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_timezone","visibility":"Public","body":"extract(:timezone)"},"external_var":false},{"html_id":"extract_timezone_hour-instance-method","name":"extract_timezone_hour","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_timezone_hour","visibility":"Public","body":"extract(:timezone_hour)"},"external_var":false},{"html_id":"extract_timezone_minute-instance-method","name":"extract_timezone_minute","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_timezone_minute","visibility":"Public","body":"extract(:timezone_minute)"},"external_var":false},{"html_id":"extract_week-instance-method","name":"extract_week","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_week","visibility":"Public","body":"extract(:week)"},"external_var":false},{"html_id":"extract_year-instance-method","name":"extract_year","abstract":false,"location":{"filename":"src/avram/charms/time_extensions.cr","line_number":80,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/time_extensions.cr#L80"},"def":{"name":"extract_year","visibility":"Public","body":"extract(:year)"},"external_var":false}]}]}]},{"html_id":"avram/UUID","path":"UUID.html","kind":"struct","full_name":"UUID","name":"UUID","abstract":false,"superclass":{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"},{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"avram/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/lucky/src/charms/uuid_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/lib/lucky/src/charms/uuid_extensions.cr#L1"},{"filename":"src/avram/blank_extensions.cr","line_number":49,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L49"},{"filename":"src/avram/charms/uuid_extensions.cr","line_number":1,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L1"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"avram/Lucky/AllowedInTags","kind":"module","full_name":"Lucky::AllowedInTags","name":"AllowedInTags"}],"doc":"Represents a UUID (Universally Unique IDentifier).\n\nNOTE: To use `UUID`, you must explicitly import it with `require \"uuid\"`","summary":"<p>Represents a UUID (Universally Unique IDentifier).</p>","class_methods":[{"html_id":"adapter-class-method","name":"adapter","abstract":false,"location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":2,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L2"},"def":{"name":"adapter","visibility":"Public","body":"Lucky"},"external_var":false}],"instance_methods":[{"html_id":"blank?:Bool-instance-method","name":"blank?","abstract":false,"location":{"filename":"src/avram/blank_extensions.cr","line_number":50,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/blank_extensions.cr#L50"},"def":{"name":"blank?","return_type":"Bool","visibility":"Public","body":"false"},"external_var":false}],"types":[{"html_id":"avram/UUID/Lucky","path":"UUID/Lucky.html","kind":"module","full_name":"UUID::Lucky","name":"Lucky","abstract":false,"ancestors":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"locations":[{"filename":"src/avram/charms/uuid_extensions.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L6"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/Type","kind":"module","full_name":"Avram::Type","name":"Type"}],"extended_modules":[{"html_id":"avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"}],"namespace":{"html_id":"avram/UUID","kind":"struct","full_name":"UUID","name":"UUID"},"class_methods":[{"html_id":"criteria(query:T,column:Symbol|String)forallT-class-method","name":"criteria","abstract":false,"args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(query : T, column : Symbol | String) forall T","args_html":"(query : <a href=\"../UUID.html\">T</a>, column : Symbol | <a href=\"../String.html\">String</a>) forall T","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":10,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L10"},"def":{"name":"criteria","args":[{"name":"query","external_name":"query","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"Criteria(T, UUID).new(query, column)"},"external_var":false}],"instance_methods":[{"html_id":"parse(value:UUID):SuccessfulCast(UUID)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"UUID"}],"args_string":"(value : UUID) : SuccessfulCast(UUID)","args_html":"(value : <a href=\"../UUID.html\">UUID</a>) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../UUID.html\">UUID</a>)","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":14,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L14"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"UUID"}],"return_type":"SuccessfulCast(UUID)","visibility":"Public","body":"SuccessfulCast(UUID).new(value)"},"external_var":false},{"html_id":"parse(values:Array(UUID)):SuccessfulCast(Array(UUID))-instance-method","name":"parse","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(UUID)"}],"args_string":"(values : Array(UUID)) : SuccessfulCast(Array(UUID))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../UUID.html\">UUID</a>)) : <a href=\"../Avram/Type/SuccessfulCast.html\">SuccessfulCast</a>(<a href=\"../Array.html\">Array</a>(<a href=\"../UUID.html\">UUID</a>))","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":18,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L18"},"def":{"name":"parse","args":[{"name":"values","external_name":"values","restriction":"Array(UUID)"}],"return_type":"SuccessfulCast(Array(UUID))","visibility":"Public","body":"SuccessfulCast(Array(UUID)).new(values)"},"external_var":false},{"html_id":"parse(value:String)-instance-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String)","args_html":"(value : <a href=\"../String.html\">String</a>)","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":22,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L22"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"begin\n  SuccessfulCast(UUID).new(UUID.new(value))\nrescue\n  FailedCast.new\nend"},"external_var":false},{"html_id":"to_db(value:UUID):String-instance-method","name":"to_db","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"UUID"}],"args_string":"(value : UUID) : String","args_html":"(value : <a href=\"../UUID.html\">UUID</a>) : <a href=\"../String.html\">String</a>","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":28,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L28"},"def":{"name":"to_db","args":[{"name":"value","external_name":"value","restriction":"UUID"}],"return_type":"String","visibility":"Public","body":"value.to_s"},"external_var":false},{"html_id":"to_db(values:Array(UUID))-instance-method","name":"to_db","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"Array(UUID)"}],"args_string":"(values : Array(UUID))","args_html":"(values : <a href=\"../Array.html\">Array</a>(<a href=\"../UUID.html\">UUID</a>))","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":32,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L32"},"def":{"name":"to_db","args":[{"name":"values","external_name":"values","restriction":"Array(UUID)"}],"visibility":"Public","body":"PQ::Param.encode_array(values)"},"external_var":false}],"types":[{"html_id":"avram/UUID/Lucky/ColumnType","path":"UUID/Lucky/ColumnType.html","kind":"alias","full_name":"UUID::Lucky::ColumnType","name":"ColumnType","abstract":false,"locations":[{"filename":"src/avram/charms/uuid_extensions.cr","line_number":7,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L7"}],"repository_name":"avram","program":false,"enum":false,"alias":true,"aliased":"UUID","aliased_html":"<a href=\"../../UUID.html\">UUID</a>","const":false,"namespace":{"html_id":"avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"}},{"html_id":"avram/UUID/Lucky/Criteria","path":"UUID/Lucky/Criteria.html","kind":"class","full_name":"UUID::Lucky::Criteria(T, V)","name":"Criteria","abstract":false,"superclass":{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},"ancestors":[{"html_id":"avram/Avram/IncludesCriteria","kind":"module","full_name":"Avram::IncludesCriteria","name":"IncludesCriteria"},{"html_id":"avram/Avram/Criteria","kind":"class","full_name":"Avram::Criteria","name":"Criteria"},{"html_id":"avram/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"avram/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/avram/charms/uuid_extensions.cr","line_number":36,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L36"}],"repository_name":"avram","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"avram/Avram/IncludesCriteria","kind":"module","full_name":"Avram::IncludesCriteria","name":"IncludesCriteria"}],"namespace":{"html_id":"avram/UUID/Lucky","kind":"module","full_name":"UUID::Lucky","name":"Lucky"},"constructors":[{"html_id":"new(rows:T,column:Symbol|String)-class-method","name":"new","abstract":false,"args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"args_string":"(rows : T, column : Symbol | String)","args_html":"(rows : T, column : Symbol | <a href=\"../../String.html\">String</a>)","location":{"filename":"src/avram/criteria.cr","line_number":6,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/criteria.cr#L6"},"def":{"name":"new","args":[{"name":"rows","external_name":"rows","restriction":"T"},{"name":"column","external_name":"column","restriction":"Symbol | String"}],"visibility":"Public","body":"_ = Criteria(T, V).allocate\n_.initialize(rows, column)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"includes(value):T-instance-method","name":"includes","doc":"WHERE `value` = ANY(column)","summary":"<p>WHERE <code>value</code> = ANY(column)</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : T","args_html":"(value) : T","location":{"filename":"src/avram/charms/uuid_extensions.cr","line_number":37,"url":"https://github.com/luckyframework/avram/blob/c2658a91d8e5fc7a5afdaa1a480d8f943cc4d666/src/avram/charms/uuid_extensions.cr#L37"},"def":{"name":"includes","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"T","visibility":"Public","body":"value = V.adapter.to_db!(value)\nadd_clause(Avram::Where::Includes.new(column, value))\n"},"external_var":false}]}]}]}]}}